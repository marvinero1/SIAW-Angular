{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport LooseBindsMap from \"./maps/looseBindsMap.mjs\";\nimport StrictBindsMap from \"./maps/strictBindsMap.mjs\";\nexport const PLUGIN_KEY = 'bindRowsWithHeaders';\nexport const PLUGIN_PRIORITY = 210;\nconst DEFAULT_BIND = 'loose';\nconst bindTypeToMapStrategy = new Map([['loose', LooseBindsMap], ['strict', StrictBindsMap]]);\n\n/**\n * @plugin BindRowsWithHeaders\n * @class BindRowsWithHeaders\n *\n * @description\n * Plugin allows binding the table rows with their headers.\n *\n * If the plugin is enabled, the table row headers will \"stick\" to the rows, when they are hidden/moved. Basically, if\n * at the initialization row 0 has a header titled \"A\", it will have it no matter what you do with the table.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // enable plugin\n *   bindRowsWithHeaders: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   bindRowsWithHeaders={true}\n * />\n * ```\n * :::\n */\nvar _onModifyRowHeader = /*#__PURE__*/new WeakSet();\nexport class BindRowsWithHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On modify row header listener.\n     *\n     * @param {number} row Row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeader);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexMap}\n     */\n    _defineProperty(this, \"headerIndexes\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link BindRowsWithHeaders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    let bindType = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof bindType !== 'string') {\n      bindType = DEFAULT_BIND;\n    }\n    const MapStrategy = bindTypeToMapStrategy.get(bindType);\n    this.headerIndexes = this.hot.rowIndexMapper.registerMap('bindRowsWithHeaders', new MapStrategy());\n    this.addHook('modifyRowHeader', row => _classPrivateMethodGet(this, _onModifyRowHeader, _onModifyRowHeader2).call(this, row));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('bindRowsWithHeaders');\n    super.disablePlugin();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeader2(row) {\n  return this.headerIndexes.getValueAtIndex(this.hot.toPhysicalRow(row));\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","privateCollection","has","TypeError","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","Number","_classPrivateMethodGet","receiver","fn","BasePlugin","LooseBindsMap","StrictBindsMap","PLUGIN_KEY","PLUGIN_PRIORITY","DEFAULT_BIND","bindTypeToMapStrategy","Map","_onModifyRowHeader","WeakSet","BindRowsWithHeaders","constructor","arguments","isEnabled","hot","getSettings","enablePlugin","enabled","bindType","MapStrategy","get","headerIndexes","rowIndexMapper","registerMap","addHook","row","_onModifyRowHeader2","disablePlugin","unregisterMap","destroy","getValueAtIndex","toPhysicalRow"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/bindRowsWithHeaders/bindRowsWithHeaders.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport LooseBindsMap from \"./maps/looseBindsMap.mjs\";\nimport StrictBindsMap from \"./maps/strictBindsMap.mjs\";\nexport const PLUGIN_KEY = 'bindRowsWithHeaders';\nexport const PLUGIN_PRIORITY = 210;\nconst DEFAULT_BIND = 'loose';\nconst bindTypeToMapStrategy = new Map([['loose', LooseBindsMap], ['strict', StrictBindsMap]]);\n\n/**\n * @plugin BindRowsWithHeaders\n * @class BindRowsWithHeaders\n *\n * @description\n * Plugin allows binding the table rows with their headers.\n *\n * If the plugin is enabled, the table row headers will \"stick\" to the rows, when they are hidden/moved. Basically, if\n * at the initialization row 0 has a header titled \"A\", it will have it no matter what you do with the table.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // enable plugin\n *   bindRowsWithHeaders: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   bindRowsWithHeaders={true}\n * />\n * ```\n * :::\n */\nvar _onModifyRowHeader = /*#__PURE__*/new WeakSet();\nexport class BindRowsWithHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On modify row header listener.\n     *\n     * @param {number} row Row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyRowHeader);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexMap}\n     */\n    _defineProperty(this, \"headerIndexes\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link BindRowsWithHeaders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    let bindType = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof bindType !== 'string') {\n      bindType = DEFAULT_BIND;\n    }\n    const MapStrategy = bindTypeToMapStrategy.get(bindType);\n    this.headerIndexes = this.hot.rowIndexMapper.registerMap('bindRowsWithHeaders', new MapStrategy());\n    this.addHook('modifyRowHeader', row => _classPrivateMethodGet(this, _onModifyRowHeader, _onModifyRowHeader2).call(this, row));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('bindRowsWithHeaders');\n    super.disablePlugin();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeader2(row) {\n  return this.headerIndexes.getValueAtIndex(this.hot.toPhysicalRow(row));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}