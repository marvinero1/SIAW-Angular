{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@services/log-service.service\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ngx-toastr\";\nimport * as i7 from \"@angular/material/snack-bar\";\nimport * as i8 from \"@components/mantenimiento/ventas/serviciovendedor/vendedor.service\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/datepicker\";\nimport * as i12 from \"@angular/material/button\";\nvar TalonarioRecibosEditComponent = /** @class */function () {\n  function TalonarioRecibosEditComponent(_formBuilder, dialog, log_module, dialogRef, datatalonEdit, api, datePipe, toastr, _snackBar, serviciovendedor) {\n    this._formBuilder = _formBuilder;\n    this.dialog = dialog;\n    this.log_module = log_module;\n    this.dialogRef = dialogRef;\n    this.datatalonEdit = datatalonEdit;\n    this.api = api;\n    this.datePipe = datePipe;\n    this.toastr = toastr;\n    this._snackBar = _snackBar;\n    this.serviciovendedor = serviciovendedor;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.talon_edit = [];\n    this.dataform = '';\n    this.talon = [];\n    this.inputValue = null;\n    this.inputValue1 = null;\n    this.inputValue2 = null;\n    this.vendedor_get = [];\n    this.ventana = \"talonario\";\n    this.detalle = \"talonario-edit\";\n    this.tipo = \"talonario-edit-PUT\";\n    this.FormularioDataEdit = this.createForm();\n  }\n  TalonarioRecibosEditComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.user_conn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.talon_edit = this.datatalonEdit.datatalonEdit;\n    this.serviciovendedor.disparadorDeVendedores.subscribe(function (data) {\n      console.log(\"Recibiendo Vendedor: \", data);\n      _this.talon_edit.codvendedor = data.vendedor;\n    });\n  };\n  TalonarioRecibosEditComponent.prototype.ngAfterViewInit = function () {\n    this.getVendedorCatalogo();\n  };\n  TalonarioRecibosEditComponent.prototype.getVendedorCatalogo = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.user_conn).subscribe({\n      next: function (datav) {\n        _this.vendedor_get = datav;\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TalonarioRecibosEditComponent.prototype.modalVendedor = function () {\n    this.dialog.open(ModalVendedorComponent, {\n      width: 'auto',\n      height: 'auto'\n    });\n  };\n  TalonarioRecibosEditComponent.prototype.onLeaveVendedor = function (event) {\n    var inputValue = event.target.value;\n    var entero = Number(inputValue);\n    // Verificar si el valor ingresado está presente en los objetos del array\n    var encontrado = this.vendedor_get.some(function (objeto) {\n      return objeto.codigo === entero;\n    });\n    if (!encontrado) {\n      // Si el valor no está en el array, dejar el campo vacío\n      event.target.value = '';\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\n    } else {\n      event.target.value = entero;\n    }\n  };\n  TalonarioRecibosEditComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.datatalonEdit.datatalonEdit.codigo],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      TalDel: [this.dataform.TalDel, Validators.pattern(/^-?\\d+$/)],\n      TalAl: [this.dataform.TalAl, Validators.pattern(/^-?\\d+$/)],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      Fecha: [this.dataform.Fecha, Validators.compose([Validators.required])],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      Usuarioreg: [usuario_logueado],\n      codvendedor: [this.dataform.codvendedor, Validators.compose([Validators.required])]\n    });\n  };\n  TalonarioRecibosEditComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioDataEdit.value;\n    this.errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:--  /ctsxcob/mant/cotalonario/ Update\";\n    return this.api.update('/ctsxcob/mant/cotalonario/' + this.user_conn + \"/\" + this.talon_edit.codigo, data).subscribe({\n      next: function (datav) {\n        _this.talon = datav;\n        _this.onNoClick();\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.toastr.success('! SE EDITO EXITOSAMENTE !');\n        location.reload();\n      },\n      error: function (err) {\n        _this.toastr.error('! NO SE EDITO !');\n        console.log(err, _this.errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TalonarioRecibosEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  TalonarioRecibosEditComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.talon_edit.nroactual = null;\n    }\n  };\n  TalonarioRecibosEditComponent.prototype.onInputChange1 = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue1 = parsedValue;\n    } else {\n      this.talon_edit.talDel = null;\n    }\n  };\n  TalonarioRecibosEditComponent.prototype.onInputChange2 = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue2 = parsedValue;\n    } else {\n      this.talon_edit.talAl = null;\n    }\n  };\n  TalonarioRecibosEditComponent.ɵfac = function TalonarioRecibosEditComponent_Factory(t) {\n    return new (t || TalonarioRecibosEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.LogService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.ToastrService), i0.ɵɵdirectiveInject(i7.MatSnackBar), i0.ɵɵdirectiveInject(i8.VendedorService));\n  };\n  TalonarioRecibosEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TalonarioRecibosEditComponent,\n    selectors: [[\"app-talonario-recibos-edit\"]],\n    decls: 55,\n    vars: 11,\n    consts: [[1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"color\", \"accent\", 1, \"example-full-small\", 2, \"display\", \"inline\"], [\"matInput\", \"\", \"formControlName\", \"Fecha\", 3, \"ngModel\", \"matDatepicker\", \"ngModelChange\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"color\", \"primary\"], [\"picker2\", \"\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"TalDel\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"TalAl\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"nroactual\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"codvendedor\", \"placeholder\", \"Vendedor\", 1, \"form-control\", \"form-control-sm\", 2, \"background-color\", \"transparent\", \"color\", \"black\", \"border\", \"1px solid #959595\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"form-control-sm\", 2, \"border-color\", \"#093070\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"appearance\", \"outline\", 1, \"example-full-width\", 2, \"display\", \"inline\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"descripcion\", \"maxlength\", \"20\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function TalonarioRecibosEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Los campos (*) son obligatorios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function TalonarioRecibosEditComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"mat-form-field\", 8)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Fecha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.talon_edit.fecha = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"mat-datepicker-toggle\", 10)(16, \"mat-datepicker\", 11, 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 6)(19, \"div\", 7)(20, \"mat-form-field\", 13)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Del \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 14);\n        i0.ɵɵlistener(\"input\", function TalonarioRecibosEditComponent_Template_input_input_23_listener($event) {\n          return ctx.onInputChange1($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.talon_edit.talDel = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 7)(25, \"mat-form-field\", 13)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Al \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 15);\n        i0.ɵɵlistener(\"input\", function TalonarioRecibosEditComponent_Template_input_input_28_listener($event) {\n          return ctx.onInputChange2($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.talon_edit.talAl = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(29, \"div\", 6)(30, \"div\", 7)(31, \"mat-form-field\", 13)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"N\\u00FAmero Actual \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"input\", 16);\n        i0.ɵɵlistener(\"input\", function TalonarioRecibosEditComponent_Template_input_input_34_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_34_listener($event) {\n          return ctx.talon_edit.nroactual = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 7)(36, \"div\", 17);\n        i0.ɵɵelementContainerStart(37);\n        i0.ɵɵelementStart(38, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.talon_edit.codvendedor = $event;\n        })(\"blur\", function TalonarioRecibosEditComponent_Template_input_blur_38_listener($event) {\n          return ctx.onLeaveVendedor($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(39, \"div\", 19)(40, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function TalonarioRecibosEditComponent_Template_button_click_40_listener() {\n          return ctx.modalVendedor();\n        });\n        i0.ɵɵelement(41, \"i\", 21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(42, \"div\", 6)(43, \"div\", 7)(44, \"mat-form-field\", 22)(45, \"mat-label\");\n        i0.ɵɵtext(46, \"Descripci\\u00F3n \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"input\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function TalonarioRecibosEditComponent_Template_input_ngModelChange_47_listener($event) {\n          return ctx.talon_edit.descripcion = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(48, \"div\", 24)(49, \"a\", 25);\n        i0.ɵɵlistener(\"click\", function TalonarioRecibosEditComponent_Template_a_click_49_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵelement(50, \"i\", 26);\n        i0.ɵɵtext(51, \" Atras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 27);\n        i0.ɵɵelement(53, \"i\", 28);\n        i0.ɵɵtext(54, \" Guardar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Editar Talonario de Recibos \", ctx.talon_edit.codigo, \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormularioDataEdit);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.fecha)(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.talDel);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.talAl);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.nroactual);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.codvendedor);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.talon_edit.descripcion);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.FormularioDataEdit.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i10.MatInput, i11.MatDatepicker, i11.MatDatepickerInput, i11.MatDatepickerToggle, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i12.MatAnchor, i12.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/cuentas-cobrar/talonario-recibos/talonario-recibos-edit/talonario-recibos-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2N1ZW50YXMtY29icmFyL3RhbG9uYXJpby1yZWNpYm9zL3RhbG9uYXJpby1yZWNpYm9zLWVkaXQvdGFsb25hcmlvLXJlY2lib3MtZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gIGZsb2F0OiByaWdodDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n  return TalonarioRecibosEditComponent;\n}();\nexport { TalonarioRecibosEditComponent };","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","ModalVendedorComponent","_formBuilder","dialog","log_module","dialogRef","datatalonEdit","api","datePipe","toastr","_snackBar","serviciovendedor","Date","FormularioDataEdit","createForm","TalonarioRecibosEditComponent","usuario_logueado","localStorage","getItem","undefined","JSON","parse","user_conn","talon_edit","disparadorDeVendedores","subscribe","console","log","data","_this","codvendedor","vendedor","getVendedorCatalogo","errorMessage","getAll","next","datav","vendedor_get","error","err","complete","open","width","height","event","inputValue","target","value","entero","Number","encontrado","some","codigo","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","descripcion","dataform","compose","required","TalDel","pattern","TalAl","nroactual","Fecha","horareg","fechareg","transform","fecha_actual","Usuarioreg","update","talon","onNoClick","guardarLog","ventana","detalle","tipo","success","location","reload","close","parsedValue","parseFloat","isNaN","isInteger","inputValue1","talDel","inputValue2","talAl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\talonario-recibos\\talonario-recibos-edit\\talonario-recibos-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\talonario-recibos\\talonario-recibos-edit\\talonario-recibos-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\r\nimport { VendedorService } from '@components/mantenimiento/ventas/serviciovendedor/vendedor.service';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-talonario-recibos-edit',\r\n  templateUrl: './talonario-recibos-edit.component.html',\r\n  styleUrls: ['./talonario-recibos-edit.component.scss']\r\n})\r\nexport class TalonarioRecibosEditComponent implements OnInit {\r\n\r\n  FormularioDataEdit:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  talon_edit:any=[];\r\n  dataform:any='';\r\n  talon:any=[];\r\n  usuario_logueado:any;\r\n  user_conn:any;\r\n  errorMessage;\r\n\r\n  inputValue: number | null = null;\r\n  inputValue1: number | null = null;\r\n  inputValue2: number | null = null;\r\n\r\n  vendedor_get: any = [];\r\n  cod_vendedor:any;\r\n\r\n  public ventana=\"talonario\"\r\n  public detalle=\"talonario-edit\";\r\n  public tipo=\"talonario-edit-PUT\";\r\n\r\n  constructor(private _formBuilder: FormBuilder, public dialog: MatDialog, public log_module:LogService, public dialogRef: MatDialogRef<TalonarioRecibosEditComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public datatalonEdit: any, private api:ApiService, private datePipe: DatePipe,private toastr: ToastrService,\r\n    public _snackBar: MatSnackBar, public serviciovendedor: VendedorService){\r\n    this.FormularioDataEdit = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n    this.user_conn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n\r\n    this.talon_edit = this.datatalonEdit.datatalonEdit;\r\n\r\n    this.serviciovendedor.disparadorDeVendedores.subscribe(data => {\r\n      console.log(\"Recibiendo Vendedor: \", data);\r\n      this.talon_edit.codvendedor = data.vendedor;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.getVendedorCatalogo();\r\n  }\r\n\r\n  \r\n  getVendedorCatalogo() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\r\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.user_conn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.vendedor_get = datav;\r\n        },\r\n                \r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => {}\r\n      })\r\n  }\r\n  \r\n  modalVendedor(): void {\r\n    this.dialog.open(ModalVendedorComponent, {\r\n      width: 'auto',\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  onLeaveVendedor(event: any) {\r\n    const inputValue = event.target.value;\r\n    let entero = Number(inputValue);\r\n\r\n    // Verificar si el valor ingresado está presente en los objetos del array\r\n    const encontrado = this.vendedor_get.some(objeto => objeto.codigo === entero);\r\n\r\n    if (!encontrado) {\r\n      // Si el valor no está en el array, dejar el campo vacío\r\n      event.target.value = '';\r\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\r\n    } else {\r\n      event.target.value = entero;\r\n    }\r\n  }\r\n\r\n  createForm(): FormGroup {\r\n    const usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.datatalonEdit.datatalonEdit.codigo],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n\r\n      TalDel: [this.dataform.TalDel,Validators.pattern(/^-?\\d+$/)],\r\n      TalAl: [this.dataform.TalAl,Validators.pattern(/^-?\\d+$/)],\r\n      nroactual: [this.dataform.nroactual,Validators.pattern(/^-?\\d+$/)],\r\n      Fecha: [this.dataform.Fecha,Validators.compose([Validators.required])],\r\n\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      Usuarioreg: [usuario_logueado],\r\n\r\n      codvendedor: [this.dataform.codvendedor,Validators.compose([Validators.required])],\r\n    });\r\n  } \r\n\r\n  submitData(){\r\n    let data = this.FormularioDataEdit.value;\r\n\r\n    this.errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:--  /ctsxcob/mant/cotalonario/ Update\";\r\n    return this.api.update('/ctsxcob/mant/cotalonario/'+this.user_conn+\"/\"+this.talon_edit.codigo, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.talon = datav;\r\n          this.onNoClick();\r\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n          this.toastr.success('! SE EDITO EXITOSAMENTE !');\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          this.toastr.error('! NO SE EDITO !');\r\n          console.log(err, this.errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onInputChange(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue = parsedValue;\r\n    } else {\r\n      this.talon_edit.nroactual = null;\r\n    }\r\n  }\r\n  onInputChange1(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue1 = parsedValue;\r\n    } else {\r\n      this.talon_edit.talDel = null;\r\n    }\r\n  }\r\n  onInputChange2(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue2 = parsedValue;\r\n    } else {\r\n      this.talon_edit.talAl = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"p-2\">\r\n  <h1 mat-dialog-title>Editar Talonario de Recibos {{ talon_edit.codigo }}</h1>\r\n  <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div><br>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <div class=\"container\">\r\n    <form class=\"example-form\" [formGroup]=\"FormularioDataEdit\" (ngSubmit)=\"submitData()\">\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field color=\"accent\" class=\"example-full-small\" style=\"display: inline;\">\r\n            <mat-label>Fecha</mat-label>\r\n            <input matInput formControlName=\"Fecha\" [(ngModel)]=\"talon_edit.fecha\" [matDatepicker]=\"picker2\">\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Del </mat-label>\r\n            <input type=\"number\" min=\"0\" step=\"1\" (input)=\"onInputChange1($event.target.value)\" matInput\r\n              formControlName=\"TalDel\" [(ngModel)]=\"talon_edit.talDel\" required>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Al </mat-label>\r\n            <input type=\"number\" min=\"0\" step=\"1\" (input)=\"onInputChange2($event.target.value)\" matInput\r\n              formControlName=\"TalAl\" [(ngModel)]=\"talon_edit.talAl\" required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Número Actual </mat-label>\r\n            <input type=\"number\" min=\"0\" step=\"1\" (input)=\"onInputChange($event.target.value)\" matInput\r\n              formControlName=\"nroactual\" [(ngModel)]=\"talon_edit.nroactual\" required>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md\">\r\n          <div class=\"input-group\">\r\n            <ng-container>\r\n              <input style=\"background-color: transparent; color: black; border: 1px solid #959595;\"\r\n               type=\"text\" class=\"form-control form-control-sm\" formControlName=\"codvendedor\"\r\n              placeholder=\"Vendedor\" [(ngModel)]=\"talon_edit.codvendedor\" (blur)=\"onLeaveVendedor($event)\">\r\n            </ng-container>\r\n        \r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-outline-primary form-control-sm\" type=\"button\" (click)=\"modalVendedor();\"\r\n                style=\"border-color: #093070;\"><i class=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"display: inline;\">\r\n            <mat-label>Descripción </mat-label>\r\n            <input type=\"text\" matInput formControlName=\"descripcion\" maxlength=\"20\"\r\n              [(ngModel)]=\"talon_edit.descripcion\" required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n        <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\r\n\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioDataEdit.valid\" type=\"submit\"><i\r\n            class=\"fa fa-save\"></i> Guardar</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}