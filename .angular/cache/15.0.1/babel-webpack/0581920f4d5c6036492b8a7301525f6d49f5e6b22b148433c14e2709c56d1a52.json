{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nlet _Symbol$iterator;\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nimport { createHighlight as createActiveHighlight } from \"./types/activeHeader.mjs\";\nimport { createHighlight as createAreaLayeredHighlight } from \"./types/areaLayered.mjs\";\nimport { createHighlight as createAreaHighlight } from \"./types/area.mjs\";\nimport { createHighlight as createColumnHighlight } from \"./types/column.mjs\";\nimport { createHighlight as createFocusHighlight } from \"./types/focus.mjs\";\nimport { createHighlight as createCustomHighlight } from \"./types/customSelection.mjs\";\nimport { createHighlight as createFillHighlight } from \"./types/fill.mjs\";\nimport { createHighlight as createHeaderHighlight } from \"./types/header.mjs\";\nimport { createHighlight as createRowHighlight } from \"./types/row.mjs\";\nimport { HIGHLIGHT_ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE, HIGHLIGHT_FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE, HIGHLIGHT_HEADER_TYPE, HIGHLIGHT_ROW_TYPE, HIGHLIGHT_COLUMN_TYPE } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\nexport { HIGHLIGHT_ACTIVE_HEADER_TYPE as ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE as AREA_TYPE, HIGHLIGHT_FOCUS_TYPE as FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE as CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE as FILL_TYPE, HIGHLIGHT_HEADER_TYPE as HEADER_TYPE, HIGHLIGHT_ROW_TYPE as ROW_TYPE, HIGHLIGHT_COLUMN_TYPE as COLUMN_TYPE };\n\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\nvar _createHighlight = /*#__PURE__*/new WeakSet();\n_Symbol$iterator = Symbol.iterator;\nclass Highlight {\n  constructor(options) {\n    /**\n     * Creates (if not exist in the cache) Walkontable Selection instance.\n     *\n     * @param {Map} cacheMap The map where the instance will be cached.\n     * @param {Function} highlightFactory The function factory.\n     * @returns {VisualSelection}\n     */\n    _classPrivateMethodInitSpec(this, _createHighlight);\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", void 0);\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n    _defineProperty(this, \"layerLevel\", 0);\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n    _defineProperty(this, \"focus\", void 0);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n    _defineProperty(this, \"fill\", void 0);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"layeredAreas\", new Map());\n    /**\n     * Collection of the `highlight` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"areas\", new Map());\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"rowHeaders\", new Map());\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"columnHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeRowHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeColumnHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the selected corner in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeCornerHeaders\", new Map());\n    /**\n     * Collection of the `rows` highlights. That objects describes attributes for the selection of\n     * the multiple selected cells in a row. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"rowHighlights\", new Map());\n    /**\n     * Collection of the `columns` highlights. That objects describes attributes for the selection of\n     * the multiple selected cells in a column. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"columnHighlights\", new Map());\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n    _defineProperty(this, \"customSelections\", []);\n    this.options = options;\n    this.focus = createFocusHighlight(options);\n    this.fill = createFillHighlight(options);\n  }\n\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n  isEnabledFor(highlightType, coords) {\n    let type = highlightType;\n\n    // Legacy compatibility.\n    if (highlightType === HIGHLIGHT_FOCUS_TYPE) {\n      type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n    }\n\n    let disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n    if (typeof disableHighlight === 'string') {\n      disableHighlight = [disableHighlight];\n    }\n    return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n  }\n\n  /**\n   * Set a new layer level to make access to the desire `area` and `header` highlights.\n   *\n   * @param {number} [level=0] Layer level to use.\n   * @returns {Highlight}\n   */\n  useLayerLevel() {\n    let level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    this.layerLevel = level;\n    return this;\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the currently\n   * focused cell (or header).\n   *\n   * @returns {Selection}\n   */\n  getFocus() {\n    return this.focus;\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n   *\n   * @returns {Selection}\n   */\n  getFill() {\n    return this.fill;\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * `area` highlights.\n   *\n   * @returns {Selection}\n   */\n  createLayeredArea() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.layeredAreas, createAreaLayeredHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n   *\n   * @returns {Selection[]}\n   */\n  getLayeredAreas() {\n    return [...this.layeredAreas.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * `highlight` highlights.\n   *\n   * @returns {Selection}\n   */\n  createArea() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.areas, createAreaHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n   *\n   * @returns {Selection[]}\n   */\n  getAreas() {\n    return [...this.areas.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * header highlight for rows.\n   *\n   * @returns {Selection}\n   */\n  createRowHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.rowHeaders, createHeaderHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n   *\n   * @returns {Selection[]}\n   */\n  getRowHeaders() {\n    return [...this.rowHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * header highlight for columns.\n   *\n   * @returns {Selection}\n   */\n  createColumnHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.columnHeaders, createHeaderHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n   *\n   * @returns {Selection[]}\n   */\n  getColumnHeaders() {\n    return [...this.columnHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for active row headers.\n   *\n   * @returns {Selection}\n   */\n  createActiveRowHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeRowHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveRowHeaders() {\n    return [...this.activeRowHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for active column headers.\n   *\n   * @returns {Selection}\n   */\n  createActiveColumnHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeColumnHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveColumnHeaders() {\n    return [...this.activeColumnHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for the headers corner.\n   *\n   * @returns {Selection}\n   */\n  createActiveCornerHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeCornerHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers corner.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveCornerHeaders() {\n    return [...this.activeCornerHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight cells in a row.\n   *\n   * @returns {Selection}\n   */\n  createRowHighlight() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.rowHighlights, createRowHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the rows highlighting.\n   *\n   * @returns {Selection[]}\n   */\n  getRowHighlights() {\n    return [...this.rowHighlights.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight cells in a column.\n   *\n   * @returns {Selection}\n   */\n  createColumnHighlight() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.columnHighlights, createColumnHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the columns highlighting.\n   *\n   * @returns {Selection[]}\n   */\n  getColumnHighlights() {\n    return [...this.columnHighlights.values()];\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n   *\n   * @returns {Selection}\n   */\n  getCustomSelections() {\n    return [...this.customSelections.values()];\n  }\n\n  /**\n   * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n   *\n   * @param {object} selectionInstance The selection instance.\n   */\n  addCustomSelection(selectionInstance) {\n    this.customSelections.push(createCustomHighlight({\n      ...this.options,\n      ...selectionInstance\n    }));\n  }\n\n  /**\n   * Perform cleaning visual highlights for the whole table.\n   */\n  clear() {\n    this.focus.clear();\n    this.fill.clear();\n    arrayEach(this.areas.values(), highlight => void highlight.clear());\n    arrayEach(this.layeredAreas.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeRowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeColumnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeCornerHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHighlights.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHighlights.values(), highlight => void highlight.clear());\n  }\n  /**\n   * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n   *\n   * @returns {Selection[]}\n   */\n  [_Symbol$iterator]() {\n    return [this.focus, this.fill, ...this.areas.values(), ...this.layeredAreas.values(), ...this.rowHeaders.values(), ...this.columnHeaders.values(), ...this.activeRowHeaders.values(), ...this.activeColumnHeaders.values(), ...this.activeCornerHeaders.values(), ...this.rowHighlights.values(), ...this.columnHighlights.values(), ...this.customSelections][Symbol.iterator]();\n  }\n}\nfunction _createHighlight2(cacheMap, highlightFactory) {\n  const layerLevel = this.layerLevel;\n  if (cacheMap.has(layerLevel)) {\n    return cacheMap.get(layerLevel);\n  }\n  const highlight = highlightFactory({\n    layerLevel,\n    ...this.options\n  });\n  cacheMap.set(layerLevel, highlight);\n  return highlight;\n}\nexport default Highlight;","map":{"version":3,"names":["_Symbol$iterator","_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","privateCollection","has","TypeError","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","Number","_classPrivateMethodGet","receiver","fn","createHighlight","createActiveHighlight","createAreaLayeredHighlight","createAreaHighlight","createColumnHighlight","createFocusHighlight","createCustomHighlight","createFillHighlight","createHeaderHighlight","createRowHighlight","HIGHLIGHT_ACTIVE_HEADER_TYPE","HIGHLIGHT_AREA_TYPE","HIGHLIGHT_FOCUS_TYPE","HIGHLIGHT_CUSTOM_SELECTION_TYPE","HIGHLIGHT_FILL_TYPE","HIGHLIGHT_HEADER_TYPE","HIGHLIGHT_ROW_TYPE","HIGHLIGHT_COLUMN_TYPE","arrayEach","ACTIVE_HEADER_TYPE","AREA_TYPE","FOCUS_TYPE","CUSTOM_SELECTION_TYPE","FILL_TYPE","HEADER_TYPE","ROW_TYPE","COLUMN_TYPE","_createHighlight","WeakSet","iterator","Highlight","constructor","options","Map","focus","fill","isEnabledFor","highlightType","coords","type","disableHighlight","disabledCellSelection","row","col","Array","isArray","includes","useLayerLevel","level","arguments","length","undefined","layerLevel","getFocus","getFill","createLayeredArea","_createHighlight2","layeredAreas","getLayeredAreas","values","createArea","areas","getAreas","createRowHeader","rowHeaders","getRowHeaders","createColumnHeader","columnHeaders","getColumnHeaders","createActiveRowHeader","activeRowHeaders","getActiveRowHeaders","createActiveColumnHeader","activeColumnHeaders","getActiveColumnHeaders","createActiveCornerHeader","activeCornerHeaders","getActiveCornerHeaders","rowHighlights","getRowHighlights","columnHighlights","getColumnHighlights","getCustomSelections","customSelections","addCustomSelection","selectionInstance","push","clear","highlight","cacheMap","highlightFactory","get","set"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/selection/highlight/highlight.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nlet _Symbol$iterator;\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { createHighlight as createActiveHighlight } from \"./types/activeHeader.mjs\";\nimport { createHighlight as createAreaLayeredHighlight } from \"./types/areaLayered.mjs\";\nimport { createHighlight as createAreaHighlight } from \"./types/area.mjs\";\nimport { createHighlight as createColumnHighlight } from \"./types/column.mjs\";\nimport { createHighlight as createFocusHighlight } from \"./types/focus.mjs\";\nimport { createHighlight as createCustomHighlight } from \"./types/customSelection.mjs\";\nimport { createHighlight as createFillHighlight } from \"./types/fill.mjs\";\nimport { createHighlight as createHeaderHighlight } from \"./types/header.mjs\";\nimport { createHighlight as createRowHighlight } from \"./types/row.mjs\";\nimport { HIGHLIGHT_ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE, HIGHLIGHT_FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE, HIGHLIGHT_HEADER_TYPE, HIGHLIGHT_ROW_TYPE, HIGHLIGHT_COLUMN_TYPE } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport { arrayEach } from \"./../../helpers/array.mjs\";\nexport { HIGHLIGHT_ACTIVE_HEADER_TYPE as ACTIVE_HEADER_TYPE, HIGHLIGHT_AREA_TYPE as AREA_TYPE, HIGHLIGHT_FOCUS_TYPE as FOCUS_TYPE, HIGHLIGHT_CUSTOM_SELECTION_TYPE as CUSTOM_SELECTION_TYPE, HIGHLIGHT_FILL_TYPE as FILL_TYPE, HIGHLIGHT_HEADER_TYPE as HEADER_TYPE, HIGHLIGHT_ROW_TYPE as ROW_TYPE, HIGHLIGHT_COLUMN_TYPE as COLUMN_TYPE };\n\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\nvar _createHighlight = /*#__PURE__*/new WeakSet();\n_Symbol$iterator = Symbol.iterator;\nclass Highlight {\n  constructor(options) {\n    /**\n     * Creates (if not exist in the cache) Walkontable Selection instance.\n     *\n     * @param {Map} cacheMap The map where the instance will be cached.\n     * @param {Function} highlightFactory The function factory.\n     * @returns {VisualSelection}\n     */\n    _classPrivateMethodInitSpec(this, _createHighlight);\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", void 0);\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {number}\n     * @default 0\n     */\n    _defineProperty(this, \"layerLevel\", 0);\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n    _defineProperty(this, \"focus\", void 0);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n    _defineProperty(this, \"fill\", void 0);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"layeredAreas\", new Map());\n    /**\n     * Collection of the `highlight` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"areas\", new Map());\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"rowHeaders\", new Map());\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"columnHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeRowHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeColumnHeaders\", new Map());\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the selected corner in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"activeCornerHeaders\", new Map());\n    /**\n     * Collection of the `rows` highlights. That objects describes attributes for the selection of\n     * the multiple selected cells in a row. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"rowHighlights\", new Map());\n    /**\n     * Collection of the `columns` highlights. That objects describes attributes for the selection of\n     * the multiple selected cells in a column. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n    _defineProperty(this, \"columnHighlights\", new Map());\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n    _defineProperty(this, \"customSelections\", []);\n    this.options = options;\n    this.focus = createFocusHighlight(options);\n    this.fill = createFillHighlight(options);\n  }\n\n  /**\n   * Check if highlight cell rendering is disabled for specified highlight type.\n   *\n   * @param {string} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n   * @returns {boolean}\n   */\n  isEnabledFor(highlightType, coords) {\n    let type = highlightType;\n\n    // Legacy compatibility.\n    if (highlightType === HIGHLIGHT_FOCUS_TYPE) {\n      type = 'current'; // One from settings for `disableVisualSelection` up to Handsontable 0.36/Handsontable Pro 1.16.0.\n    }\n    let disableHighlight = this.options.disabledCellSelection(coords.row, coords.col);\n    if (typeof disableHighlight === 'string') {\n      disableHighlight = [disableHighlight];\n    }\n    return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n  }\n\n  /**\n   * Set a new layer level to make access to the desire `area` and `header` highlights.\n   *\n   * @param {number} [level=0] Layer level to use.\n   * @returns {Highlight}\n   */\n  useLayerLevel() {\n    let level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    this.layerLevel = level;\n    return this;\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the currently\n   * focused cell (or header).\n   *\n   * @returns {Selection}\n   */\n  getFocus() {\n    return this.focus;\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n   *\n   * @returns {Selection}\n   */\n  getFill() {\n    return this.fill;\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * `area` highlights.\n   *\n   * @returns {Selection}\n   */\n  createLayeredArea() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.layeredAreas, createAreaLayeredHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n   *\n   * @returns {Selection[]}\n   */\n  getLayeredAreas() {\n    return [...this.layeredAreas.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * `highlight` highlights.\n   *\n   * @returns {Selection}\n   */\n  createArea() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.areas, createAreaHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n   *\n   * @returns {Selection[]}\n   */\n  getAreas() {\n    return [...this.areas.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * header highlight for rows.\n   *\n   * @returns {Selection}\n   */\n  createRowHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.rowHeaders, createHeaderHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n   *\n   * @returns {Selection[]}\n   */\n  getRowHeaders() {\n    return [...this.rowHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * header highlight for columns.\n   *\n   * @returns {Selection}\n   */\n  createColumnHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.columnHeaders, createHeaderHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n   *\n   * @returns {Selection[]}\n   */\n  getColumnHeaders() {\n    return [...this.columnHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for active row headers.\n   *\n   * @returns {Selection}\n   */\n  createActiveRowHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeRowHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveRowHeaders() {\n    return [...this.activeRowHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for active column headers.\n   *\n   * @returns {Selection}\n   */\n  createActiveColumnHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeColumnHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveColumnHeaders() {\n    return [...this.activeColumnHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight for the headers corner.\n   *\n   * @returns {Selection}\n   */\n  createActiveCornerHeader() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.activeCornerHeaders, createActiveHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers corner.\n   *\n   * @returns {Selection[]}\n   */\n  getActiveCornerHeaders() {\n    return [...this.activeCornerHeaders.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight cells in a row.\n   *\n   * @returns {Selection}\n   */\n  createRowHighlight() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.rowHighlights, createRowHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the rows highlighting.\n   *\n   * @returns {Selection[]}\n   */\n  getRowHighlights() {\n    return [...this.rowHighlights.values()];\n  }\n\n  /**\n   * Creates (if not exist in the cache) Walkontable Selection instance created for controlling\n   * highlight cells in a column.\n   *\n   * @returns {Selection}\n   */\n  createColumnHighlight() {\n    return _classPrivateMethodGet(this, _createHighlight, _createHighlight2).call(this, this.columnHighlights, createColumnHighlight);\n  }\n\n  /**\n   * Get all Walkontable Selection instances which describes the state of the columns highlighting.\n   *\n   * @returns {Selection[]}\n   */\n  getColumnHighlights() {\n    return [...this.columnHighlights.values()];\n  }\n\n  /**\n   * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n   *\n   * @returns {Selection}\n   */\n  getCustomSelections() {\n    return [...this.customSelections.values()];\n  }\n\n  /**\n   * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n   *\n   * @param {object} selectionInstance The selection instance.\n   */\n  addCustomSelection(selectionInstance) {\n    this.customSelections.push(createCustomHighlight({\n      ...this.options,\n      ...selectionInstance\n    }));\n  }\n\n  /**\n   * Perform cleaning visual highlights for the whole table.\n   */\n  clear() {\n    this.focus.clear();\n    this.fill.clear();\n    arrayEach(this.areas.values(), highlight => void highlight.clear());\n    arrayEach(this.layeredAreas.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeRowHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeColumnHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.activeCornerHeaders.values(), highlight => void highlight.clear());\n    arrayEach(this.rowHighlights.values(), highlight => void highlight.clear());\n    arrayEach(this.columnHighlights.values(), highlight => void highlight.clear());\n  }\n  /**\n   * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n   *\n   * @returns {Selection[]}\n   */\n  [_Symbol$iterator]() {\n    return [this.focus, this.fill, ...this.areas.values(), ...this.layeredAreas.values(), ...this.rowHeaders.values(), ...this.columnHeaders.values(), ...this.activeRowHeaders.values(), ...this.activeColumnHeaders.values(), ...this.activeCornerHeaders.values(), ...this.rowHighlights.values(), ...this.columnHighlights.values(), ...this.customSelections][Symbol.iterator]();\n  }\n}\nfunction _createHighlight2(cacheMap, highlightFactory) {\n  const layerLevel = this.layerLevel;\n  if (cacheMap.has(layerLevel)) {\n    return cacheMap.get(layerLevel);\n  }\n  const highlight = highlightFactory({\n    layerLevel,\n    ...this.options\n  });\n  cacheMap.set(layerLevel, highlight);\n  return highlight;\n}\nexport default Highlight;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}