{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nimport { defineGetter, objectEach } from \"../../helpers/object.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { getPluginsNames, hasPlugin } from \"../registry.mjs\";\nimport { hasCellType } from \"../../cellTypes/registry.mjs\";\nimport { hasEditor } from \"../../editors/registry.mjs\";\nimport { hasRenderer } from \"../../renderers/registry.mjs\";\nimport { hasValidator } from \"../../validators/registry.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nconst DEPS_TYPE_CHECKERS = new Map([['plugin', hasPlugin], ['cell-type', hasCellType], ['editor', hasEditor], ['renderer', hasRenderer], ['validator', hasValidator]]);\nexport const PLUGIN_KEY = 'base';\nconst missingDepsMsgs = [];\nlet initializedPlugins = null;\n\n/**\n * @util\n * @property {Core} hot Handsontable instance.\n */\nvar _hooks = /*#__PURE__*/new WeakMap();\nvar _isRelevantToSettings = /*#__PURE__*/new WeakSet();\nexport class BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n\n  /**\n   * The `SETTING_KEYS` getter defines the keys that, when present in the config object, trigger the plugin update\n   * after the `updateSettings` calls.\n   * - When it returns `true`, the plugin updates after all `updateSettings` calls, regardless of the contents of the\n   * config object.\n   * - When it returns `false`, the plugin never updates on `updateSettings` calls.\n   *\n   * @returns {string[] | boolean}\n   */\n  static get SETTING_KEYS() {\n    return [this.PLUGIN_KEY];\n  }\n\n  /**\n   * The instance of the {@link EventManager} class.\n   *\n   * @type {EventManager}\n   */\n\n  /**\n   * @param {object} hotInstance Handsontable instance.\n   */\n  constructor(hotInstance) {\n    /**\n     * Check if any of the keys defined in `SETTING_KEYS` configuration of the plugin is present in the provided\n     * config object, or if the `SETTING_KEYS` configuration states that the plugin is relevant to the config object\n     * regardless of its contents.\n     *\n     * @private\n     * @param {Handsontable.DefaultSettings} settings The config object passed to `updateSettings`.\n     * @returns {boolean}\n     */\n    _classPrivateMethodInitSpec(this, _isRelevantToSettings);\n    _defineProperty(this, \"eventManager\", new EventManager(this));\n    /**\n     * @type {string}\n     */\n    _defineProperty(this, \"pluginName\", null);\n    /**\n     * @type {Function[]}\n     */\n    _defineProperty(this, \"pluginsInitializedCallbacks\", []);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"isPluginsReady\", false);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"enabled\", false);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"initialized\", false);\n    /**\n     * Collection of the reference to the plugins hooks.\n     */\n    _classPrivateFieldInitSpec(this, _hooks, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    defineGetter(this, 'hot', hotInstance, {\n      writable: false\n    });\n    initializedPlugins = null;\n    this.hot.addHook('afterPluginsInitialized', () => this.onAfterPluginsInitialized());\n    this.hot.addHook('afterUpdateSettings', newSettings => this.onUpdateSettings(newSettings));\n    this.hot.addHook('beforeInit', () => this.init());\n  }\n  init() {\n    this.pluginName = this.hot.getPluginName(this);\n    const pluginDeps = this.constructor.PLUGIN_DEPS;\n    const deps = Array.isArray(pluginDeps) ? pluginDeps : [];\n    if (deps.length > 0) {\n      const missingDependencies = [];\n      deps.forEach(dependency => {\n        const [type, moduleName] = dependency.split(':');\n        if (!DEPS_TYPE_CHECKERS.has(type)) {\n          throw new Error(`Unknown plugin dependency type \"${type}\" was found.`);\n        }\n        if (!DEPS_TYPE_CHECKERS.get(type)(moduleName)) {\n          missingDependencies.push(` - ${moduleName} (${type})`);\n        }\n      });\n      if (missingDependencies.length > 0) {\n        const errorMsg = [`The ${this.pluginName} plugin requires the following modules:\\n`, `${missingDependencies.join('\\n')}\\n`].join('');\n        missingDepsMsgs.push(errorMsg);\n      }\n    }\n    if (!initializedPlugins) {\n      initializedPlugins = getPluginsNames();\n    }\n\n    // Workaround for the UndoRedo plugin which, currently doesn't follow the plugin architecture.\n    // Without this line the `callOnPluginsReady` callback won't be triggered after all plugin\n    // initialization.\n    if (initializedPlugins.indexOf('UndoRedo') >= 0) {\n      initializedPlugins.splice(initializedPlugins.indexOf('UndoRedo'), 1);\n    }\n    if (initializedPlugins.indexOf(this.pluginName) >= 0) {\n      initializedPlugins.splice(initializedPlugins.indexOf(this.pluginName), 1);\n    }\n    this.hot.addHookOnce('afterPluginsInitialized', () => {\n      if (this.isEnabled && this.isEnabled()) {\n        this.enablePlugin();\n      }\n    });\n    const isAllPluginsAreInitialized = initializedPlugins.length === 0;\n    if (isAllPluginsAreInitialized) {\n      if (missingDepsMsgs.length > 0) {\n        const errorMsg = [`${missingDepsMsgs.join('\\n')}\\n`, 'You have to import and register them manually.'].join('');\n        throw new Error(errorMsg);\n      }\n      this.hot.runHooks('afterPluginsInitialized');\n    }\n    this.initialized = true;\n  }\n\n  /**\n   * Enable plugin for this Handsontable instance.\n   */\n  enablePlugin() {\n    this.enabled = true;\n  }\n\n  /**\n   * Disable plugin for this Handsontable instance.\n   */\n  disablePlugin() {\n    var _this$eventManager;\n    (_this$eventManager = this.eventManager) === null || _this$eventManager === void 0 || _this$eventManager.clear();\n    this.clearHooks();\n    this.enabled = false;\n  }\n\n  /**\n   * Add listener to plugin hooks system.\n   *\n   * @param {string} name The hook name.\n   * @param {Function} callback The listener function to add.\n   */\n  addHook(name, callback) {\n    _classPrivateFieldGet(this, _hooks)[name] = _classPrivateFieldGet(this, _hooks)[name] || [];\n    const hooks = _classPrivateFieldGet(this, _hooks)[name];\n    this.hot.addHook(name, callback);\n    hooks.push(callback);\n    _classPrivateFieldGet(this, _hooks)[name] = hooks;\n  }\n\n  /**\n   * Remove all hooks listeners by hook name.\n   *\n   * @param {string} name The hook name.\n   */\n  removeHooks(name) {\n    arrayEach(_classPrivateFieldGet(this, _hooks)[name] || [], callback => {\n      this.hot.removeHook(name, callback);\n    });\n  }\n\n  /**\n   * Clear all hooks.\n   */\n  clearHooks() {\n    const hooks = _classPrivateFieldGet(this, _hooks);\n    objectEach(hooks, (callbacks, name) => this.removeHooks(name));\n    hooks.length = 0;\n  }\n\n  /**\n   * Register function which will be immediately called after all plugins initialized.\n   *\n   * @param {Function} callback The listener function to call.\n   */\n  callOnPluginsReady(callback) {\n    if (this.isPluginsReady) {\n      callback();\n    } else {\n      this.pluginsInitializedCallbacks.push(callback);\n    }\n  }\n  /**\n   * On after plugins initialized listener.\n   *\n   * @private\n   */\n  onAfterPluginsInitialized() {\n    arrayEach(this.pluginsInitializedCallbacks, callback => callback());\n    this.pluginsInitializedCallbacks.length = 0;\n    this.isPluginsReady = true;\n  }\n\n  /**\n   * On update settings listener.\n   *\n   * @private\n   * @param {object} newSettings New set of settings passed to the `updateSettings` method.\n   */\n  onUpdateSettings(newSettings) {\n    const relevantToSettings = _classPrivateMethodGet(this, _isRelevantToSettings, _isRelevantToSettings2).call(this, newSettings);\n    if (this.isEnabled) {\n      if (this.enabled && !this.isEnabled()) {\n        this.disablePlugin();\n      }\n      if (!this.enabled && this.isEnabled()) {\n        this.enablePlugin();\n      }\n      if (this.enabled && this.isEnabled() && relevantToSettings) {\n        this.updatePlugin(newSettings);\n      }\n    }\n  }\n\n  /**\n   * Updates the plugin to use the latest options you have specified.\n   *\n   * @private\n   */\n  updatePlugin() {}\n\n  /**\n   * Destroy plugin.\n   */\n  destroy() {\n    var _this$eventManager2;\n    (_this$eventManager2 = this.eventManager) === null || _this$eventManager2 === void 0 || _this$eventManager2.destroy();\n    this.clearHooks();\n    objectEach(this, (value, property) => {\n      if (property !== 'hot') {\n        this[property] = null;\n      }\n    });\n    delete this.t;\n    delete this.hot;\n  }\n}\nfunction _isRelevantToSettings2(settings) {\n  if (!settings) {\n    return false;\n  }\n  const settingKeys = this.constructor.SETTING_KEYS;\n\n  // If SETTING_KEYS is declared as `true` -> update the plugin regardless of the settings declared in\n  // `updateSettings`.\n  // If SETTING_KEYS is declared as `false` -> DON'T update the plugin regardless of the settings declared in\n  // `updateSettings`.\n  if (typeof settingKeys === 'boolean') {\n    return settingKeys;\n  }\n  for (let i = 0; i < settingKeys.length; i++) {\n    if (settings[settingKeys[i]] !== undefined) {\n      return true;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","privateMap","value","set","privateCollection","has","TypeError","_defineProperty","key","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","Number","_classPrivateMethodGet","receiver","fn","_classPrivateFieldGet","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorGet","action","get","defineGetter","objectEach","arrayEach","getPluginsNames","hasPlugin","hasCellType","hasEditor","hasRenderer","hasValidator","EventManager","DEPS_TYPE_CHECKERS","Map","PLUGIN_KEY","missingDepsMsgs","initializedPlugins","_hooks","WeakMap","_isRelevantToSettings","WeakSet","BasePlugin","SETTING_KEYS","constructor","hotInstance","hot","addHook","onAfterPluginsInitialized","newSettings","onUpdateSettings","init","pluginName","getPluginName","pluginDeps","PLUGIN_DEPS","deps","Array","isArray","length","missingDependencies","forEach","dependency","type","moduleName","split","Error","push","errorMsg","join","indexOf","splice","addHookOnce","isEnabled","enablePlugin","isAllPluginsAreInitialized","runHooks","initialized","enabled","disablePlugin","_this$eventManager","eventManager","clear","clearHooks","name","callback","hooks","removeHooks","removeHook","callbacks","callOnPluginsReady","isPluginsReady","pluginsInitializedCallbacks","relevantToSettings","_isRelevantToSettings2","updatePlugin","destroy","_this$eventManager2","property","settings","settingKeys","undefined"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/base/base.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { defineGetter, objectEach } from \"../../helpers/object.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { getPluginsNames, hasPlugin } from \"../registry.mjs\";\nimport { hasCellType } from \"../../cellTypes/registry.mjs\";\nimport { hasEditor } from \"../../editors/registry.mjs\";\nimport { hasRenderer } from \"../../renderers/registry.mjs\";\nimport { hasValidator } from \"../../validators/registry.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nconst DEPS_TYPE_CHECKERS = new Map([['plugin', hasPlugin], ['cell-type', hasCellType], ['editor', hasEditor], ['renderer', hasRenderer], ['validator', hasValidator]]);\nexport const PLUGIN_KEY = 'base';\nconst missingDepsMsgs = [];\nlet initializedPlugins = null;\n\n/**\n * @util\n * @property {Core} hot Handsontable instance.\n */\nvar _hooks = /*#__PURE__*/new WeakMap();\nvar _isRelevantToSettings = /*#__PURE__*/new WeakSet();\nexport class BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n\n  /**\n   * The `SETTING_KEYS` getter defines the keys that, when present in the config object, trigger the plugin update\n   * after the `updateSettings` calls.\n   * - When it returns `true`, the plugin updates after all `updateSettings` calls, regardless of the contents of the\n   * config object.\n   * - When it returns `false`, the plugin never updates on `updateSettings` calls.\n   *\n   * @returns {string[] | boolean}\n   */\n  static get SETTING_KEYS() {\n    return [this.PLUGIN_KEY];\n  }\n\n  /**\n   * The instance of the {@link EventManager} class.\n   *\n   * @type {EventManager}\n   */\n\n  /**\n   * @param {object} hotInstance Handsontable instance.\n   */\n  constructor(hotInstance) {\n    /**\n     * Check if any of the keys defined in `SETTING_KEYS` configuration of the plugin is present in the provided\n     * config object, or if the `SETTING_KEYS` configuration states that the plugin is relevant to the config object\n     * regardless of its contents.\n     *\n     * @private\n     * @param {Handsontable.DefaultSettings} settings The config object passed to `updateSettings`.\n     * @returns {boolean}\n     */\n    _classPrivateMethodInitSpec(this, _isRelevantToSettings);\n    _defineProperty(this, \"eventManager\", new EventManager(this));\n    /**\n     * @type {string}\n     */\n    _defineProperty(this, \"pluginName\", null);\n    /**\n     * @type {Function[]}\n     */\n    _defineProperty(this, \"pluginsInitializedCallbacks\", []);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"isPluginsReady\", false);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"enabled\", false);\n    /**\n     * @type {boolean}\n     */\n    _defineProperty(this, \"initialized\", false);\n    /**\n     * Collection of the reference to the plugins hooks.\n     */\n    _classPrivateFieldInitSpec(this, _hooks, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    defineGetter(this, 'hot', hotInstance, {\n      writable: false\n    });\n    initializedPlugins = null;\n    this.hot.addHook('afterPluginsInitialized', () => this.onAfterPluginsInitialized());\n    this.hot.addHook('afterUpdateSettings', newSettings => this.onUpdateSettings(newSettings));\n    this.hot.addHook('beforeInit', () => this.init());\n  }\n  init() {\n    this.pluginName = this.hot.getPluginName(this);\n    const pluginDeps = this.constructor.PLUGIN_DEPS;\n    const deps = Array.isArray(pluginDeps) ? pluginDeps : [];\n    if (deps.length > 0) {\n      const missingDependencies = [];\n      deps.forEach(dependency => {\n        const [type, moduleName] = dependency.split(':');\n        if (!DEPS_TYPE_CHECKERS.has(type)) {\n          throw new Error(`Unknown plugin dependency type \"${type}\" was found.`);\n        }\n        if (!DEPS_TYPE_CHECKERS.get(type)(moduleName)) {\n          missingDependencies.push(` - ${moduleName} (${type})`);\n        }\n      });\n      if (missingDependencies.length > 0) {\n        const errorMsg = [`The ${this.pluginName} plugin requires the following modules:\\n`, `${missingDependencies.join('\\n')}\\n`].join('');\n        missingDepsMsgs.push(errorMsg);\n      }\n    }\n    if (!initializedPlugins) {\n      initializedPlugins = getPluginsNames();\n    }\n\n    // Workaround for the UndoRedo plugin which, currently doesn't follow the plugin architecture.\n    // Without this line the `callOnPluginsReady` callback won't be triggered after all plugin\n    // initialization.\n    if (initializedPlugins.indexOf('UndoRedo') >= 0) {\n      initializedPlugins.splice(initializedPlugins.indexOf('UndoRedo'), 1);\n    }\n    if (initializedPlugins.indexOf(this.pluginName) >= 0) {\n      initializedPlugins.splice(initializedPlugins.indexOf(this.pluginName), 1);\n    }\n    this.hot.addHookOnce('afterPluginsInitialized', () => {\n      if (this.isEnabled && this.isEnabled()) {\n        this.enablePlugin();\n      }\n    });\n    const isAllPluginsAreInitialized = initializedPlugins.length === 0;\n    if (isAllPluginsAreInitialized) {\n      if (missingDepsMsgs.length > 0) {\n        const errorMsg = [`${missingDepsMsgs.join('\\n')}\\n`, 'You have to import and register them manually.'].join('');\n        throw new Error(errorMsg);\n      }\n      this.hot.runHooks('afterPluginsInitialized');\n    }\n    this.initialized = true;\n  }\n\n  /**\n   * Enable plugin for this Handsontable instance.\n   */\n  enablePlugin() {\n    this.enabled = true;\n  }\n\n  /**\n   * Disable plugin for this Handsontable instance.\n   */\n  disablePlugin() {\n    var _this$eventManager;\n    (_this$eventManager = this.eventManager) === null || _this$eventManager === void 0 || _this$eventManager.clear();\n    this.clearHooks();\n    this.enabled = false;\n  }\n\n  /**\n   * Add listener to plugin hooks system.\n   *\n   * @param {string} name The hook name.\n   * @param {Function} callback The listener function to add.\n   */\n  addHook(name, callback) {\n    _classPrivateFieldGet(this, _hooks)[name] = _classPrivateFieldGet(this, _hooks)[name] || [];\n    const hooks = _classPrivateFieldGet(this, _hooks)[name];\n    this.hot.addHook(name, callback);\n    hooks.push(callback);\n    _classPrivateFieldGet(this, _hooks)[name] = hooks;\n  }\n\n  /**\n   * Remove all hooks listeners by hook name.\n   *\n   * @param {string} name The hook name.\n   */\n  removeHooks(name) {\n    arrayEach(_classPrivateFieldGet(this, _hooks)[name] || [], callback => {\n      this.hot.removeHook(name, callback);\n    });\n  }\n\n  /**\n   * Clear all hooks.\n   */\n  clearHooks() {\n    const hooks = _classPrivateFieldGet(this, _hooks);\n    objectEach(hooks, (callbacks, name) => this.removeHooks(name));\n    hooks.length = 0;\n  }\n\n  /**\n   * Register function which will be immediately called after all plugins initialized.\n   *\n   * @param {Function} callback The listener function to call.\n   */\n  callOnPluginsReady(callback) {\n    if (this.isPluginsReady) {\n      callback();\n    } else {\n      this.pluginsInitializedCallbacks.push(callback);\n    }\n  }\n  /**\n   * On after plugins initialized listener.\n   *\n   * @private\n   */\n  onAfterPluginsInitialized() {\n    arrayEach(this.pluginsInitializedCallbacks, callback => callback());\n    this.pluginsInitializedCallbacks.length = 0;\n    this.isPluginsReady = true;\n  }\n\n  /**\n   * On update settings listener.\n   *\n   * @private\n   * @param {object} newSettings New set of settings passed to the `updateSettings` method.\n   */\n  onUpdateSettings(newSettings) {\n    const relevantToSettings = _classPrivateMethodGet(this, _isRelevantToSettings, _isRelevantToSettings2).call(this, newSettings);\n    if (this.isEnabled) {\n      if (this.enabled && !this.isEnabled()) {\n        this.disablePlugin();\n      }\n      if (!this.enabled && this.isEnabled()) {\n        this.enablePlugin();\n      }\n      if (this.enabled && this.isEnabled() && relevantToSettings) {\n        this.updatePlugin(newSettings);\n      }\n    }\n  }\n\n  /**\n   * Updates the plugin to use the latest options you have specified.\n   *\n   * @private\n   */\n  updatePlugin() {}\n\n  /**\n   * Destroy plugin.\n   */\n  destroy() {\n    var _this$eventManager2;\n    (_this$eventManager2 = this.eventManager) === null || _this$eventManager2 === void 0 || _this$eventManager2.destroy();\n    this.clearHooks();\n    objectEach(this, (value, property) => {\n      if (property !== 'hot') {\n        this[property] = null;\n      }\n    });\n    delete this.t;\n    delete this.hot;\n  }\n}\nfunction _isRelevantToSettings2(settings) {\n  if (!settings) {\n    return false;\n  }\n  const settingKeys = this.constructor.SETTING_KEYS;\n\n  // If SETTING_KEYS is declared as `true` -> update the plugin regardless of the settings declared in\n  // `updateSettings`.\n  // If SETTING_KEYS is declared as `false` -> DON'T update the plugin regardless of the settings declared in\n  // `updateSettings`.\n  if (typeof settingKeys === 'boolean') {\n    return settingKeys;\n  }\n  for (let i = 0; i < settingKeys.length; i++) {\n    if (settings[settingKeys[i]] !== undefined) {\n      return true;\n    }\n  }\n  return false;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}