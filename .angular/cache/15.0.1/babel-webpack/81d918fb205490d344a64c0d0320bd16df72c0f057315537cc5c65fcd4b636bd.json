{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@services/log-service.service\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/button\";\nvar ObservHojaRutaCreateComponent = /** @class */function () {\n  function ObservHojaRutaCreateComponent(api, dialogRef, _formBuilder, datePipe, log_module, _snackBar, spinner, toastr) {\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.log_module = log_module;\n    this._snackBar = _snackBar;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this.dataform = '';\n    this.data_linea_producto = [];\n    this.ingrupo = [];\n    this.grupo_linea = [];\n    this.sub_grupo_linea = [];\n    this.inputValue = null;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.ventana = \"lineaProd-create\";\n    this.detalle = \"lineaProd\";\n    this.tipo = \"lineaProd-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  ObservHojaRutaCreateComponent.prototype.ngOnInit = function () {};\n  ObservHojaRutaCreateComponent.prototype.createForm = function () {\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: \"\",\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      tipo: [this.dataform.tipo, Validators.compose([Validators.required])],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [this.usuarioLogueado]\n    });\n  };\n  ObservHojaRutaCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    console.log(data);\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:--  /inventario/mant/inlinea  POST\";\n    return this.api.create(\"/venta/mant/veobs_ruta/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.data_linea_producto = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  ObservHojaRutaCreateComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    console.log(parsedValue);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = 0;\n    }\n  };\n  ObservHojaRutaCreateComponent.prototype.close = function () {\n    this.dialogRef.close();\n  };\n  ObservHojaRutaCreateComponent.Éµfac = function ObservHojaRutaCreateComponent_Factory(t) {\n    return new (t || ObservHojaRutaCreateComponent)(i0.ÉµÉµdirectiveInject(i1.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialogRef), i0.ÉµÉµdirectiveInject(i3.FormBuilder), i0.ÉµÉµdirectiveInject(i4.DatePipe), i0.ÉµÉµdirectiveInject(i5.LogService), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i8.ToastrService));\n  };\n  ObservHojaRutaCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: ObservHojaRutaCreateComponent,\n    selectors: [[\"app-observ-hoja-ruta-create\"]],\n    decls: 41,\n    vars: 2,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"type\", \"text\", \"formControlName\", \"codigo\", \"min\", \"0\", \"step\", \"1\", \"maxlength\", \"50\", \"matInput\", \"\", \"required\", \"\", 3, \"input\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"150\", \"required\", \"\"], [\"appearance\", \"outline\"], [\"formControlName\", \"tipo\"], [\"value\", \"VENTAS\"], [\"value\", \"COBRANZAS\"], [\"value\", \"COMPETENCIA\"], [\"value\", \"REQUERIMIENTOS\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function ObservHojaRutaCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Observacion de Hoja de Ruta\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function ObservHojaRutaCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(14, \"input\", 10);\n        i0.ÉµÉµlistener(\"input\", function ObservHojaRutaCreateComponent_Template_input_input_14_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"mat-form-field\", 9)(17, \"mat-label\");\n        i0.ÉµÉµtext(18, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"input\", 11);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(20, \"div\", 7)(21, \"div\", 8)(22, \"mat-form-field\", 12)(23, \"mat-label\");\n        i0.ÉµÉµtext(24, \"Tipo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(25, \"mat-select\", 13)(26, \"mat-option\", 14);\n        i0.ÉµÉµtext(27, \"VENTAS\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(28, \"mat-option\", 15);\n        i0.ÉµÉµtext(29, \"COBRANZAS\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(30, \"mat-option\", 16);\n        i0.ÉµÉµtext(31, \"COMPETENCIA\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(32, \"mat-option\", 17);\n        i0.ÉµÉµtext(33, \"REQUERIMIENTOS\");\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(34, \"div\", 18)(35, \"a\", 19);\n        i0.ÉµÉµlistener(\"click\", function ObservHojaRutaCreateComponent_Template_a_click_35_listener() {\n          return ctx.close();\n        });\n        i0.ÉµÉµelement(36, \"i\", 20);\n        i0.ÉµÉµtext(37, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(38, \"button\", 21);\n        i0.ÉµÉµelement(39, \"i\", 22);\n        i0.ÉµÉµtext(40, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(30);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i3.ÉµNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName, i9.MatFormField, i9.MatLabel, i10.MatSelect, i11.MatOption, i12.MatInput, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i13.MatAnchor, i13.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/ventas/observaciones-hoja-ruta/observ-hoja-ruta-create/observ-hoja-ruta-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL3ZlbnRhcy9vYnNlcnZhY2lvbmVzLWhvamEtcnV0YS9vYnNlcnYtaG9qYS1ydXRhLWNyZWF0ZS9vYnNlcnYtaG9qYS1ydXRhLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gIGZsb2F0OiByaWdodDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n  return ObservHojaRutaCreateComponent;\n}();\nexport { ObservHojaRutaCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","api","dialogRef","_formBuilder","datePipe","log_module","_snackBar","spinner","toastr","Date","userConn","localStorage","getItem","undefined","JSON","parse","usuarioLogueado","FormularioData","createForm","ObservHojaRutaCreateComponent","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","descripcion","dataform","compose","required","tipo","fechareg","transform","fecha_actual","horareg","usuarioreg","data","value","console","log","errorMessage","create","subscribe","next","datav","_this","data_linea_producto","guardarLog","ventana","detalle","show","success","location","reload","error","err","complete","parsedValue","parseFloat","isNaN","Number","isInteger","inputValue","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\ventas\\observaciones-hoja-ruta\\observ-hoja-ruta-create\\observ-hoja-ruta-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\ventas\\observaciones-hoja-ruta\\observ-hoja-ruta-create\\observ-hoja-ruta-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-observ-hoja-ruta-create',\n  templateUrl: './observ-hoja-ruta-create.component.html',\n  styleUrls: ['./observ-hoja-ruta-create.component.scss']\n})\nexport class ObservHojaRutaCreateComponent implements OnInit {\n  \n  FormularioData:FormGroup;\n  dataform:any='';\n  data_linea_producto=[];\n  public ingrupo=[];\n  public grupo_linea=[];\n  public sub_grupo_linea=[];\n  userConn:any;\n  usuarioLogueado: any;\n  inputValue: number | null = null;\n\n  fecha_actual = new Date();\n  hora_actual = new Date();\n\n  public ventana=\"lineaProd-create\"\n  public detalle=\"lineaProd\";\n  public tipo=\"lineaProd-POST\";\n\n  constructor(private api:ApiService, public dialogRef: MatDialogRef<ObservHojaRutaCreateComponent>,\n    private _formBuilder: FormBuilder, private datePipe: DatePipe, public log_module: LogService,\n    public _snackBar: MatSnackBar, private spinner: NgxSpinnerService, private toastr: ToastrService) {\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    this.FormularioData = this.createForm();\n  }\n\n  ngOnInit(){\n\n  }\n  \n  createForm(): FormGroup {\n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      codigo: \"\",\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      tipo: [this.dataform.tipo, Validators.compose([Validators.required])],\n\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [this.usuarioLogueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    console.log(data);\n    \n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:--  /inventario/mant/inlinea  POST\";\n    return this.api.create(\"/venta/mant/veobs_ruta/\"+this.userConn, data)\n      .subscribe({\n        next: (datav) => {\n          this.data_linea_producto = datav;\n\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\n          this.spinner.show();\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');  \n          \n          location.reload();\n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n        },\n        complete: () => { }\n      })\n  }\n\n  onInputChange(value: string) {\n    // Validar y formatear el valor ingresado\n    const parsedValue = parseFloat(value);\n    console.log(parsedValue);\n\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = 0;\n    }\n  }\n  \n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Crear Observacion de Hoja de Ruta</h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>CÃ³digo </mat-label>\n              <input type=\"text\" (input)=\"onInputChange($event.target.value)\" formControlName=\"codigo\" min=\"0\" step=\"1\"\n                maxlength=\"50\" matInput required>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>DescripciÃ³n </mat-label>\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"150\" required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Tipo </mat-label>\n              <mat-select formControlName=\"tipo\">\n                <mat-option value=\"VENTAS\">VENTAS</mat-option>\n                <mat-option value=\"COBRANZAS\">COBRANZAS</mat-option>\n                <mat-option value=\"COMPETENCIA\">COMPETENCIA</mat-option>\n                <mat-option value=\"REQUERIMIENTOS\">REQUERIMIENTOS</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions align=\"end\">\n          <a mat-button (click)=\"close()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}