{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { TipocambiovalidacionCreateComponent } from './tipocambiovalidacion-create/tipocambiovalidacion-create.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@services/log-service.service\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/sort\";\nfunction TipocambiovalidacionComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var monedas_r7 = ctx.$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\"\", monedas_r7.codigo, \", \\u00A0\");\n  }\n}\nfunction TipocambiovalidacionComponent_th_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"th\", 19);\n    i0.ÉµÉµtext(1, \" Moneda \");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction TipocambiovalidacionComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"td\", 20);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var element_r8 = ctx.$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", element_r8.codigo, \" \");\n  }\n}\nfunction TipocambiovalidacionComponent_th_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"th\", 19);\n    i0.ÉµÉµtext(1, \"Acci\\u00F3n\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction TipocambiovalidacionComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"td\", 21)(1, \"button\", 22);\n    i0.ÉµÉµlistener(\"click\", function TipocambiovalidacionComponent_td_29_Template_button_click_1_listener() {\n      var restoredCtx = i0.ÉµÉµrestoreView(_r11);\n      var element_r9 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r10.agregarTipoCambio(element_r9));\n    });\n    i0.ÉµÉµelement(2, \"i\", 23);\n    i0.ÉµÉµtext(3, \"\\u00A0 Agregar Tipo Cambio \");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction TipocambiovalidacionComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"tr\", 24);\n  }\n}\nfunction TipocambiovalidacionComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"tr\", 25);\n  }\n}\nvar TipocambiovalidacionComponent = /** @class */function () {\n  function TipocambiovalidacionComponent(api, dialog, _snackBar, dialogRef, router, datePipe, log_module) {\n    this.api = api;\n    this.dialog = dialog;\n    this._snackBar = _snackBar;\n    this.dialogRef = dialogRef;\n    this.router = router;\n    this.datePipe = datePipe;\n    this.log_module = log_module;\n    this.fecha_actual = new Date();\n    this.moneda = [];\n    this.data = [];\n    this.ultimo_registro = [];\n    this.backupData = [];\n    this.BD_storage = [];\n    this.displayedColumns = ['codigo', 'accion'];\n    this.dataSource = new MatTableDataSource();\n    this.tipo_cambio = [];\n    this.tipo_cambio_ultimo = [];\n    this.ultimo_registro_create = [];\n    this.ventana = \"tipocambio-create\";\n    this.detalle = \"tipocambio-detalle\";\n    this.tipo = \"transaccion-tipocambio-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.BD_storage = localStorage.getItem(\"bd_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"bd_logueado\")) : null;\n    this.bd_logueado = this.BD_storage.bd;\n    console.log(this.bd_logueado);\n  }\n  TipocambiovalidacionComponent.prototype.ngOnInit = function () {\n    this.getAllmoneda();\n    this.getAllTipoCambio();\n    this.getMonedaBase();\n  };\n  TipocambiovalidacionComponent.prototype.agregarTipoCambio = function (dataMoneda) {\n    this.data = dataMoneda;\n    this.dialog.open(TipocambiovalidacionCreateComponent, {\n      data: {\n        dataMoneda: dataMoneda\n      },\n      width: 'auto'\n    });\n  };\n  TipocambiovalidacionComponent.prototype.getAllmoneda = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET\";\n    return this.api.getAll('/seg_adm/mant/admoneda/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.moneda = datav;\n        _this.tamanio = _this.moneda.length;\n        // console.log(this.tamanio);\n        _this.dataSource = new MatTableDataSource(_this.moneda);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TipocambiovalidacionComponent.prototype.getAllTipoCambio = function () {\n    var _this = this;\n    var userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    var dataTransform = this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\");\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET al tipo de cambio ruta /seg_adm/mant/getTipocambioFecha/\";\n    return this.api.getAll('/seg_adm/mant/adtipocambio/getTipocambioFecha/' + userConn + \"/\" + dataTransform).subscribe({\n      next: function (datav) {\n        _this.tipo_cambio = datav;\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TipocambiovalidacionComponent.prototype.getMonedaBase = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET\";\n    return this.api.getAll('/seg_adm/mant/adempresa/getcodMon/' + this.userConn + \"/\" + this.bd_logueado).subscribe({\n      next: function (datav) {\n        _this.monedaBase = datav;\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TipocambiovalidacionComponent.prototype.getAllTipoCambioUltimoRegistro = function () {\n    var _this = this;\n    var userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    var errorMessage;\n    var fecha_actual = new Date();\n    var dataTransform = this.datePipe.transform(fecha_actual, \"yyyy-MM-dd\");\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET al tipo de cambio ruta /seg_adm/mant/getTipocambioFecha/\";\n    return this.api.getAll('/seg_adm/mant/adtipocambio/getTipocambioAnt/' + userConn).subscribe({\n      next: function (datav) {\n        _this.tipo_cambio_ultimo = datav;\n        // mapeo que cambia un valor de un array\n        _this.tipo_cambio_ultimo.map(function (dato) {\n          if (dato.codalmacen) {\n            dato.fecha = dataTransform;\n          }\n          return dato;\n        });\n        console.log(_this.tipo_cambio_ultimo);\n        // aca esta la solucion\n        _this.GuardartipoCambioUltimoRegistro(_this.tipo_cambio_ultimo);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TipocambiovalidacionComponent.prototype.GuardartipoCambioUltimoRegistro = function (elementoArray) {\n    var _this = this;\n    var userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer POST al guardar un array de datos de tipo de cambio ruta --/seg_adm/mant/addlisttipocambio/\";\n    return this.api.create('/seg_adm/mant/adtipocambio/addlisttipocambio/' + userConn, elementoArray).subscribe({\n      next: function (datav) {\n        _this.ultimo_registro_create = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this._snackBar.open('Se guardo correctamente los tipos de cambio, con los ultimos valores!', 'ðŸ’²', {\n          duration: 3500,\n          panelClass: ['coorporativo-snackbar', 'login-snackbar']\n        });\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TipocambiovalidacionComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  TipocambiovalidacionComponent.prototype.logout = function () {\n    this.api.logout();\n  };\n  TipocambiovalidacionComponent.Éµfac = function TipocambiovalidacionComponent_Factory(t) {\n    return new (t || TipocambiovalidacionComponent)(i0.ÉµÉµdirectiveInject(i1.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialog), i0.ÉµÉµdirectiveInject(i3.MatSnackBar), i0.ÉµÉµdirectiveInject(i2.MatDialogRef), i0.ÉµÉµdirectiveInject(i4.Router), i0.ÉµÉµdirectiveInject(i5.DatePipe), i0.ÉµÉµdirectiveInject(i6.LogService));\n  };\n  TipocambiovalidacionComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: TipocambiovalidacionComponent,\n    selectors: [[\"app-tipocambiovalidacion\"]],\n    decls: 40,\n    vars: 12,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col\", 2, \"text-align\", \"end\"], [1, \"col\"], [\"mat-table\", \"\", \"multiTemplateDataRows\", \"\", \"matSort\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"codigo\"], [\"mat-header-cell\", \"\", \"style\", \"color: #fff !important;\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \"text-align: center;\", 4, \"matCellDef\"], [\"matColumnDef\", \"accion\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-dialog-actions\", \"\", 2, \"justify-content\", \"center !important\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 1, \"example-label\", 3, \"click\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"color\", \"success\", 3, \"click\"], [1, \"fa\", \"fa-clock\"], [\"mat-header-cell\", \"\", 2, \"color\", \"#fff !important\"], [\"mat-cell\", \"\", 2, \"text-align\", \"center\"], [\"mat-cell\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-plus\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function TipocambiovalidacionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"h1\", 0);\n        i0.ÉµÉµtext(1, \"\\u00A1 Bienvenido a PERTEC SIAW !\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(2, \"div\", 1)(3, \"p\", 2);\n        i0.ÉµÉµtext(4);\n        i0.ÉµÉµpipe(5, \"date\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(6, \"br\");\n        i0.ÉµÉµelementStart(7, \"p\");\n        i0.ÉµÉµtext(8, \"Ingrese los tipos de cambio para las monedas \");\n        i0.ÉµÉµtemplate(9, TipocambiovalidacionComponent_span_9_Template, 2, 1, \"span\", 3);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(10, \"div\", 4)(11, \"div\", 5)(12, \"p\");\n        i0.ÉµÉµtext(13, \" Moneda BaseAA: \");\n        i0.ÉµÉµelementStart(14, \"strong\");\n        i0.ÉµÉµtext(15, \"BS\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(16, \"div\", 6)(17, \"p\");\n        i0.ÉµÉµtext(18, \" Fecha: \");\n        i0.ÉµÉµelementStart(19, \"strong\");\n        i0.ÉµÉµtext(20);\n        i0.ÉµÉµpipe(21, \"date\");\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelement(22, \"br\");\n        i0.ÉµÉµelementStart(23, \"table\", 7);\n        i0.ÉµÉµelementContainerStart(24, 8);\n        i0.ÉµÉµtemplate(25, TipocambiovalidacionComponent_th_25_Template, 2, 0, \"th\", 9);\n        i0.ÉµÉµtemplate(26, TipocambiovalidacionComponent_td_26_Template, 2, 1, \"td\", 10);\n        i0.ÉµÉµelementContainerEnd();\n        i0.ÉµÉµelementContainerStart(27, 11);\n        i0.ÉµÉµtemplate(28, TipocambiovalidacionComponent_th_28_Template, 2, 0, \"th\", 9);\n        i0.ÉµÉµtemplate(29, TipocambiovalidacionComponent_td_29_Template, 4, 0, \"td\", 12);\n        i0.ÉµÉµelementContainerEnd();\n        i0.ÉµÉµtemplate(30, TipocambiovalidacionComponent_tr_30_Template, 1, 0, \"tr\", 13);\n        i0.ÉµÉµtemplate(31, TipocambiovalidacionComponent_tr_31_Template, 1, 0, \"tr\", 14);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(32, \"div\", 15)(33, \"button\", 16);\n        i0.ÉµÉµlistener(\"click\", function TipocambiovalidacionComponent_Template_button_click_33_listener() {\n          return ctx.logout();\n        });\n        i0.ÉµÉµelementStart(34, \"mat-icon\");\n        i0.ÉµÉµtext(35, \"exit_to_app\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(36, \"\\u00A0Salir \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(37, \"button\", 17);\n        i0.ÉµÉµlistener(\"click\", function TipocambiovalidacionComponent_Template_button_click_37_listener() {\n          return ctx.getAllTipoCambioUltimoRegistro();\n        });\n        i0.ÉµÉµelement(38, \"i\", 18);\n        i0.ÉµÉµtext(39, \"\\u00A0 Guardar con los ultimos datos registrados. \");\n        i0.ÉµÉµelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµtextInterpolate1(\"Es el primer usuario en ingresar al SIAW, porfavor coloque el tipo de cambio para el dia de hoy \", i0.ÉµÉµpipeBind2(5, 6, ctx.fecha_actual, \"yyyy/MM/dd\"), \".\");\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.moneda);\n        i0.ÉµÉµadvance(11);\n        i0.ÉµÉµtextInterpolate(i0.ÉµÉµpipeBind2(21, 9, ctx.fecha_actual, \"yyyy/MM/dd\"));\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"dataSource\", ctx.dataSource);\n        i0.ÉµÉµadvance(7);\n        i0.ÉµÉµproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i5.NgForOf, i7.MatTable, i7.MatHeaderCellDef, i7.MatHeaderRowDef, i7.MatColumnDef, i7.MatCellDef, i7.MatRowDef, i7.MatHeaderCell, i7.MatCell, i7.MatHeaderRow, i7.MatRow, i2.MatDialogClose, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i8.MatButton, i9.MatIcon, i10.MatSort, i5.DatePipe],\n    styles: [\".mat-mdc-dialog-container[_ngcontent-%COMP%]   .mdc-dialog__surface[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n}\\n\\n.mat-mdc-dialog-surface[_ngcontent-%COMP%] {\\n  border-radius: 3% 3% !important;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  text-align: center !important;\\n  width: 100%;\\n}\\n\\nth.mat-header-cell[_ngcontent-%COMP%] {\\n  text-align: center !important;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  text-align: center !important;\\n  vertical-align: middle !important;\\n}\\n\\n.mat-sort-header-container[_ngcontent-%COMP%] {\\n  justify-content: center !important;\\n}\\n\\n.mat-mdc-header-row[_ngcontent-%COMP%] {\\n  background: #093070;\\n}\\n\\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\\n  height: calc(1.6rem + 0px) !important;\\n}\\n\\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\\n  height: calc(2rem + 0px) !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/seguridad/tipocambiovalidacion/tipocambiovalidacion.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZWd1cmlkYWQvdGlwb2NhbWJpb3ZhbGlkYWNpb24vdGlwb2NhbWJpb3ZhbGlkYWNpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw0QkFBQTtBQUNGOztBQUNBO0VBQ0UsK0JBQUE7QUFFRjs7QUFBQTtFQUNFLGtCQUFBO0FBR0Y7O0FBREE7RUFDRSxzQkFBQTtBQUlGOztBQUZBO0VBQ0UsNkJBQUE7RUFDQSxXQUFBO0FBS0Y7O0FBSEE7RUFDRSw2QkFBQTtBQU1GOztBQUpBO0VBQ0UsNkJBQUE7RUFDQSxpQ0FBQTtBQU9GOztBQUxBO0VBQ0Usa0NBQUE7QUFRRjs7QUFOQTtFQUNFLG1CQUFBO0FBU0Y7O0FBUEE7RUFDRSxxQ0FBQTtBQVVGOztBQVJBO0VBQ0UsbUNBQUE7QUFXRiIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLWRpYWxvZy1jb250YWluZXIgLm1kYy1kaWFsb2dfX3N1cmZhY2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xufVxuXG4ubWF0LW1kYy1kaWFsb2ctc3VyZmFjZSB7XG4gIGJvcmRlci1yYWRpdXM6IDMlIDMlICFpbXBvcnRhbnQ7XG59XG5cbmgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxudGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xufVxuXG50ZCwgdGgge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZSAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtbWRjLWhlYWRlci1yb3cge1xuICBiYWNrZ3JvdW5kOiAjMDkzMDcwO1xufVxuXG4ubWF0LW1kYy10YWJsZSAubWRjLWRhdGEtdGFibGVfX3JvdyB7XG4gIGhlaWdodDogY2FsYygxLjZyZW0gKyAwcHgpICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtbWRjLXRhYmxlIC5tZGMtZGF0YS10YWJsZV9faGVhZGVyLXJvdyB7XG4gIGhlaWdodDogY2FsYygycmVtICsgMHB4KSAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return TipocambiovalidacionComponent;\n}();\nexport { TipocambiovalidacionComponent };","map":{"version":3,"mappings":"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","names":["MatTableDataSource","TipocambiovalidacionCreateComponent","i0","api","dialog","_snackBar","dialogRef","router","datePipe","log_module","Date","userConn","localStorage","getItem","undefined","JSON","parse","BD_storage","bd_logueado","bd","console","log","TipocambiovalidacionComponent","getAllmoneda","getAllTipoCambio","getMonedaBase","dataMoneda","data","open","width","errorMessage","getAll","subscribe","next","datav","_this","moneda","tamanio","length","dataSource","error","err","complete","dataTransform","transform","fecha_actual","tipo_cambio","monedaBase","tipo_cambio_ultimo","map","dato","codalmacen","fecha","GuardartipoCambioUltimoRegistro","elementoArray","create","ultimo_registro_create","guardarLog","ventana","detalle","tipo","duration","panelClass","location","reload","close","logout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\seguridad\\tipocambiovalidacion\\tipocambiovalidacion.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\seguridad\\tipocambiovalidacion\\tipocambiovalidacion.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@services/api.service';\r\nimport { TipocambiovalidacionCreateComponent } from './tipocambiovalidacion-create/tipocambiovalidacion-create.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LogService } from '@services/log-service.service';\r\n\r\n@Component({\r\n  selector: 'app-tipocambiovalidacion',\r\n  templateUrl: './tipocambiovalidacion.component.html',\r\n  styleUrls: ['./tipocambiovalidacion.component.scss']\r\n})\r\n\r\nexport class TipocambiovalidacionComponent implements OnInit {\r\n\r\n  public fecha_actual = new Date();\r\n  public moneda = [];\r\n  public data = [];\r\n  public ultimo_registro = [];\r\n  public backupData = [];\r\n  public formulariotipocambio;\r\n  public formnuevoarray;\r\n  public bd_logueado;\r\n\r\n  public userConn: any;\r\n  public BD_storage: any = [];\r\n  public monedaBase: any;\r\n\r\n  displayedColumns = ['codigo', 'accion'];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public tipo_cambio: any = [];\r\n  public tipo_cambio_ultimo: any = [];\r\n  public ultimo_registro_create: any = [];\r\n\r\n  public ventana = \"tipocambio-create\"\r\n  public detalle = \"tipocambio-detalle\";\r\n  public tipo = \"transaccion-tipocambio-POST\";\r\n\r\n  tamanio: any;\r\n  tamanio_moneda: any;\r\n\r\n  constructor(private api: ApiService, public dialog: MatDialog, public _snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<TipocambiovalidacionComponent>, private router: Router,\r\n    private datePipe: DatePipe, public log_module: LogService) {\r\n\r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.BD_storage = localStorage.getItem(\"bd_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"bd_logueado\")) : null;\r\n    this.bd_logueado = this.BD_storage.bd;\r\n    console.log(this.bd_logueado);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllmoneda();\r\n    this.getAllTipoCambio();\r\n    this.getMonedaBase();\r\n  }\r\n\r\n  agregarTipoCambio(dataMoneda) {\r\n    this.data = dataMoneda;\r\n    this.dialog.open(TipocambiovalidacionCreateComponent, {\r\n      data: { dataMoneda: dataMoneda },\r\n      width: 'auto',\r\n    });\r\n  }\r\n\r\n  getAllmoneda() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET\";\r\n    return this.api.getAll('/seg_adm/mant/admoneda/' + this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.moneda = datav;\r\n          this.tamanio = this.moneda.length;\r\n          // console.log(this.tamanio);\r\n          this.dataSource = new MatTableDataSource(this.moneda);\r\n        },\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getAllTipoCambio() {\r\n    let userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    let dataTransform = this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\");\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET al tipo de cambio ruta /seg_adm/mant/getTipocambioFecha/\";\r\n\r\n    return this.api.getAll('/seg_adm/mant/adtipocambio/getTipocambioFecha/' + userConn + \"/\" + dataTransform)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.tipo_cambio = datav;\r\n        },\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getMonedaBase() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET\";\r\n    return this.api.getAll('/seg_adm/mant/adempresa/getcodMon/' + this.userConn + \"/\" + this.bd_logueado)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.monedaBase = datav;\r\n        },\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getAllTipoCambioUltimoRegistro() {\r\n    let userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n\r\n    let errorMessage: string;\r\n    let fecha_actual = new Date();\r\n    let dataTransform = this.datePipe.transform(fecha_actual, \"yyyy-MM-dd\");\r\n\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET al tipo de cambio ruta /seg_adm/mant/getTipocambioFecha/\";\r\n    return this.api.getAll('/seg_adm/mant/adtipocambio/getTipocambioAnt/' + userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.tipo_cambio_ultimo = datav;\r\n\r\n          // mapeo que cambia un valor de un array\r\n          this.tipo_cambio_ultimo.map(function (dato) {\r\n            if (dato.codalmacen) {\r\n              dato.fecha = dataTransform;\r\n            }\r\n            return dato;\r\n          })\r\n\r\n          console.log(this.tipo_cambio_ultimo);\r\n\r\n          // aca esta la solucion\r\n          this.GuardartipoCambioUltimoRegistro(this.tipo_cambio_ultimo);\r\n        },\r\n\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  GuardartipoCambioUltimoRegistro(elementoArray) {\r\n    let userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer POST al guardar un array de datos de tipo de cambio ruta --/seg_adm/mant/addlisttipocambio/\";\r\n\r\n    return this.api.create('/seg_adm/mant/adtipocambio/addlisttipocambio/' + userConn, elementoArray)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.ultimo_registro_create = datav;\r\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n          this._snackBar.open('Se guardo correctamente los tipos de cambio, con los ultimos valores!', 'ðŸ’²', {\r\n            duration: 3500,\r\n            panelClass: ['coorporativo-snackbar', 'login-snackbar'],\r\n          });\r\n\r\n          location.reload();\r\n        },\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  logout() {\r\n    this.api.logout();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Â¡ Bienvenido a PERTEC SIAW !</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p class=\"text-center\">Es el primer usuario en ingresar al SIAW,\r\n    porfavor coloque el tipo de cambio para el dia de hoy {{ fecha_actual | date:'yyyy/MM/dd' }}.</p><br>\r\n  <p>Ingrese los tipos de cambio para las monedas <span *ngFor=\"let monedas of moneda\">{{ monedas.codigo }},\r\n      &nbsp;</span></p>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col\" style=\"text-align: end;\">\r\n      <p> Moneda BaseAA: <strong>BS</strong></p>\r\n    </div>\r\n    <div class=\"col\">\r\n      <p> Fecha: <strong>{{ fecha_actual | date:'yyyy/MM/dd' }}</strong></p>\r\n    </div>\r\n  </div><br>\r\n\r\n  <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows matSort class=\"mat-elevation-z8\" matSort>\r\n    <ng-container matColumnDef=\"codigo\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"color: #fff !important;\"> Moneda </th>\r\n      <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\"> {{ element.codigo }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"accion\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"color: #fff !important;\">AcciÃ³n</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-button (click)=\"agregarTipoCambio(element);\">\r\n          <i class=\"fa fa-plus\"></i>&nbsp; Agregar Tipo Cambio\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n\r\n<div mat-dialog-actions style=\"justify-content: center !important;\">\r\n  <button mat-button mat-dialog-close class=\"example-label\" (click)=\"logout()\">\r\n    <mat-icon>exit_to_app</mat-icon>&nbsp;Salir\r\n  </button>\r\n\r\n  <button mat-button mat-dialog-close cdkFocusInitial color=\"success\" (click)=\"getAllTipoCambioUltimoRegistro();\">\r\n    <i class=\"fa fa-clock\"></i>&nbsp; Guardar con los ultimos datos registrados.\r\n  </button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}