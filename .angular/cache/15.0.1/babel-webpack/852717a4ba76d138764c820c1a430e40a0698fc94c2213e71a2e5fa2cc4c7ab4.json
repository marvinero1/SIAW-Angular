{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nvar DptopaisEditComponent = /** @class */function () {\n  function DptopaisEditComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, dataDptoEdit, log_module) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.dataDptoEdit = dataDptoEdit;\n    this.log_module = log_module;\n    this.dataform = '';\n    this.dpto = [];\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.ventana = \"dptopais-update\";\n    this.detalle = \"dptopais-detalle\";\n    this.tipo = \"dptopais-EDIT\";\n    this.FormularioDataEdit = this.createForm();\n  }\n  DptopaisEditComponent.prototype.ngOnInit = function () {\n    this.dpto = this.dataDptoEdit.dataDptoEdit;\n  };\n  DptopaisEditComponent.prototype.createForm = function () {\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.dataDptoEdit.dataDptoEdit.codigo],\n      nombre: [this.dataform.nombre, Validators.compose([Validators.required])],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [\"DPD200\"]\n    });\n  };\n  DptopaisEditComponent.prototype.submitData = function () {\n    var _this = this;\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    var data = this.FormularioDataEdit.value;\n    this.errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:--  /seg_adm/mant/adusuario Update\";\n    return this.api.update('/seg_adm/mant/addepto/' + this.userConn + \"/\" + this.dataDptoEdit.dataDptoEdit.codigo, data).subscribe({\n      next: function (datav) {\n        _this.dpto = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this._snackBar.open('Se ha editado correctamente!', 'Ok', {\n          duration: 3000\n        });\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, _this.errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  DptopaisEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  DptopaisEditComponent.ɵfac = function DptopaisEditComponent_Factory(t) {\n    return new (t || DptopaisEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.MatSnackBar), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i7.LogService));\n  };\n  DptopaisEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DptopaisEditComponent,\n    selectors: [[\"app-dptopais-edit\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"nombre\", \"maxlength\", \"15\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"]],\n    template: function DptopaisEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Crear Departamento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Los campos (*) son obligatorios\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function DptopaisEditComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitData();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-form-field\", 8)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Nombre \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DptopaisEditComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.dpto.nombre = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n        i0.ɵɵelement(16, \"i\", 12);\n        i0.ɵɵtext(17, \" Guardar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function DptopaisEditComponent_Template_button_click_18_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵelement(19, \"i\", 14);\n        i0.ɵɵtext(20, \" Atras\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormularioDataEdit);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.dpto.nombre);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.FormularioDataEdit.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i8.MatFormField, i8.MatLabel, i9.MatInput, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i10.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/administracion/dptopais/dptopais-edit/dptopais-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2FkbWluaXN0cmFjaW9uL2RwdG9wYWlzL2RwdG9wYWlzLWVkaXQvZHB0b3BhaXMtZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gIGZsb2F0OiByaWdodDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n  return DptopaisEditComponent;\n}();\nexport { DptopaisEditComponent };","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","dataDptoEdit","log_module","Date","FormularioDataEdit","createForm","DptopaisEditComponent","dpto","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","nombre","dataform","compose","required","fechareg","transform","fecha_actual","horareg","usuarioreg","userConn","localStorage","getItem","undefined","JSON","parse","data","value","errorMessage","update","subscribe","next","datav","_this","guardarLog","ventana","detalle","tipo","onNoClick","open","duration","location","reload","error","err","console","log","complete","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\dptopais\\dptopais-edit\\dptopais-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\dptopais\\dptopais-edit\\dptopais-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-dptopais-edit',\r\n  templateUrl: './dptopais-edit.component.html',\r\n  styleUrls: ['./dptopais-edit.component.scss']\r\n})\r\nexport class DptopaisEditComponent implements OnInit{\r\n  \r\n  FormularioDataEdit:FormGroup;\r\n  dataform:any='';\r\n  dpto:any=[];\r\n  userConn:any;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  errorMessage:string;\r\n\r\n  public ventana=\"dptopais-update\"\r\n\tpublic detalle=\"dptopais-detalle\";\r\n\tpublic tipo=\"dptopais-EDIT\";\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder,  private datePipe: DatePipe,  private spinner: NgxSpinnerService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<DptopaisEditComponent>, public _snackBar: MatSnackBar,\r\n    @Inject(MAT_DIALOG_DATA) public dataDptoEdit: any, public log_module:LogService){\r\n    this.FormularioDataEdit = this.createForm();    \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.dpto = this.dataDptoEdit.dataDptoEdit;\r\n  }\r\n\r\n  createForm(): FormGroup {\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.dataDptoEdit.dataDptoEdit.codigo],\r\n      nombre: [this.dataform.nombre,Validators.compose([Validators.required])],\r\n\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      horareg: [hora_actual_complete],\r\n      usuarioreg: [\"DPD200\"],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n\r\n    let data = this.FormularioDataEdit.value;\r\n\r\n    this.errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\"+\"Ruta:--  /seg_adm/mant/adusuario Update\";\r\n    return this.api.update('/seg_adm/mant/addepto/'+this.userConn+\"/\"+this.dataDptoEdit.dataDptoEdit.codigo, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.dpto = datav;\r\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\r\n          this.onNoClick();\r\n          this._snackBar.open('Se ha editado correctamente!', 'Ok', {\r\n            duration: 3000,\r\n          });\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          console.log(err, this.errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"p-2\">\r\n  <h1 mat-dialog-title>Crear Departamento</h1>\r\n  <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <div class=\"container\">\r\n    <form class=\"example-form\" [formGroup]=\"FormularioDataEdit\" (ngSubmit)=\"submitData()\">\r\n      <div class=\"row mb-2\">\r\n        <!-- <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Codigo </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"codigo\" (ngModel)=\"dpto.codigo\" maxlength=\"3\" required>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Nombre </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"nombre\" [(ngModel)]=\"dpto.nombre\" maxlength=\"15\" required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioDataEdit.valid\" type=\"submit\"><i class=\"fa fa-save\"></i> Guardar</button>\r\n      </div>\r\n    </form>\r\n\r\n    <button mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</button>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}