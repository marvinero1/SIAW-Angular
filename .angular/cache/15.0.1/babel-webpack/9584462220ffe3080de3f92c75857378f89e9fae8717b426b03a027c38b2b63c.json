{"ast":null,"code":"import { SesionExpiradaComponent } from '@pages/errors/sesion-expirada/sesion-expirada.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"bn-ng-idle\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nvar _c0 = [\"paginator\"];\nvar _c1 = [\"paginatorPageSize\"];\nvar AppComponent = /** @class */function () {\n  function AppComponent(bnIdle, dialog) {\n    this.bnIdle = bnIdle;\n    this.dialog = dialog;\n    this.count = 0;\n    this.counter = 0;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.IP_api = [];\n    // this.abrirModalSesionExpirada();\n    // console.log(publicIpv4());\n  }\n\n  AppComponent.prototype.ngOnInit = function () {\n    // 900 = 15 minute\n    // 600 = 10 minute\n    // 60 = 1 minute\n    // 30 = 30seg\n    // 5 = 5 seg\n    // this.bnIdle.startWatching(9000000).subscribe((res) => { //cambiar el valor del starWatching 50\n    //   this.counter = this.counter === 60 ? 0 : this.counter + 1; //this.counter es el contador a mayor numero tamanio mas tardara en salir el modal\n    //   // console.log(this.counter);\n    //   if(res && this.counter == 1){\n    //     let hour = this.hora_actual.getHours();\n    //     let minuts = this.hora_actual.getMinutes();\n    //     console.log('sesion expirada:', this.count, hour+\":\"+minuts);\n    //     this.abrirModalSesionExpirada();\n    //   }\n    // });    \n  };\n  AppComponent.prototype.ngAfterViewInit = function () {\n    //Si se coloca esto en cada componente q tiene el paginator ya no sale PAGINATION PER PAGE\n    //pero tiene q ser de manera global y no componenete por componente\n    // this.paginator._intl.itemsPerPageLabel = 'Items por página:';\n    // this.paginator._intl.nextPageLabel = 'Siguiente';\n    // this.paginator._intl.previousPageLabel = 'Anterior';\n  };\n  AppComponent.prototype.abrirModalSesionExpirada = function () {\n    this.dialog.open(SesionExpiradaComponent, {\n      width: '450px',\n      height: 'auto',\n      disableClose: true\n    });\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BnNgIdleService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        var _t = void 0;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginatorPageSize = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    dependencies: [i3.RouterOutlet],\n    styles: [\"[_nghost-%COMP%] {\\n  width: 100vw;\\n  height: 100vh;\\n}\\n/*# sourceURL=webpack://./src/app/app.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":{"version":3,"mappings":"AAGA,SAASA,uBAAuB,QAAQ,yDAAyD;;;;;;;AAGjG;EAkBE,sBAAoBC,MAAuB,EAAQC,MAAiB;IAAhD,WAAM,GAAND,MAAM;IAAyB,WAAM,GAANC,MAAM;IAXzD,UAAK,GAAQ,CAAC;IACd,YAAO,GAAG,CAAC;IACX,iBAAY,GAAG,IAAIC,IAAI,EAAE;IACzB,gBAAW,GAAG,IAAIA,IAAI,EAAE;IACxB,WAAM,GAAK,EAAE;IAQX;IACA;EACF;;EAEAC,+BAAQ,GAAR;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAEDA,sCAAe,GAAf;IACE;IACA;IACA;IACA;IACA;EAAA,CACD;EAEDA,+CAAwB,GAAxB;IACE,IAAI,CAACF,MAAM,CAACG,IAAI,CAACL,uBAAuB,EAAC;MACvCM,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE;KACf,CAAC;EACJ,CAAC;;qBAlDUJ,YAAY;EAAA;;UAAZA,YAAY;IAAAK;IAAAC;MAAA;;;;;;;;;;;;;;QCXzBC,gCAA+B;;;;;;qBDA/B;CA8DC,EAxDD;SAKaP,YAAY","names":["SesionExpiradaComponent","bnIdle","dialog","Date","AppComponent","open","width","height","disableClose","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\app.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\app.component.html"],"sourcesContent":["import {Component, ViewChild} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { SesionExpiradaComponent } from '@pages/errors/sesion-expirada/sesion-expirada.component';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\n\r\n@Component({ \r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n  count:number=0;\r\n  counter = 0;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  IP_api:any=[];\r\n\r\n\r\n  @ViewChild('paginator') paginator: MatPaginator;\r\n  @ViewChild('paginatorPageSize') paginatorPageSize: MatPaginator;\r\n\r\n  \r\n  constructor(private bnIdle: BnNgIdleService,public dialog: MatDialog){\r\n    // this.abrirModalSesionExpirada();\r\n    // console.log(publicIpv4());\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    // 900 = 15 minute\r\n    // 600 = 10 minute\r\n    // 60 = 1 minute\r\n    // 30 = 30seg\r\n    // 5 = 5 seg\r\n    // this.bnIdle.startWatching(9000000).subscribe((res) => { //cambiar el valor del starWatching 50\r\n    //   this.counter = this.counter === 60 ? 0 : this.counter + 1; //this.counter es el contador a mayor numero tamanio mas tardara en salir el modal\r\n    //   // console.log(this.counter);\r\n    //   if(res && this.counter == 1){\r\n    //     let hour = this.hora_actual.getHours();\r\n    //     let minuts = this.hora_actual.getMinutes();\r\n    //     console.log('sesion expirada:', this.count, hour+\":\"+minuts);\r\n    //     this.abrirModalSesionExpirada();\r\n    //   }\r\n    // });    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //Si se coloca esto en cada componente q tiene el paginator ya no sale PAGINATION PER PAGE\r\n    //pero tiene q ser de manera global y no componenete por componente\r\n    // this.paginator._intl.itemsPerPageLabel = 'Items por página:';\r\n    // this.paginator._intl.nextPageLabel = 'Siguiente';\r\n    // this.paginator._intl.previousPageLabel = 'Anterior';\r\n  }\r\n\r\n  abrirModalSesionExpirada(){\r\n    this.dialog.open(SesionExpiradaComponent,{\r\n      width: '450px',\r\n      height: 'auto',\r\n      disableClose: true \r\n    });\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}