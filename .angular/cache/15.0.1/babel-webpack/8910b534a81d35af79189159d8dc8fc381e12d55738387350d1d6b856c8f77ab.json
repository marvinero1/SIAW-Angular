{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nvar LocalidadesCreateComponent = /** @class */function () {\n  function LocalidadesCreateComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.localidad = [];\n    this.moneda = [];\n    this.empresa = [];\n    this.userLogueado = [];\n    this.ventana = \"localidad-create\";\n    this.detalle = \"localidad-detalle\";\n    this.tipo = \"transaccion-localidad-POST\";\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  LocalidadesCreateComponent.prototype.ngOnInit = function () {};\n  LocalidadesCreateComponent.prototype.createForm = function () {\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.dataform.codigo, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      provincia: [this.dataform.provincia],\n      codigo_postal: [this.dataform.codigo_postal],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [this.userLogueado]\n    });\n  };\n  LocalidadesCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:-- /seg_adm/mant/adarea/\";\n    return this.api.create(\"/seg_adm/mant/abmadlocalidad/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.localidad = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  LocalidadesCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  LocalidadesCreateComponent.Éµfac = function LocalidadesCreateComponent_Factory(t) {\n    return new (t || LocalidadesCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService));\n  };\n  LocalidadesCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: LocalidadesCreateComponent,\n    selectors: [[\"app-localidades-create\"]],\n    decls: 37,\n    vars: 2,\n    consts: [[1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"codigo\", \"maxlength\", \"6\", \"required\", \"\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"descripcion\", \"maxlength\", \"50\", \"required\", \"\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"provincia\", \"maxlength\", \"15\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"codigo_postal\", \"maxlength\", \"5\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"]],\n    template: function LocalidadesCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ÉµÉµtext(2, \"Crear Localidad\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"div\", 2);\n        i0.ÉµÉµtext(4, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5);\n        i0.ÉµÉµlistener(\"ngSubmit\", function LocalidadesCreateComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-form-field\", 8)(11, \"mat-label\");\n        i0.ÉµÉµtext(12, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(13, \"input\", 9);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(14, \"div\", 7)(15, \"mat-form-field\", 10)(16, \"mat-label\");\n        i0.ÉµÉµtext(17, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(18, \"input\", 11);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(19, \"div\", 6)(20, \"div\", 7)(21, \"mat-form-field\", 10)(22, \"mat-label\");\n        i0.ÉµÉµtext(23, \"Provincia \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(24, \"input\", 12);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(25, \"div\", 7)(26, \"mat-form-field\", 10)(27, \"mat-label\");\n        i0.ÉµÉµtext(28, \"C\\u00F3digo Postal \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(29, \"input\", 13);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(30, \"div\", 14)(31, \"button\", 15);\n        i0.ÉµÉµelement(32, \"i\", 16);\n        i0.ÉµÉµtext(33, \" Guardar\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(34, \"button\", 17);\n        i0.ÉµÉµlistener(\"click\", function LocalidadesCreateComponent_Template_button_click_34_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(35, \"i\", 18);\n        i0.ÉµÉµtext(36, \" Atras\");\n        i0.ÉµÉµelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(7);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(24);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i10.MatInput, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i11.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/administracion/localidades/localidades-create/localidades-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2FkbWluaXN0cmFjaW9uL2xvY2FsaWRhZGVzL2xvY2FsaWRhZGVzLWNyZWF0ZS9sb2NhbGlkYWRlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return LocalidadesCreateComponent;\n}();\nexport { LocalidadesCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","Date","userLogueado","localStorage","getItem","undefined","JSON","parse","userConn","FormularioData","createForm","LocalidadesCreateComponent","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","dataform","compose","required","descripcion","provincia","codigo_postal","fechareg","transform","fecha_actual","horareg","usuarioreg","data","value","errorMessage","create","subscribe","next","datav","_this","localidad","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\localidades\\localidades-create\\localidades-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\localidades\\localidades-create\\localidades-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-localidades-create',\r\n  templateUrl: './localidades-create.component.html',\r\n  styleUrls: ['./localidades-create.component.scss']\r\n})\r\nexport class LocalidadesCreateComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform:any='';\r\n  localidad:any=[];\r\n  moneda:any=[];\r\n  empresa:any=[];\r\n  userConn:any;\r\n  userLogueado:any=[];\r\n\r\n  public ventana=\"localidad-create\"\r\n  public detalle=\"localidad-detalle\";\r\n  public tipo=\"transaccion-localidad-POST\";\r\n  \r\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<LocalidadesCreateComponent>, public _snackBar: MatSnackBar,\r\n    public log_module:LogService, private toastr: ToastrService){\r\n      this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n      this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n  \r\n      this.FormularioData = this.createForm();\r\n  } \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createForm(): FormGroup{\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.dataform.codigo,Validators.compose([Validators.required])],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n      provincia: [this.dataform.provincia,],\r\n      codigo_postal: [this.dataform.codigo_postal],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      horareg: [hora_actual_complete],\r\n      usuarioreg: [this.userLogueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\"+\"Ruta:-- /seg_adm/mant/adarea/\";\r\n    \r\n    return this.api.create(\"/seg_adm/mant/abmadlocalidad/\"+this.userConn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.localidad = datav;\r\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n          this.onNoClick();\r\n          this.spinner.show();\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"p-2\">\r\n  <h1 mat-dialog-title>Crear Localidad</h1>\r\n  <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <div class=\"container\">\r\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-md\">\r\n                <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n                  <mat-label>CÃ³digo </mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"codigo\" maxlength=\"6\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md\">\r\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                  <mat-label>DescripciÃ³n </mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"descripcion\" maxlength=\"50\" required>\r\n                </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-md\">\r\n              <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                <mat-label>Provincia </mat-label>\r\n                <input type=\"text\" matInput formControlName=\"provincia\" maxlength=\"15\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md\">\r\n              <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                <mat-label>CÃ³digo Postal </mat-label>\r\n                <input type=\"text\" matInput formControlName=\"codigo_postal\" maxlength=\"5\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n              <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i class=\"fa fa-save\"></i> Guardar</button>\r\n          </div>\r\n      </form>\r\n      <button mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</button>\r\n  </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}