{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass, closest, hasClass, removeClass, outerHeight, isDetached } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\"; // Developer note! Whenever you make a change in this file, make an analogous change in manualRowResize.js\nexport const PLUGIN_KEY = 'manualColumnResize';\nexport const PLUGIN_PRIORITY = 130;\nconst PERSISTENT_STATE_KEY = 'manualColumnWidths';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnResize\n * @class ManualColumnResize\n *\n * @description\n * This plugin allows to change columns width. To make columns width persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * The plugin creates additional components to make resizing possibly using user interface:\n * - handle - the draggable element that sets the desired width of the column.\n * - guide - the helper guide that shows the desired width as a vertical guide.\n */\nvar _currentTH = /*#__PURE__*/new WeakMap();\nvar _currentCol = /*#__PURE__*/new WeakMap();\nvar _selectedCols = /*#__PURE__*/new WeakMap();\nvar _currentWidth = /*#__PURE__*/new WeakMap();\nvar _newSize = /*#__PURE__*/new WeakMap();\nvar _startY = /*#__PURE__*/new WeakMap();\nvar _startWidth = /*#__PURE__*/new WeakMap();\nvar _startOffset = /*#__PURE__*/new WeakMap();\nvar _handle = /*#__PURE__*/new WeakMap();\nvar _guide = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByRMB = /*#__PURE__*/new WeakMap();\nvar _dblclick = /*#__PURE__*/new WeakMap();\nvar _autoresizeTimeout = /*#__PURE__*/new WeakMap();\nvar _columnWidthsMap = /*#__PURE__*/new WeakMap();\nvar _config = /*#__PURE__*/new WeakMap();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nvar _onMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onContextMenu = /*#__PURE__*/new WeakSet();\nvar _onModifyColWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeStretchingColumnWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeColumnResize = /*#__PURE__*/new WeakSet();\nexport class ManualColumnResize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n\n  /**\n   * @type {HTMLTableHeaderCellElement}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * `beforeColumnResize` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeColumnResize);\n    /**\n     * Modifies the provided column stretched width. This hook decides if specified column should be stretched or not.\n     *\n     * @param {number} stretchedWidth Stretched width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeStretchingColumnWidth);\n    /**\n     * Modifies the provided column width, based on the plugin settings.\n     *\n     * @param {number} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColWidth);\n    /**\n     * Callback for \"contextmenu\" event triggered on element showing move handle. It removes handle and guide elements.\n     */\n    _classPrivateMethodInitSpec(this, _onContextMenu);\n    /**\n     * 'mouseup' event callback - apply the column resizing.\n     *\n     * @fires Hooks#beforeColumnResize\n     * @fires Hooks#afterColumnResize\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'mousemove' event callback - refresh the handle and guide positions, cache the new column width.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * 'mousedown' event callback.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseDown);\n    /**\n     * 'mouseover' event callback - set the handle position.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseOver);\n    /**\n     * Callback to call on map's `init` local hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    _classPrivateFieldInitSpec(this, _currentTH, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentCol, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCols, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _newSize, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startY, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startOffset, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _handle, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _guide, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByRMB, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _dblclick, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _autoresizeTimeout, {\n      writable: true,\n      value: null\n    });\n    /**\n     * PhysicalIndexToValueMap to keep and track widths for physical column indexes.\n     *\n     * @type {PhysicalIndexToValueMap}\n     */\n    _classPrivateFieldInitSpec(this, _columnWidthsMap, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Private pool to save configuration from updateSettings.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _config, {\n      writable: true,\n      value: void 0\n    });\n    addClass(_classPrivateFieldGet(this, _handle), 'manualColumnResizer');\n    addClass(_classPrivateFieldGet(this, _guide), 'manualColumnResizerGuide');\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  get inlineDir() {\n    return this.hot.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnResize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    _classPrivateFieldSet(this, _columnWidthsMap, new IndexToValueMap());\n    _classPrivateFieldGet(this, _columnWidthsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _columnWidthsMap));\n    this.addHook('modifyColWidth', (width, col) => _classPrivateMethodGet(this, _onModifyColWidth, _onModifyColWidth2).call(this, width, col));\n    this.addHook('beforeStretchingColumnWidth', (stretchedWidth, column) => _classPrivateMethodGet(this, _onBeforeStretchingColumnWidth, _onBeforeStretchingColumnWidth2).call(this, stretchedWidth, column));\n    this.addHook('beforeColumnResize', (newSize, column, isDoubleClick) => _classPrivateMethodGet(this, _onBeforeColumnResize, _onBeforeColumnResize2).call(this, newSize, column, isDoubleClick));\n    this.bindEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnResize`](@/api/options.md#manualcolumnresize)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldSet(this, _config, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n    this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n    super.disablePlugin();\n  }\n\n  /**\n   * Saves the current sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @fires Hooks#persistentStateSave\n   */\n  saveManualColumnWidths() {\n    this.hot.runHooks('persistentStateSave', PERSISTENT_STATE_KEY, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n  }\n\n  /**\n   * Loads the previously saved sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @returns {Array}\n   * @fires Hooks#persistentStateLoad\n   */\n  loadManualColumnWidths() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', PERSISTENT_STATE_KEY, storedState);\n    return storedState.value;\n  }\n\n  /**\n   * Sets the new width for specified column index.\n   *\n   * @param {number} column Visual column index.\n   * @param {number} width Column width (no less than 20px).\n   * @returns {number} Returns new width.\n   */\n  setManualSize(column, width) {\n    const newWidth = Math.max(width, 20);\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, newWidth);\n    return newWidth;\n  }\n\n  /**\n   * Clears the cache for the specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  clearManualSize(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, null);\n  }\n  /**\n   * Set the resize handle position.\n   *\n   * @private\n   * @param {HTMLCellElement} TH TH HTML element.\n   */\n  setupHandlePosition(TH) {\n    if (!TH.parentNode) {\n      return;\n    }\n    _classPrivateFieldSet(this, _currentTH, TH);\n    const {\n      _wt: wt\n    } = this.hot.view;\n    const cellCoords = wt.wtTable.getCoords(_classPrivateFieldGet(this, _currentTH));\n    const col = cellCoords.col;\n\n    // Ignore column headers.\n    if (col < 0) {\n      return;\n    }\n    const headerHeight = outerHeight(_classPrivateFieldGet(this, _currentTH));\n    const box = _classPrivateFieldGet(this, _currentTH).getBoundingClientRect();\n    // Read \"fixedColumnsStart\" through the Walkontable as in that context, the fixed columns\n    // are modified (reduced by the number of hidden columns) by TableView module.\n    const fixedColumn = col < wt.getSetting('fixedColumnsStart');\n    let relativeHeaderPosition;\n    if (fixedColumn) {\n      relativeHeaderPosition = wt.wtOverlays.topInlineStartCornerOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n\n    // If the TH is not a child of the top-left overlay, recalculate using\n    // the top overlay - as this overlay contains the rest of the headers.\n    if (!relativeHeaderPosition) {\n      relativeHeaderPosition = wt.wtOverlays.topOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n    _classPrivateFieldSet(this, _currentCol, this.hot.columnIndexMapper.getVisualFromRenderableIndex(col));\n    _classPrivateFieldSet(this, _selectedCols, []);\n    const isFullColumnSelected = this.hot.selection.isSelectedByCorner() || this.hot.selection.isSelectedByColumnHeader();\n    if (this.hot.selection.isSelected() && isFullColumnSelected) {\n      const selectionRanges = this.hot.getSelectedRange();\n      arrayEach(selectionRanges, selectionRange => {\n        const fromColumn = selectionRange.getTopStartCorner().col;\n        const toColumn = selectionRange.getBottomEndCorner().col;\n\n        // Add every selected column for resize action.\n        rangeEach(fromColumn, toColumn, columnIndex => {\n          if (!_classPrivateFieldGet(this, _selectedCols).includes(columnIndex)) {\n            _classPrivateFieldGet(this, _selectedCols).push(columnIndex);\n          }\n        });\n      });\n    }\n\n    // Resizing element beyond the current selection (also when there is no selection).\n    if (!_classPrivateFieldGet(this, _selectedCols).includes(_classPrivateFieldGet(this, _currentCol))) {\n      _classPrivateFieldSet(this, _selectedCols, [_classPrivateFieldGet(this, _currentCol)]);\n    }\n    _classPrivateFieldSet(this, _startOffset, relativeHeaderPosition.start - 6);\n    _classPrivateFieldSet(this, _startWidth, parseInt(box.width, 10));\n    _classPrivateFieldGet(this, _handle).style.top = `${relativeHeaderPosition.top}px`;\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _startWidth)}px`;\n    _classPrivateFieldGet(this, _handle).style.height = `${headerHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _handle));\n  }\n\n  /**\n   * Refresh the resize handle position.\n   *\n   * @private\n   */\n  refreshHandlePosition() {\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _currentWidth)}px`;\n  }\n\n  /**\n   * Sets the resize guide position.\n   *\n   * @private\n   */\n  setupGuidePosition() {\n    const handleHeight = parseInt(outerHeight(_classPrivateFieldGet(this, _handle)), 10);\n    const handleBottomPosition = parseInt(_classPrivateFieldGet(this, _handle).style.top, 10) + handleHeight;\n    const maximumVisibleElementHeight = parseInt(this.hot.view.maximumVisibleElementHeight(0), 10);\n    addClass(_classPrivateFieldGet(this, _handle), 'active');\n    addClass(_classPrivateFieldGet(this, _guide), 'active');\n    _classPrivateFieldGet(this, _guide).style.top = `${handleBottomPosition}px`;\n    this.refreshGuidePosition();\n    _classPrivateFieldGet(this, _guide).style.height = `${maximumVisibleElementHeight - handleHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _guide));\n  }\n\n  /**\n   * Refresh the resize guide position.\n   *\n   * @private\n   */\n  refreshGuidePosition() {\n    _classPrivateFieldGet(this, _guide).style[this.inlineDir] = _classPrivateFieldGet(this, _handle).style[this.inlineDir];\n  }\n\n  /**\n   * Hides both the resize handle and resize guide.\n   *\n   * @private\n   */\n  hideHandleAndGuide() {\n    removeClass(_classPrivateFieldGet(this, _handle), 'active');\n    removeClass(_classPrivateFieldGet(this, _guide), 'active');\n  }\n\n  /**\n   * Checks if provided element is considered a column header.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {boolean}\n   */\n  checkIfColumnHeader(element) {\n    const thead = closest(element, ['THEAD'], this.hot.rootElement);\n    const {\n      topOverlay,\n      topInlineStartCornerOverlay\n    } = this.hot.view._wt.wtOverlays;\n    return [topOverlay.clone.wtTable.THEAD, topInlineStartCornerOverlay.clone.wtTable.THEAD].includes(thead);\n  }\n\n  /**\n   * Gets the TH element from the provided element.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {HTMLElement}\n   */\n  getClosestTHParent(element) {\n    if (element.tagName !== 'TABLE') {\n      if (element.tagName === 'TH') {\n        return element;\n      }\n      return this.getClosestTHParent(element.parentNode);\n    }\n    return null;\n  }\n  /**\n   * Auto-size row after doubleclick - callback.\n   *\n   * @private\n   * @fires Hooks#beforeColumnResize\n   * @fires Hooks#afterColumnResize\n   */\n  afterMouseDownTimeout() {\n    const render = () => {\n      this.hot.forceFullRender = true;\n      this.hot.view.render(); // updates all\n      this.hot.view.adjustElementsSize(true);\n    };\n    const resize = (column, forceRender) => {\n      const hookNewSize = this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (hookNewSize !== undefined) {\n        _classPrivateFieldSet(this, _newSize, hookNewSize);\n      }\n      if (this.hot.getSettings().stretchH === 'all') {\n        this.clearManualSize(column);\n      } else {\n        this.setManualSize(column, _classPrivateFieldGet(this, _newSize)); // double click sets by auto row size plugin\n      }\n\n      this.saveManualColumnWidths();\n      this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (forceRender) {\n        render();\n      }\n    };\n    if (_classPrivateFieldGet(this, _dblclick) >= 2) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    _classPrivateFieldSet(this, _dblclick, 0);\n    _classPrivateFieldSet(this, _autoresizeTimeout, null);\n  }\n  /**\n   * Binds the mouse events.\n   *\n   * @private\n   */\n  bindEvents() {\n    const {\n      rootWindow,\n      rootElement\n    } = this.hot;\n    this.eventManager.addEventListener(rootElement, 'mouseover', e => _classPrivateMethodGet(this, _onMouseOver, _onMouseOver2).call(this, e));\n    this.eventManager.addEventListener(rootElement, 'mousedown', e => _classPrivateMethodGet(this, _onMouseDown, _onMouseDown2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mousemove', e => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(_classPrivateFieldGet(this, _handle), 'contextmenu', () => _classPrivateMethodGet(this, _onContextMenu, _onContextMenu2).call(this));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onMapInit2() {\n  const initialSetting = this.hot.getSettings()[PLUGIN_KEY];\n  const loadedManualColumnWidths = this.loadManualColumnWidths();\n  if (typeof loadedManualColumnWidths !== 'undefined') {\n    this.hot.batchExecution(() => {\n      loadedManualColumnWidths.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  } else if (Array.isArray(initialSetting)) {\n    this.hot.batchExecution(() => {\n      initialSetting.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n    _classPrivateFieldSet(this, _config, initialSetting);\n  } else if (initialSetting === true && Array.isArray(_classPrivateFieldGet(this, _config))) {\n    this.hot.batchExecution(() => {\n      _classPrivateFieldGet(this, _config).forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  }\n}\nfunction _onMouseOver2(event) {\n  // Workaround for #6926 - if the `event.target` is temporarily detached, we can skip this callback and wait for\n  // the next `onmouseover`.\n  if (isDetached(event.target)) {\n    return;\n  }\n\n  // A \"mouseover\" action is triggered right after executing \"contextmenu\" event. It should be ignored.\n  if (_classPrivateFieldGet(this, _isTriggeredByRMB) === true) {\n    return;\n  }\n  if (this.checkIfColumnHeader(event.target)) {\n    const th = this.getClosestTHParent(event.target);\n    if (!th) {\n      return;\n    }\n    const colspan = th.getAttribute('colspan');\n    if (th && (colspan === null || colspan === '1')) {\n      if (!_classPrivateFieldGet(this, _pressed)) {\n        this.setupHandlePosition(th);\n      }\n    }\n  }\n}\nfunction _onMouseDown2(event) {\n  if (hasClass(event.target, 'manualColumnResizer')) {\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n    this.setupGuidePosition();\n    _classPrivateFieldSet(this, _pressed, true);\n    if (_classPrivateFieldGet(this, _autoresizeTimeout) === null) {\n      _classPrivateFieldSet(this, _autoresizeTimeout, setTimeout(() => this.afterMouseDownTimeout(), 500));\n      this.hot._registerTimeout(_classPrivateFieldGet(this, _autoresizeTimeout));\n    }\n    _classPrivateFieldSet(this, _dblclick, _classPrivateFieldGet(this, _dblclick) + 1);\n    this.startX = event.pageX;\n    _classPrivateFieldSet(this, _newSize, _classPrivateFieldGet(this, _startWidth));\n  }\n}\nfunction _onMouseMove2(event) {\n  if (_classPrivateFieldGet(this, _pressed)) {\n    const change = (event.pageX - this.startX) * this.hot.getDirectionFactor();\n    _classPrivateFieldSet(this, _currentWidth, _classPrivateFieldGet(this, _startWidth) + change);\n    arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n      _classPrivateFieldSet(this, _newSize, this.setManualSize(selectedCol, _classPrivateFieldGet(this, _currentWidth)));\n    });\n    this.refreshHandlePosition();\n    this.refreshGuidePosition();\n  }\n}\nfunction _onMouseUp2() {\n  const render = () => {\n    this.hot.forceFullRender = true;\n    this.hot.view.render(); // updates all\n    this.hot.view.adjustElementsSize(true);\n  };\n  const resize = (column, forceRender) => {\n    this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n    if (forceRender) {\n      render();\n    }\n    this.saveManualColumnWidths();\n    this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n  };\n  if (_classPrivateFieldGet(this, _pressed)) {\n    this.hideHandleAndGuide();\n    _classPrivateFieldSet(this, _pressed, false);\n    if (_classPrivateFieldGet(this, _newSize) !== _classPrivateFieldGet(this, _startWidth)) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n  }\n}\nfunction _onContextMenu2() {\n  this.hideHandleAndGuide();\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _handle));\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _guide));\n  _classPrivateFieldSet(this, _pressed, false);\n  _classPrivateFieldSet(this, _isTriggeredByRMB, true);\n\n  // There is thrown \"mouseover\" event right after opening a context menu. This flag inform that handle\n  // shouldn't be drawn just after removing it.\n  this.hot._registerImmediate(() => {\n    _classPrivateFieldSet(this, _isTriggeredByRMB, false);\n  });\n}\nfunction _onModifyColWidth2(width, column) {\n  let newWidth = width;\n  if (this.enabled) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    const columnWidth = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(physicalColumn);\n    if (this.hot.getSettings()[PLUGIN_KEY] && columnWidth) {\n      newWidth = columnWidth;\n    }\n  }\n  return newWidth;\n}\nfunction _onBeforeStretchingColumnWidth2(stretchedWidth, column) {\n  let width = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(column);\n  if (width === null) {\n    width = stretchedWidth;\n  }\n  return width;\n}\nfunction _onBeforeColumnResize2() {\n  // clear the header height cache information\n  this.hot.view._wt.wtViewport.resetHasOversizedColumnHeadersMarked();\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","privateMap","value","set","privateCollection","has","TypeError","_classPrivateMethodGet","receiver","fn","_classPrivateFieldSet","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorSet","call","writable","_classPrivateFieldGet","_classApplyDescriptorGet","action","get","BasePlugin","addClass","closest","hasClass","removeClass","outerHeight","isDetached","arrayEach","rangeEach","PhysicalIndexToValueMap","IndexToValueMap","PLUGIN_KEY","PLUGIN_PRIORITY","PERSISTENT_STATE_KEY","_currentTH","WeakMap","_currentCol","_selectedCols","_currentWidth","_newSize","_startY","_startWidth","_startOffset","_handle","_guide","_pressed","_isTriggeredByRMB","_dblclick","_autoresizeTimeout","_columnWidthsMap","_config","_onMapInit","WeakSet","_onMouseOver","_onMouseDown","_onMouseMove","_onMouseUp","_onContextMenu","_onModifyColWidth","_onBeforeStretchingColumnWidth","_onBeforeColumnResize","ManualColumnResize","constructor","hotInstance","hot","rootDocument","createElement","inlineDir","isRtl","isEnabled","getSettings","enablePlugin","enabled","addLocalHook","_onMapInit2","columnIndexMapper","registerMap","pluginName","addHook","width","col","_onModifyColWidth2","stretchedWidth","column","_onBeforeStretchingColumnWidth2","newSize","isDoubleClick","_onBeforeColumnResize2","bindEvents","updatePlugin","disablePlugin","getValues","unregisterMap","saveManualColumnWidths","runHooks","loadManualColumnWidths","storedState","setManualSize","newWidth","Math","max","physicalColumn","toPhysicalColumn","setValueAtIndex","clearManualSize","setupHandlePosition","TH","parentNode","_wt","wt","view","cellCoords","wtTable","getCoords","headerHeight","box","getBoundingClientRect","fixedColumn","getSetting","relativeHeaderPosition","wtOverlays","topInlineStartCornerOverlay","getRelativeCellPosition","row","topOverlay","getVisualFromRenderableIndex","isFullColumnSelected","selection","isSelectedByCorner","isSelectedByColumnHeader","isSelected","selectionRanges","getSelectedRange","selectionRange","fromColumn","getTopStartCorner","toColumn","getBottomEndCorner","columnIndex","includes","push","start","parseInt","style","top","height","rootElement","appendChild","refreshHandlePosition","setupGuidePosition","handleHeight","handleBottomPosition","maximumVisibleElementHeight","refreshGuidePosition","hideHandleAndGuide","checkIfColumnHeader","element","thead","clone","THEAD","getClosestTHParent","tagName","afterMouseDownTimeout","render","forceFullRender","adjustElementsSize","resize","forceRender","hookNewSize","undefined","stretchH","selectedColsLength","length","selectedCol","rootWindow","eventManager","addEventListener","e","_onMouseOver2","_onMouseDown2","_onMouseMove2","_onMouseUp2","_onContextMenu2","destroy","initialSetting","loadedManualColumnWidths","batchExecution","forEach","physicalIndex","Array","isArray","event","target","th","colspan","getAttribute","setTimeout","_registerTimeout","startX","pageX","change","getDirectionFactor","removeChild","_registerImmediate","columnWidth","getValueAtIndex","wtViewport","resetHasOversizedColumnHeadersMarked"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/manualColumnResize/manualColumnResize.mjs"],"sourcesContent":["import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass, closest, hasClass, removeClass, outerHeight, isDetached } from \"../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\"; // Developer note! Whenever you make a change in this file, make an analogous change in manualRowResize.js\nexport const PLUGIN_KEY = 'manualColumnResize';\nexport const PLUGIN_PRIORITY = 130;\nconst PERSISTENT_STATE_KEY = 'manualColumnWidths';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnResize\n * @class ManualColumnResize\n *\n * @description\n * This plugin allows to change columns width. To make columns width persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * The plugin creates additional components to make resizing possibly using user interface:\n * - handle - the draggable element that sets the desired width of the column.\n * - guide - the helper guide that shows the desired width as a vertical guide.\n */\nvar _currentTH = /*#__PURE__*/new WeakMap();\nvar _currentCol = /*#__PURE__*/new WeakMap();\nvar _selectedCols = /*#__PURE__*/new WeakMap();\nvar _currentWidth = /*#__PURE__*/new WeakMap();\nvar _newSize = /*#__PURE__*/new WeakMap();\nvar _startY = /*#__PURE__*/new WeakMap();\nvar _startWidth = /*#__PURE__*/new WeakMap();\nvar _startOffset = /*#__PURE__*/new WeakMap();\nvar _handle = /*#__PURE__*/new WeakMap();\nvar _guide = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _isTriggeredByRMB = /*#__PURE__*/new WeakMap();\nvar _dblclick = /*#__PURE__*/new WeakMap();\nvar _autoresizeTimeout = /*#__PURE__*/new WeakMap();\nvar _columnWidthsMap = /*#__PURE__*/new WeakMap();\nvar _config = /*#__PURE__*/new WeakMap();\nvar _onMapInit = /*#__PURE__*/new WeakSet();\nvar _onMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onContextMenu = /*#__PURE__*/new WeakSet();\nvar _onModifyColWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeStretchingColumnWidth = /*#__PURE__*/new WeakSet();\nvar _onBeforeColumnResize = /*#__PURE__*/new WeakSet();\nexport class ManualColumnResize extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n\n  /**\n   * @type {HTMLTableHeaderCellElement}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    /**\n     * `beforeColumnResize` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeColumnResize);\n    /**\n     * Modifies the provided column stretched width. This hook decides if specified column should be stretched or not.\n     *\n     * @param {number} stretchedWidth Stretched width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeStretchingColumnWidth);\n    /**\n     * Modifies the provided column width, based on the plugin settings.\n     *\n     * @param {number} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _onModifyColWidth);\n    /**\n     * Callback for \"contextmenu\" event triggered on element showing move handle. It removes handle and guide elements.\n     */\n    _classPrivateMethodInitSpec(this, _onContextMenu);\n    /**\n     * 'mouseup' event callback - apply the column resizing.\n     *\n     * @fires Hooks#beforeColumnResize\n     * @fires Hooks#afterColumnResize\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'mousemove' event callback - refresh the handle and guide positions, cache the new column width.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * 'mousedown' event callback.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseDown);\n    /**\n     * 'mouseover' event callback - set the handle position.\n     *\n     * @param {MouseEvent} event The mouse event.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseOver);\n    /**\n     * Callback to call on map's `init` local hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onMapInit);\n    _classPrivateFieldInitSpec(this, _currentTH, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentCol, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCols, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _currentWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _newSize, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startY, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startWidth, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _startOffset, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _handle, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _guide, {\n      writable: true,\n      value: this.hot.rootDocument.createElement('DIV')\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: null\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isTriggeredByRMB, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _dblclick, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _autoresizeTimeout, {\n      writable: true,\n      value: null\n    });\n    /**\n     * PhysicalIndexToValueMap to keep and track widths for physical column indexes.\n     *\n     * @type {PhysicalIndexToValueMap}\n     */\n    _classPrivateFieldInitSpec(this, _columnWidthsMap, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Private pool to save configuration from updateSettings.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _config, {\n      writable: true,\n      value: void 0\n    });\n    addClass(_classPrivateFieldGet(this, _handle), 'manualColumnResizer');\n    addClass(_classPrivateFieldGet(this, _guide), 'manualColumnResizerGuide');\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  get inlineDir() {\n    return this.hot.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnResize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    _classPrivateFieldSet(this, _columnWidthsMap, new IndexToValueMap());\n    _classPrivateFieldGet(this, _columnWidthsMap).addLocalHook('init', () => _classPrivateMethodGet(this, _onMapInit, _onMapInit2).call(this));\n    this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _columnWidthsMap));\n    this.addHook('modifyColWidth', (width, col) => _classPrivateMethodGet(this, _onModifyColWidth, _onModifyColWidth2).call(this, width, col));\n    this.addHook('beforeStretchingColumnWidth', (stretchedWidth, column) => _classPrivateMethodGet(this, _onBeforeStretchingColumnWidth, _onBeforeStretchingColumnWidth2).call(this, stretchedWidth, column));\n    this.addHook('beforeColumnResize', (newSize, column, isDoubleClick) => _classPrivateMethodGet(this, _onBeforeColumnResize, _onBeforeColumnResize2).call(this, newSize, column, isDoubleClick));\n    this.bindEvents();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnResize`](@/api/options.md#manualcolumnresize)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    _classPrivateFieldSet(this, _config, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n    this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n    super.disablePlugin();\n  }\n\n  /**\n   * Saves the current sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @fires Hooks#persistentStateSave\n   */\n  saveManualColumnWidths() {\n    this.hot.runHooks('persistentStateSave', PERSISTENT_STATE_KEY, _classPrivateFieldGet(this, _columnWidthsMap).getValues());\n  }\n\n  /**\n   * Loads the previously saved sizes using the persistentState plugin (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @returns {Array}\n   * @fires Hooks#persistentStateLoad\n   */\n  loadManualColumnWidths() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', PERSISTENT_STATE_KEY, storedState);\n    return storedState.value;\n  }\n\n  /**\n   * Sets the new width for specified column index.\n   *\n   * @param {number} column Visual column index.\n   * @param {number} width Column width (no less than 20px).\n   * @returns {number} Returns new width.\n   */\n  setManualSize(column, width) {\n    const newWidth = Math.max(width, 20);\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, newWidth);\n    return newWidth;\n  }\n\n  /**\n   * Clears the cache for the specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  clearManualSize(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalColumn, null);\n  }\n  /**\n   * Set the resize handle position.\n   *\n   * @private\n   * @param {HTMLCellElement} TH TH HTML element.\n   */\n  setupHandlePosition(TH) {\n    if (!TH.parentNode) {\n      return;\n    }\n    _classPrivateFieldSet(this, _currentTH, TH);\n    const {\n      _wt: wt\n    } = this.hot.view;\n    const cellCoords = wt.wtTable.getCoords(_classPrivateFieldGet(this, _currentTH));\n    const col = cellCoords.col;\n\n    // Ignore column headers.\n    if (col < 0) {\n      return;\n    }\n    const headerHeight = outerHeight(_classPrivateFieldGet(this, _currentTH));\n    const box = _classPrivateFieldGet(this, _currentTH).getBoundingClientRect();\n    // Read \"fixedColumnsStart\" through the Walkontable as in that context, the fixed columns\n    // are modified (reduced by the number of hidden columns) by TableView module.\n    const fixedColumn = col < wt.getSetting('fixedColumnsStart');\n    let relativeHeaderPosition;\n    if (fixedColumn) {\n      relativeHeaderPosition = wt.wtOverlays.topInlineStartCornerOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n\n    // If the TH is not a child of the top-left overlay, recalculate using\n    // the top overlay - as this overlay contains the rest of the headers.\n    if (!relativeHeaderPosition) {\n      relativeHeaderPosition = wt.wtOverlays.topOverlay.getRelativeCellPosition(_classPrivateFieldGet(this, _currentTH), cellCoords.row, cellCoords.col);\n    }\n    _classPrivateFieldSet(this, _currentCol, this.hot.columnIndexMapper.getVisualFromRenderableIndex(col));\n    _classPrivateFieldSet(this, _selectedCols, []);\n    const isFullColumnSelected = this.hot.selection.isSelectedByCorner() || this.hot.selection.isSelectedByColumnHeader();\n    if (this.hot.selection.isSelected() && isFullColumnSelected) {\n      const selectionRanges = this.hot.getSelectedRange();\n      arrayEach(selectionRanges, selectionRange => {\n        const fromColumn = selectionRange.getTopStartCorner().col;\n        const toColumn = selectionRange.getBottomEndCorner().col;\n\n        // Add every selected column for resize action.\n        rangeEach(fromColumn, toColumn, columnIndex => {\n          if (!_classPrivateFieldGet(this, _selectedCols).includes(columnIndex)) {\n            _classPrivateFieldGet(this, _selectedCols).push(columnIndex);\n          }\n        });\n      });\n    }\n\n    // Resizing element beyond the current selection (also when there is no selection).\n    if (!_classPrivateFieldGet(this, _selectedCols).includes(_classPrivateFieldGet(this, _currentCol))) {\n      _classPrivateFieldSet(this, _selectedCols, [_classPrivateFieldGet(this, _currentCol)]);\n    }\n    _classPrivateFieldSet(this, _startOffset, relativeHeaderPosition.start - 6);\n    _classPrivateFieldSet(this, _startWidth, parseInt(box.width, 10));\n    _classPrivateFieldGet(this, _handle).style.top = `${relativeHeaderPosition.top}px`;\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _startWidth)}px`;\n    _classPrivateFieldGet(this, _handle).style.height = `${headerHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _handle));\n  }\n\n  /**\n   * Refresh the resize handle position.\n   *\n   * @private\n   */\n  refreshHandlePosition() {\n    _classPrivateFieldGet(this, _handle).style[this.inlineDir] = `${_classPrivateFieldGet(this, _startOffset) + _classPrivateFieldGet(this, _currentWidth)}px`;\n  }\n\n  /**\n   * Sets the resize guide position.\n   *\n   * @private\n   */\n  setupGuidePosition() {\n    const handleHeight = parseInt(outerHeight(_classPrivateFieldGet(this, _handle)), 10);\n    const handleBottomPosition = parseInt(_classPrivateFieldGet(this, _handle).style.top, 10) + handleHeight;\n    const maximumVisibleElementHeight = parseInt(this.hot.view.maximumVisibleElementHeight(0), 10);\n    addClass(_classPrivateFieldGet(this, _handle), 'active');\n    addClass(_classPrivateFieldGet(this, _guide), 'active');\n    _classPrivateFieldGet(this, _guide).style.top = `${handleBottomPosition}px`;\n    this.refreshGuidePosition();\n    _classPrivateFieldGet(this, _guide).style.height = `${maximumVisibleElementHeight - handleHeight}px`;\n    this.hot.rootElement.appendChild(_classPrivateFieldGet(this, _guide));\n  }\n\n  /**\n   * Refresh the resize guide position.\n   *\n   * @private\n   */\n  refreshGuidePosition() {\n    _classPrivateFieldGet(this, _guide).style[this.inlineDir] = _classPrivateFieldGet(this, _handle).style[this.inlineDir];\n  }\n\n  /**\n   * Hides both the resize handle and resize guide.\n   *\n   * @private\n   */\n  hideHandleAndGuide() {\n    removeClass(_classPrivateFieldGet(this, _handle), 'active');\n    removeClass(_classPrivateFieldGet(this, _guide), 'active');\n  }\n\n  /**\n   * Checks if provided element is considered a column header.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {boolean}\n   */\n  checkIfColumnHeader(element) {\n    const thead = closest(element, ['THEAD'], this.hot.rootElement);\n    const {\n      topOverlay,\n      topInlineStartCornerOverlay\n    } = this.hot.view._wt.wtOverlays;\n    return [topOverlay.clone.wtTable.THEAD, topInlineStartCornerOverlay.clone.wtTable.THEAD].includes(thead);\n  }\n\n  /**\n   * Gets the TH element from the provided element.\n   *\n   * @private\n   * @param {HTMLElement} element HTML element.\n   * @returns {HTMLElement}\n   */\n  getClosestTHParent(element) {\n    if (element.tagName !== 'TABLE') {\n      if (element.tagName === 'TH') {\n        return element;\n      }\n      return this.getClosestTHParent(element.parentNode);\n    }\n    return null;\n  }\n  /**\n   * Auto-size row after doubleclick - callback.\n   *\n   * @private\n   * @fires Hooks#beforeColumnResize\n   * @fires Hooks#afterColumnResize\n   */\n  afterMouseDownTimeout() {\n    const render = () => {\n      this.hot.forceFullRender = true;\n      this.hot.view.render(); // updates all\n      this.hot.view.adjustElementsSize(true);\n    };\n    const resize = (column, forceRender) => {\n      const hookNewSize = this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (hookNewSize !== undefined) {\n        _classPrivateFieldSet(this, _newSize, hookNewSize);\n      }\n      if (this.hot.getSettings().stretchH === 'all') {\n        this.clearManualSize(column);\n      } else {\n        this.setManualSize(column, _classPrivateFieldGet(this, _newSize)); // double click sets by auto row size plugin\n      }\n      this.saveManualColumnWidths();\n      this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, true);\n      if (forceRender) {\n        render();\n      }\n    };\n    if (_classPrivateFieldGet(this, _dblclick) >= 2) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    _classPrivateFieldSet(this, _dblclick, 0);\n    _classPrivateFieldSet(this, _autoresizeTimeout, null);\n  }\n  /**\n   * Binds the mouse events.\n   *\n   * @private\n   */\n  bindEvents() {\n    const {\n      rootWindow,\n      rootElement\n    } = this.hot;\n    this.eventManager.addEventListener(rootElement, 'mouseover', e => _classPrivateMethodGet(this, _onMouseOver, _onMouseOver2).call(this, e));\n    this.eventManager.addEventListener(rootElement, 'mousedown', e => _classPrivateMethodGet(this, _onMouseDown, _onMouseDown2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mousemove', e => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, e));\n    this.eventManager.addEventListener(rootWindow, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n    this.eventManager.addEventListener(_classPrivateFieldGet(this, _handle), 'contextmenu', () => _classPrivateMethodGet(this, _onContextMenu, _onContextMenu2).call(this));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onMapInit2() {\n  const initialSetting = this.hot.getSettings()[PLUGIN_KEY];\n  const loadedManualColumnWidths = this.loadManualColumnWidths();\n  if (typeof loadedManualColumnWidths !== 'undefined') {\n    this.hot.batchExecution(() => {\n      loadedManualColumnWidths.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  } else if (Array.isArray(initialSetting)) {\n    this.hot.batchExecution(() => {\n      initialSetting.forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n    _classPrivateFieldSet(this, _config, initialSetting);\n  } else if (initialSetting === true && Array.isArray(_classPrivateFieldGet(this, _config))) {\n    this.hot.batchExecution(() => {\n      _classPrivateFieldGet(this, _config).forEach((width, physicalIndex) => {\n        _classPrivateFieldGet(this, _columnWidthsMap).setValueAtIndex(physicalIndex, width);\n      });\n    }, true);\n  }\n}\nfunction _onMouseOver2(event) {\n  // Workaround for #6926 - if the `event.target` is temporarily detached, we can skip this callback and wait for\n  // the next `onmouseover`.\n  if (isDetached(event.target)) {\n    return;\n  }\n\n  // A \"mouseover\" action is triggered right after executing \"contextmenu\" event. It should be ignored.\n  if (_classPrivateFieldGet(this, _isTriggeredByRMB) === true) {\n    return;\n  }\n  if (this.checkIfColumnHeader(event.target)) {\n    const th = this.getClosestTHParent(event.target);\n    if (!th) {\n      return;\n    }\n    const colspan = th.getAttribute('colspan');\n    if (th && (colspan === null || colspan === '1')) {\n      if (!_classPrivateFieldGet(this, _pressed)) {\n        this.setupHandlePosition(th);\n      }\n    }\n  }\n}\nfunction _onMouseDown2(event) {\n  if (hasClass(event.target, 'manualColumnResizer')) {\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n    this.setupGuidePosition();\n    _classPrivateFieldSet(this, _pressed, true);\n    if (_classPrivateFieldGet(this, _autoresizeTimeout) === null) {\n      _classPrivateFieldSet(this, _autoresizeTimeout, setTimeout(() => this.afterMouseDownTimeout(), 500));\n      this.hot._registerTimeout(_classPrivateFieldGet(this, _autoresizeTimeout));\n    }\n    _classPrivateFieldSet(this, _dblclick, _classPrivateFieldGet(this, _dblclick) + 1);\n    this.startX = event.pageX;\n    _classPrivateFieldSet(this, _newSize, _classPrivateFieldGet(this, _startWidth));\n  }\n}\nfunction _onMouseMove2(event) {\n  if (_classPrivateFieldGet(this, _pressed)) {\n    const change = (event.pageX - this.startX) * this.hot.getDirectionFactor();\n    _classPrivateFieldSet(this, _currentWidth, _classPrivateFieldGet(this, _startWidth) + change);\n    arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n      _classPrivateFieldSet(this, _newSize, this.setManualSize(selectedCol, _classPrivateFieldGet(this, _currentWidth)));\n    });\n    this.refreshHandlePosition();\n    this.refreshGuidePosition();\n  }\n}\nfunction _onMouseUp2() {\n  const render = () => {\n    this.hot.forceFullRender = true;\n    this.hot.view.render(); // updates all\n    this.hot.view.adjustElementsSize(true);\n  };\n  const resize = (column, forceRender) => {\n    this.hot.runHooks('beforeColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n    if (forceRender) {\n      render();\n    }\n    this.saveManualColumnWidths();\n    this.hot.runHooks('afterColumnResize', _classPrivateFieldGet(this, _newSize), column, false);\n  };\n  if (_classPrivateFieldGet(this, _pressed)) {\n    this.hideHandleAndGuide();\n    _classPrivateFieldSet(this, _pressed, false);\n    if (_classPrivateFieldGet(this, _newSize) !== _classPrivateFieldGet(this, _startWidth)) {\n      const selectedColsLength = _classPrivateFieldGet(this, _selectedCols).length;\n      if (selectedColsLength > 1) {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol);\n        });\n        render();\n      } else {\n        arrayEach(_classPrivateFieldGet(this, _selectedCols), selectedCol => {\n          resize(selectedCol, true);\n        });\n      }\n    }\n    this.setupHandlePosition(_classPrivateFieldGet(this, _currentTH));\n  }\n}\nfunction _onContextMenu2() {\n  this.hideHandleAndGuide();\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _handle));\n  this.hot.rootElement.removeChild(_classPrivateFieldGet(this, _guide));\n  _classPrivateFieldSet(this, _pressed, false);\n  _classPrivateFieldSet(this, _isTriggeredByRMB, true);\n\n  // There is thrown \"mouseover\" event right after opening a context menu. This flag inform that handle\n  // shouldn't be drawn just after removing it.\n  this.hot._registerImmediate(() => {\n    _classPrivateFieldSet(this, _isTriggeredByRMB, false);\n  });\n}\nfunction _onModifyColWidth2(width, column) {\n  let newWidth = width;\n  if (this.enabled) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    const columnWidth = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(physicalColumn);\n    if (this.hot.getSettings()[PLUGIN_KEY] && columnWidth) {\n      newWidth = columnWidth;\n    }\n  }\n  return newWidth;\n}\nfunction _onBeforeStretchingColumnWidth2(stretchedWidth, column) {\n  let width = _classPrivateFieldGet(this, _columnWidthsMap).getValueAtIndex(column);\n  if (width === null) {\n    width = stretchedWidth;\n  }\n  return width;\n}\nfunction _onBeforeColumnResize2() {\n  // clear the header height cache information\n  this.hot.view._wt.wtViewport.resetHasOversizedColumnHeadersMarked();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}