{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @class ChangesObserver\n */\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport class ChangesObserver {\n  constructor() {\n    /**\n     * The field holds initial changes that will be used to notify the callbacks added using\n     * subscribe method. Regardless of the moment of listening for changes, the subscriber\n     * will be notified once with all changes made before subscribing.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, {\n      writable: true,\n      value: []\n    });\n  }\n  /**\n   * Subscribes to the observer.\n   *\n   * @param {Function} callback A function that will be called when the new changes will appear.\n   * @returns {ChangesObserver}\n   */\n  subscribe(callback) {\n    this.addLocalHook('change', callback);\n    this._write(_classPrivateFieldGet(this, _currentInitialChanges));\n    return this;\n  }\n\n  /**\n   * Unsubscribes all subscriptions. After the method call, the observer would not produce\n   * any new events.\n   *\n   * @returns {ChangesObserver}\n   */\n  unsubscribe() {\n    this.runLocalHooks('unsubscribe');\n    this.clearLocalHooks();\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces all\n   * changes events that are distributed further by the observer.\n   *\n   * @private\n   * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n   * @returns {ChangesObserver}\n   */\n  _write(changes) {\n    if (changes.length > 0) {\n      this.runLocalHooks('change', changes);\n    }\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces initial\n   * changes that will be used to notify new subscribers.\n   *\n   * @private\n   * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n   */\n  _writeInitialChanges(initialChanges) {\n    _classPrivateFieldSet(this, _currentInitialChanges, initialChanges);\n  }\n}\nmixin(ChangesObserver, localHooks);","map":{"version":3,"names":["_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_classPrivateFieldSet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorSet","call","writable","_classPrivateFieldGet","_classApplyDescriptorGet","action","get","mixin","localHooks","_currentInitialChanges","WeakMap","ChangesObserver","constructor","subscribe","callback","addLocalHook","_write","unsubscribe","runLocalHooks","clearLocalHooks","changes","length","_writeInitialChanges","initialChanges"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/translations/changesObservable/observer.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @class ChangesObserver\n */\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport class ChangesObserver {\n  constructor() {\n    /**\n     * The field holds initial changes that will be used to notify the callbacks added using\n     * subscribe method. Regardless of the moment of listening for changes, the subscriber\n     * will be notified once with all changes made before subscribing.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, {\n      writable: true,\n      value: []\n    });\n  }\n  /**\n   * Subscribes to the observer.\n   *\n   * @param {Function} callback A function that will be called when the new changes will appear.\n   * @returns {ChangesObserver}\n   */\n  subscribe(callback) {\n    this.addLocalHook('change', callback);\n    this._write(_classPrivateFieldGet(this, _currentInitialChanges));\n    return this;\n  }\n\n  /**\n   * Unsubscribes all subscriptions. After the method call, the observer would not produce\n   * any new events.\n   *\n   * @returns {ChangesObserver}\n   */\n  unsubscribe() {\n    this.runLocalHooks('unsubscribe');\n    this.clearLocalHooks();\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces all\n   * changes events that are distributed further by the observer.\n   *\n   * @private\n   * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n   * @returns {ChangesObserver}\n   */\n  _write(changes) {\n    if (changes.length > 0) {\n      this.runLocalHooks('change', changes);\n    }\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces initial\n   * changes that will be used to notify new subscribers.\n   *\n   * @private\n   * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n   */\n  _writeInitialChanges(initialChanges) {\n    _classPrivateFieldSet(this, _currentInitialChanges, initialChanges);\n  }\n}\nmixin(ChangesObserver, localHooks);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}