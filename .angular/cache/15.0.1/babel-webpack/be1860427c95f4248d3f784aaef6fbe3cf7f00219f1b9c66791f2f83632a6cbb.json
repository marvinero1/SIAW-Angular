{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/button\";\nfunction NumlibrosbancosCreateComponent_mat_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-option\", 38);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var cuentas_bancariass_r3 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"value\", cuentas_bancariass_r3.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate3(\" \", cuentas_bancariass_r3.codbanco, \" - \", cuentas_bancariass_r3.descripcion, \" - \", cuentas_bancariass_r3.codigo, \" \");\n  }\n}\nvar NumlibrosbancosCreateComponent = /** @class */function () {\n  function NumlibrosbancosCreateComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.numLibrBanco = [];\n    this.cuentas_bancarias = [];\n    this.userLogueado = [];\n    this.inputValue = null;\n    this.ventana = \"numeracionlibrosbancos-create\";\n    this.detalle = \"numeracionlibrosbancos-detalle\";\n    this.tipo = \"transaccion-numeracionlibrosbancos-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  NumlibrosbancosCreateComponent.prototype.ngOnInit = function () {\n    this.getNroCuentaBancaria();\n  };\n  NumlibrosbancosCreateComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      codcuentab: [this.dataform.codcuentab],\n      desde: [this.datePipe.transform(this.dataform.desde, \"yyyy-MM-dd\")],\n      hasta: [this.datePipe.transform(this.dataform.hasta, \"yyyy-MM-dd\")],\n      origen: [this.dataform.origen],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  NumlibrosbancosCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /fondos/mant/fntipo_librobanco/\";\n    return this.api.create(\"/fondos/mant/fntipo_librobanco/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.numLibrBanco = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  NumlibrosbancosCreateComponent.prototype.getNroCuentaBancaria = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\n    return this.api.getAll('/ctsxcob/mant/cocuentab/catalogo/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.cuentas_bancarias = datav;\n        console.log('data', datav);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  NumlibrosbancosCreateComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  };\n  NumlibrosbancosCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  NumlibrosbancosCreateComponent.Éµfac = function NumlibrosbancosCreateComponent_Factory(t) {\n    return new (t || NumlibrosbancosCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService));\n  };\n  NumlibrosbancosCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: NumlibrosbancosCreateComponent,\n    selectors: [[\"app-numlibrosbancos-create\"]],\n    decls: 78,\n    vars: 8,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"id\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\"], [1, \"col\"], [\"appearance\", \"outline\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"nroactual\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"color\", \"accent\"], [\"matInput\", \"\", \"formControlName\", \"desde\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"color\", \"primary\"], [\"picker21\", \"\"], [\"matInput\", \"\", \"formControlName\", \"hasta\", 3, \"matDatepicker\"], [\"picker2\", \"\"], [1, \"row\"], [\"formControlName\", \"codcuentab\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"origen\"], [\"value\", \"OTRO\"], [\"value\", \"PROVINCIA\"], [\"value\", \"CIUDAD\"], [\"value\", \"ALMACEN\"], [\"value\", \"VENDEDOR\"], [\"value\", \"CLIENTE\"], [\"value\", \"BANCO\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [3, \"value\"]],\n    template: function NumlibrosbancosCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Numeraci\\u00F3n de Libros de Bancos\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function NumlibrosbancosCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(14, \"input\", 10);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"mat-form-field\", 9)(17, \"mat-label\");\n        i0.ÉµÉµtext(18, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"input\", 11);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(20, \"div\", 7)(21, \"div\", 12)(22, \"mat-form-field\", 13)(23, \"mat-label\");\n        i0.ÉµÉµtext(24, \"Nro. Actual\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(25, \"input\", 14);\n        i0.ÉµÉµlistener(\"input\", function NumlibrosbancosCreateComponent_Template_input_input_25_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        })(\"ngModelChange\", function NumlibrosbancosCreateComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(26, \"div\", 7)(27, \"div\", 8)(28, \"mat-form-field\", 15)(29, \"mat-label\");\n        i0.ÉµÉµtext(30, \"Valido Desde\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(31, \"input\", 16)(32, \"mat-datepicker-toggle\", 17)(33, \"mat-datepicker\", 18, 19);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(35, \"div\", 8)(36, \"mat-form-field\", 15)(37, \"mat-label\");\n        i0.ÉµÉµtext(38, \"Valido Hasta\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(39, \"input\", 20)(40, \"mat-datepicker-toggle\", 17)(41, \"mat-datepicker\", 18, 21);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(43, \"div\", 22)(44, \"div\", 12)(45, \"mat-form-field\", 13)(46, \"mat-label\");\n        i0.ÉµÉµtext(47, \"Nro. de Cuenta\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(48, \"mat-select\", 23);\n        i0.ÉµÉµtemplate(49, NumlibrosbancosCreateComponent_mat_option_49_Template, 2, 4, \"mat-option\", 24);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(50, \"div\", 7)(51, \"div\", 8)(52, \"mat-form-field\", 13)(53, \"mat-label\");\n        i0.ÉµÉµtext(54, \"Origen por Defecto\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(55, \"mat-select\", 25)(56, \"mat-option\", 26);\n        i0.ÉµÉµtext(57, \"OTRO\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(58, \"mat-option\", 27);\n        i0.ÉµÉµtext(59, \"PROVINCIA\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(60, \"mat-option\", 28);\n        i0.ÉµÉµtext(61, \"CIUDAD\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(62, \"mat-option\", 29);\n        i0.ÉµÉµtext(63, \"ALMACEN\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(64, \"mat-option\", 30);\n        i0.ÉµÉµtext(65, \"VENDEDOR\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(66, \"mat-option\", 31);\n        i0.ÉµÉµtext(67, \"CLIENTE\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(68, \"mat-option\", 32);\n        i0.ÉµÉµtext(69, \"BANCO\");\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(70, \"div\", 33)(71, \"a\", 34);\n        i0.ÉµÉµlistener(\"click\", function NumlibrosbancosCreateComponent_Template_a_click_71_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(72, \"i\", 35);\n        i0.ÉµÉµtext(73, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(74, \"\\u00A0 \");\n        i0.ÉµÉµelementStart(75, \"button\", 36);\n        i0.ÉµÉµelement(76, \"i\", 37);\n        i0.ÉµÉµtext(77, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ÉµÉµreference(34);\n        var _r1 = i0.ÉµÉµreference(42);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(17);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"matDatepicker\", _r0);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"for\", _r0);\n        i0.ÉµÉµadvance(7);\n        i0.ÉµÉµproperty(\"matDatepicker\", _r1);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"for\", _r1);\n        i0.ÉµÉµadvance(9);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.cuentas_bancarias);\n        i0.ÉµÉµadvance(26);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i10.MatSelect, i11.MatOption, i12.MatInput, i13.MatDatepicker, i13.MatDatepickerInput, i13.MatDatepickerToggle, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i14.MatAnchor, i14.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 10px !important;\\n  padding-bottom: 0px !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/fondos/numlibrosbancos/numlibrosbancos-create/numlibrosbancos-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2ZvbmRvcy9udW1saWJyb3NiYW5jb3MvbnVtbGlicm9zYmFuY29zLWNyZWF0ZS9udW1saWJyb3NiYW5jb3MtY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLDRCQUFBO0VBQ0MsOEJBQUE7QUFDTCIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLWZvcm0tZmllbGQge1xuICB3aWR0aDogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWRpYWxvZy1hY3Rpb25zIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4ubWF0LW1kYy10ZXh0LWZpZWxkLXdyYXBwZXI6bm90KC5tZGMtdGV4dC1maWVsZC0tb3V0bGluZWQpIC5tYXQtbWRjLWZvcm0tZmllbGQtaW5maXgge1xuICBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return NumlibrosbancosCreateComponent;\n}();\nexport { NumlibrosbancosCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","i0","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","Date","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","NumlibrosbancosCreateComponent","getNroCuentaBancaria","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","dataform","compose","required","descripcion","nroactual","pattern","codcuentab","desde","transform","hasta","origen","horareg","fechareg","fecha_actual","usuarioreg","data","value","errorMessage","create","subscribe","next","datav","_this","numLibrBanco","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","getAll","cuentas_bancarias","parsedValue","parseFloat","isNaN","Number","isInteger","inputValue","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\numlibrosbancos\\numlibrosbancos-create\\numlibrosbancos-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\numlibrosbancos\\numlibrosbancos-create\\numlibrosbancos-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-numlibrosbancos-create',\n  templateUrl: './numlibrosbancos-create.component.html',\n  styleUrls: ['./numlibrosbancos-create.component.scss']\n})\nexport class NumlibrosbancosCreateComponent implements OnInit {\n\n  FormularioData:FormGroup;\n  fecha_actual = new Date();\n  hora_actual = new Date();\n  dataform:any='';\n  numLibrBanco:any=[];\n  cuentas_bancarias:any=[];\n  userConn:any;\n  userLogueado:any=[];\n  inputValue: number | null = null;\n\n  public ventana=\"numeracionlibrosbancos-create\"\n  public detalle=\"numeracionlibrosbancos-detalle\";\n  public tipo=\"transaccion-numeracionlibrosbancos-POST\";\n\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\n    private api:ApiService, public dialogRef: MatDialogRef<NumlibrosbancosCreateComponent>, public _snackBar: MatSnackBar,\n    public log_module: LogService, private toastr: ToastrService) {\n    \n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    this.FormularioData = this.createForm();\n    \n  } \n\n  ngOnInit() {\n    this.getNroCuentaBancaria();\n  }\n\n  createForm(): FormGroup{\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      codcuentab: [this.dataform.codcuentab],\n      desde: [this.datePipe.transform(this.dataform.desde, \"yyyy-MM-dd\")],\n      hasta: [this.datePipe.transform(this.dataform.hasta, \"yyyy-MM-dd\")],\n      origen: [this.dataform.origen],\n\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:-- /fondos/mant/fntipo_librobanco/\";\n    \n    return this.api.create(\"/fondos/mant/fntipo_librobanco/\"+this.userConn, data)\n      .subscribe({\n        next: (datav) => {\n          this.numLibrBanco = datav;\n\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\n          this.onNoClick();\n          this.spinner.show();\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\n\n          location.reload();\n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n          this.toastr.error('! NO SE GUARDO !');\n        },\n        complete: () => { }\n      })\n  }\n\n  getNroCuentaBancaria(){\n    let errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\n    return this.api.getAll('/ctsxcob/mant/cocuentab/catalogo/'+this.userConn)\n      .subscribe({\n        next: (datav) => {\n          this.cuentas_bancarias = datav;\n          console.log('data', datav);\n        },\n    \n        error: (err: any) => { \n          console.log(err, errorMessage);\n        },\n        complete: () => { }\n      })\n  }\n  \n  \n  onInputChange(value: string) {\n    // Validar y formatear el valor ingresado\n    const parsedValue = parseFloat(value);\n\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Crear NumeraciÃ³n de Libros de Bancos</h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>CÃ³digo </mat-label>\n              <input matInput type=\"text\" formControlName=\"id\" required>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>DescripciÃ³n </mat-label>\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"30\" required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row mb-2\">\n          <div class=\"col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Nro. Actual</mat-label>\n              <input type=\"number\" (input)=\"onInputChange($event.target.value)\" min=\"0\" step=\"1\" matInput\n                formControlName=\"nroactual\" [(ngModel)]=\"inputValue\" required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row  mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field color=\"accent\">\n              <mat-label>Valido Desde</mat-label>\n              <input matInput formControlName=\"desde\" [matDatepicker]=\"picker21\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"picker21\"></mat-datepicker-toggle>\n              <mat-datepicker #picker21 color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-md\">\n            <mat-form-field color=\"accent\">\n              <mat-label>Valido Hasta</mat-label>\n              <input matInput formControlName=\"hasta\" [matDatepicker]=\"picker2\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n              <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Nro. de Cuenta</mat-label>\n              <mat-select formControlName=\"codcuentab\">\n                <mat-option *ngFor=\"let cuentas_bancariass of cuentas_bancarias\" [value]=\"cuentas_bancariass.codigo\">\n                  {{ cuentas_bancariass.codbanco }} - {{ cuentas_bancariass.descripcion }} -\n                  {{ cuentas_bancariass.codigo }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row  mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Origen por Defecto</mat-label>\n              <mat-select formControlName=\"origen\">\n                <mat-option value=\"OTRO\">OTRO</mat-option>\n                <mat-option value=\"PROVINCIA\">PROVINCIA</mat-option>\n                <mat-option value=\"CIUDAD\">CIUDAD</mat-option>\n                <mat-option value=\"ALMACEN\">ALMACEN</mat-option>\n                <mat-option value=\"VENDEDOR\">VENDEDOR</mat-option>\n                <mat-option value=\"CLIENTE\">CLIENTE</mat-option>\n                <mat-option value=\"BANCO\">BANCO</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>&nbsp;\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}