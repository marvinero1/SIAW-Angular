{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nconst DEFAULT_ERROR_ITEM_EXISTS = item => `'${item}' value is already declared in a unique set.`;\n\n/**\n * @typedef {object} UniqueSet\n * @property {Function} addItem Adds items to the priority set.\n * @property {Function} getItems Gets items from the set in order of addition.\n */\n/**\n * Creates a new unique set.\n *\n * @param {object} config The config for priority set.\n * @param {Function} config.errorItemExists The function to generate custom error message if item is already in the set.\n * @returns {UniqueSet}\n */\nexport function createUniqueSet() {\n  let {\n    errorItemExists\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const uniqueSet = new Set();\n  errorItemExists = isFunction(errorItemExists) ? errorItemExists : DEFAULT_ERROR_ITEM_EXISTS;\n\n  /**\n   * Adds items to the unique set. Throws an error if `item` is already added.\n   *\n   * @param {*} item The adding item.\n   */\n  function addItem(item) {\n    if (uniqueSet.has(item)) {\n      throw new Error(errorItemExists(item));\n    }\n    uniqueSet.add(item);\n  }\n\n  /**\n   * Gets items from the set in order of addition.\n   *\n   * @returns {*}\n   */\n  function getItems() {\n    return [...uniqueSet];\n  }\n\n  /**\n   * Clears the unique set.\n   */\n  function clear() {\n    uniqueSet.clear();\n  }\n  return {\n    addItem,\n    clear,\n    getItems\n  };\n}","map":{"version":3,"names":["isFunction","DEFAULT_ERROR_ITEM_EXISTS","item","createUniqueSet","errorItemExists","arguments","length","undefined","uniqueSet","Set","addItem","has","Error","add","getItems","clear"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/utils/dataStructures/uniqueSet.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nconst DEFAULT_ERROR_ITEM_EXISTS = item => `'${item}' value is already declared in a unique set.`;\n\n/**\n * @typedef {object} UniqueSet\n * @property {Function} addItem Adds items to the priority set.\n * @property {Function} getItems Gets items from the set in order of addition.\n */\n/**\n * Creates a new unique set.\n *\n * @param {object} config The config for priority set.\n * @param {Function} config.errorItemExists The function to generate custom error message if item is already in the set.\n * @returns {UniqueSet}\n */\nexport function createUniqueSet() {\n  let {\n    errorItemExists\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const uniqueSet = new Set();\n  errorItemExists = isFunction(errorItemExists) ? errorItemExists : DEFAULT_ERROR_ITEM_EXISTS;\n\n  /**\n   * Adds items to the unique set. Throws an error if `item` is already added.\n   *\n   * @param {*} item The adding item.\n   */\n  function addItem(item) {\n    if (uniqueSet.has(item)) {\n      throw new Error(errorItemExists(item));\n    }\n    uniqueSet.add(item);\n  }\n\n  /**\n   * Gets items from the set in order of addition.\n   *\n   * @returns {*}\n   */\n  function getItems() {\n    return [...uniqueSet];\n  }\n\n  /**\n   * Clears the unique set.\n   */\n  function clear() {\n    uniqueSet.clear();\n  }\n  return {\n    addItem,\n    clear,\n    getItems\n  };\n}"],"mappings":"AAAA,OAAO,mCAAmC;AAC1C,SAASA,UAAU,QAAQ,4BAA4B;AACvD,MAAMC,yBAAyB,GAAGC,IAAI,IAAK,IAAGA,IAAK,8CAA6C;;AAEhG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAe,GAAG;EAChC,IAAI;IACFC;EACF,CAAC,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1E,MAAMG,SAAS,GAAG,IAAIC,GAAG,EAAE;EAC3BL,eAAe,GAAGJ,UAAU,CAACI,eAAe,CAAC,GAAGA,eAAe,GAAGH,yBAAyB;;EAE3F;AACF;AACA;AACA;AACA;EACE,SAASS,OAAO,CAACR,IAAI,EAAE;IACrB,IAAIM,SAAS,CAACG,GAAG,CAACT,IAAI,CAAC,EAAE;MACvB,MAAM,IAAIU,KAAK,CAACR,eAAe,CAACF,IAAI,CAAC,CAAC;IACxC;IACAM,SAAS,CAACK,GAAG,CAACX,IAAI,CAAC;EACrB;;EAEA;AACF;AACA;AACA;AACA;EACE,SAASY,QAAQ,GAAG;IAClB,OAAO,CAAC,GAAGN,SAAS,CAAC;EACvB;;EAEA;AACF;AACA;EACE,SAASO,KAAK,GAAG;IACfP,SAAS,CAACO,KAAK,EAAE;EACnB;EACA,OAAO;IACLL,OAAO;IACPK,KAAK;IACLD;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}