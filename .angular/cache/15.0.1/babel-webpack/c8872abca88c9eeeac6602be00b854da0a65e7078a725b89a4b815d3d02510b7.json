{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\nexport const KEY = 'row_above';\n\n/**\n * @returns {object}\n */\nexport default function rowAboveItem() {\n  return {\n    key: KEY,\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ROW_ABOVE);\n    },\n    callback() {\n      const latestSelection = this.getSelectedRangeLast().getTopLeftCorner();\n      this.alter('insert_row_above', latestSelection.row, 1, 'ContextMenu.rowAbove');\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader() && range.highlight.row < 0) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        const totalRows = this.countRows();\n\n        // Enable \"Insert row above\" only when there is at least one row.\n        return totalRows === 0;\n      }\n      return this.selection.isSelectedByColumnHeader() || this.countRows() >= this.getSettings().maxRows;\n    },\n    hidden() {\n      return !this.getSettings().allowInsertRow;\n    }\n  };\n}","map":{"version":3,"names":["C","KEY","rowAboveItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_ROW_ABOVE","callback","latestSelection","getSelectedRangeLast","getTopLeftCorner","alter","row","disabled","range","isSingleHeader","highlight","selection","isSelectedByCorner","totalRows","countRows","isSelectedByColumnHeader","getSettings","maxRows","hidden","allowInsertRow"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/contextMenu/predefinedItems/rowAbove.mjs"],"sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\nexport const KEY = 'row_above';\n\n/**\n * @returns {object}\n */\nexport default function rowAboveItem() {\n  return {\n    key: KEY,\n    name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ROW_ABOVE);\n    },\n    callback() {\n      const latestSelection = this.getSelectedRangeLast().getTopLeftCorner();\n      this.alter('insert_row_above', latestSelection.row, 1, 'ContextMenu.rowAbove');\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range) {\n        return true;\n      }\n      if (range.isSingleHeader() && range.highlight.row < 0) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        const totalRows = this.countRows();\n\n        // Enable \"Insert row above\" only when there is at least one row.\n        return totalRows === 0;\n      }\n      return this.selection.isSelectedByColumnHeader() || this.countRows() >= this.getSettings().maxRows;\n    },\n    hidden() {\n      return !this.getSettings().allowInsertRow;\n    }\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,6BAA6B;AAChD,OAAO,MAAMC,GAAG,GAAG,WAAW;;AAE9B;AACA;AACA;AACA,eAAe,SAASC,YAAY,GAAG;EACrC,OAAO;IACLC,GAAG,EAAEF,GAAG;IACRG,IAAI,GAAG;MACL,OAAO,IAAI,CAACC,mBAAmB,CAACL,CAAC,CAACM,2BAA2B,CAAC;IAChE,CAAC;IACDC,QAAQ,GAAG;MACT,MAAMC,eAAe,GAAG,IAAI,CAACC,oBAAoB,EAAE,CAACC,gBAAgB,EAAE;MACtE,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAEH,eAAe,CAACI,GAAG,EAAE,CAAC,EAAE,sBAAsB,CAAC;IAChF,CAAC;IACDC,QAAQ,GAAG;MACT,MAAMC,KAAK,GAAG,IAAI,CAACL,oBAAoB,EAAE;MACzC,IAAI,CAACK,KAAK,EAAE;QACV,OAAO,IAAI;MACb;MACA,IAAIA,KAAK,CAACC,cAAc,EAAE,IAAID,KAAK,CAACE,SAAS,CAACJ,GAAG,GAAG,CAAC,EAAE;QACrD,OAAO,IAAI;MACb;MACA,IAAI,IAAI,CAACK,SAAS,CAACC,kBAAkB,EAAE,EAAE;QACvC,MAAMC,SAAS,GAAG,IAAI,CAACC,SAAS,EAAE;;QAElC;QACA,OAAOD,SAAS,KAAK,CAAC;MACxB;MACA,OAAO,IAAI,CAACF,SAAS,CAACI,wBAAwB,EAAE,IAAI,IAAI,CAACD,SAAS,EAAE,IAAI,IAAI,CAACE,WAAW,EAAE,CAACC,OAAO;IACpG,CAAC;IACDC,MAAM,GAAG;MACP,OAAO,CAAC,IAAI,CAACF,WAAW,EAAE,CAACG,cAAc;IAC3C;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}