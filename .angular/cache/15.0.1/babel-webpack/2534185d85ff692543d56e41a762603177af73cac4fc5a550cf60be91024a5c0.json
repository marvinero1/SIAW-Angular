{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { hasClass, removeAttribute, setAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_GRIDCELL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Cell renderer responsible for managing (inserting, tracking, rendering) TD elements.\n *\n *   <tr> (root node)\n *     ├ <th>   --- RowHeadersRenderer\n *     ├ <td>   \\\n *     ├ <td>    \\\n *     ├ <td>     - CellsRenderer\n *     ├ <td>    /\n *     └ <td>   /.\n *\n * @class {CellsRenderer}\n */\nexport default class CellsRenderer extends BaseRenderer {\n  constructor() {\n    super('TD');\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\n     * Row index which specifies the row position of the processed cell.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\n   *\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for cells (TD).\n   * @returns {SharedOrderView}\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender,\n      columnsToRender,\n      rows,\n      rowHeaders\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const rowHeadersView = rowHeaders.obtainOrderView(TR);\n\n      // @TODO(perf-tip): For cells other than \"visual 0\" generating diff leads/commands can be skipped. New order view\n      // should share state between next orderViews.\n      orderView.prependView(rowHeadersView).setSize(columnsToRender).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < columnsToRender; visibleColumnIndex++) {\n        orderView.render();\n        const TD = orderView.getCurrentNode();\n        const sourceColumnIndex = this.table.renderedColumnToSource(visibleColumnIndex);\n        if (!hasClass(TD, 'hide')) {\n          // Workaround for hidden columns plugin\n          TD.className = '';\n        }\n        TD.removeAttribute('style');\n        TD.removeAttribute('dir');\n\n        // Remove all accessibility-related attributes for the cell to start fresh.\n        removeAttribute(TD, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        this.table.cellRenderer(sourceRowIndex, sourceColumnIndex, TD);\n        if (this.table.isAriaEnabled()) {\n          var _this$table$rowUtils$, _this$table$rowUtils;\n          setAttribute(TD, [...(TD.hasAttribute('role') ? [] : [A11Y_GRIDCELL()]), A11Y_TABINDEX(-1),\n          // `aria-colindex` is incremented by both tbody and thead rows.\n          A11Y_COLINDEX(sourceColumnIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.rowHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n        }\n      }\n      orderView.end();\n    }\n  }\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","hasClass","removeAttribute","setAttribute","SharedOrderView","BaseRenderer","A11Y_COLINDEX","A11Y_GRIDCELL","A11Y_TABINDEX","CellsRenderer","constructor","WeakMap","obtainOrderView","rootNode","orderView","orderViews","has","get","sourceColumnIndex","nodesPool","obtain","sourceRowIndex","nodeType","set","render","rowsToRender","columnsToRender","rows","rowHeaders","table","visibleRowIndex","renderedRowToSource","TR","getRenderedNode","rowHeadersView","prependView","setSize","setOffset","renderedColumnToSource","start","visibleColumnIndex","TD","getCurrentNode","className","RegExp","cellRenderer","isAriaEnabled","_this$table$rowUtils$","_this$table$rowUtils","hasAttribute","rowUtils","dataAccessObject","length","end"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/3rdparty/walkontable/src/renderer/cells.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { hasClass, removeAttribute, setAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_GRIDCELL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Cell renderer responsible for managing (inserting, tracking, rendering) TD elements.\n *\n *   <tr> (root node)\n *     ├ <th>   --- RowHeadersRenderer\n *     ├ <td>   \\\n *     ├ <td>    \\\n *     ├ <td>     - CellsRenderer\n *     ├ <td>    /\n *     └ <td>   /.\n *\n * @class {CellsRenderer}\n */\nexport default class CellsRenderer extends BaseRenderer {\n  constructor() {\n    super('TD');\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\n     * Row index which specifies the row position of the processed cell.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\n   *\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for cells (TD).\n   * @returns {SharedOrderView}\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender,\n      columnsToRender,\n      rows,\n      rowHeaders\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const rowHeadersView = rowHeaders.obtainOrderView(TR);\n\n      // @TODO(perf-tip): For cells other than \"visual 0\" generating diff leads/commands can be skipped. New order view\n      // should share state between next orderViews.\n      orderView.prependView(rowHeadersView).setSize(columnsToRender).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < columnsToRender; visibleColumnIndex++) {\n        orderView.render();\n        const TD = orderView.getCurrentNode();\n        const sourceColumnIndex = this.table.renderedColumnToSource(visibleColumnIndex);\n        if (!hasClass(TD, 'hide')) {\n          // Workaround for hidden columns plugin\n          TD.className = '';\n        }\n        TD.removeAttribute('style');\n        TD.removeAttribute('dir');\n\n        // Remove all accessibility-related attributes for the cell to start fresh.\n        removeAttribute(TD, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        this.table.cellRenderer(sourceRowIndex, sourceColumnIndex, TD);\n        if (this.table.isAriaEnabled()) {\n          var _this$table$rowUtils$, _this$table$rowUtils;\n          setAttribute(TD, [...(TD.hasAttribute('role') ? [] : [A11Y_GRIDCELL()]), A11Y_TABINDEX(-1),\n          // `aria-colindex` is incremented by both tbody and thead rows.\n          A11Y_COLINDEX(sourceColumnIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.rowHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n        }\n      }\n      orderView.end();\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}