{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"../contextMenu/commandExecutor.mjs\";\nimport { getDocumentOffsetByElement } from \"../contextMenu/utils.mjs\";\nimport { hasClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { ItemsFactory } from \"../contextMenu/itemsFactory.mjs\";\nimport { Menu } from \"../contextMenu/menu/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { COLUMN_LEFT, COLUMN_RIGHT, REMOVE_COLUMN, CLEAR_COLUMN, READ_ONLY, ALIGNMENT, SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { A11Y_HASPOPUP, A11Y_HIDDEN, A11Y_LABEL } from \"../../helpers/a11y.mjs\";\nHooks.getSingleton().register('afterDropdownMenuDefaultOptions');\nHooks.getSingleton().register('beforeDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuHide');\nHooks.getSingleton().register('afterDropdownMenuExecute');\nexport const PLUGIN_KEY = 'dropdownMenu';\nexport const PLUGIN_PRIORITY = 230;\nconst BUTTON_CLASS_NAME = 'changeType';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin DropdownMenu\n * @class DropdownMenu\n *\n * @description\n * This plugin creates the Handsontable Dropdown Menu. It allows to create a new row or column at any place in the grid\n * among [other features](@/guides/accessories-and-menus/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or array of any available strings:\n * * `[\"row_above\", \"row_below\", \"col_left\", \"col_right\",\n * \"remove_row\", \"remove_col\", \"---------\", \"undo\", \"redo\"]`.\n *\n * See [the dropdown menu demo](@/guides/columns/column-menu.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable dropdown menu\n *   dropdownMenu: true\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable and configure dropdown menu\n *   dropdownMenu: ['remove_col', '---------', 'make_read_only', 'alignment']\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={data}\n *   comments={true}\n *   // enable and configure dropdown menu\n *   dropdownMenu={['remove_col', '---------', 'make_read_only', 'alignment']}\n * />\n * ```\n * :::\n */\nvar _addCustomShortcuts = /*#__PURE__*/new WeakSet();\nvar _onTableClick = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onMenuBeforeOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onSubMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterClose = /*#__PURE__*/new WeakSet();\nexport class DropdownMenu extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Default menu items order when `dropdownMenu` is enabled by setting the config item to `true`.\n   *\n   * @returns {Array}\n   */\n  static get DEFAULT_ITEMS() {\n    return [COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_COLUMN, SEPARATOR, CLEAR_COLUMN, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n\n  /**\n   * Instance of {@link CommandExecutor}.\n   *\n   * @private\n   * @type {CommandExecutor}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n\n    // One listener for enable/disable functionality\n    /**\n     * On menu after close listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuHide\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterClose);\n    /**\n     * Listener for the `afterSubmenuOpen` hook.\n     *\n     * @private\n     * @param {Menu} subMenuInstance The opened sub menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _onSubMenuAfterOpen);\n    /**\n     * On menu after open listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterOpen);\n    /**\n     * On menu before open listener.\n     *\n     * @private\n     * @fires Hooks#beforeDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuBeforeOpen);\n    /**\n     * On after get column header listener.\n     *\n     * @private\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Table click listener.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onTableClick);\n    /**\n     * Add custom shortcuts to the provided menu instance.\n     *\n     * @param {Menu} menuInstance The menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _addCustomShortcuts);\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DropdownMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   *\n   * @fires Hooks#afterDropdownMenuDefaultOptions\n   * @fires Hooks#beforeDropdownMenuSetItems\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.itemsFactory = new ItemsFactory(this.hot, DropdownMenu.DEFAULT_ITEMS);\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.registerEvents();\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n    this.callOnPluginsReady(() => {\n      this.hot.runHooks('afterDropdownMenuDefaultOptions', predefinedItems);\n      this.itemsFactory.setPredefinedItems(predefinedItems.items);\n      const menuItems = this.itemsFactory.getItems(settings);\n      if (this.menu) {\n        this.menu.destroy();\n      }\n      this.menu = new Menu(this.hot, {\n        className: 'htDropdownMenu',\n        keepInViewport: true,\n        container: settings.uiContainer || this.hot.rootDocument.body\n      });\n      this.hot.runHooks('beforeDropdownMenuSetItems', menuItems);\n      this.menu.setMenuItems(menuItems);\n      this.menu.addLocalHook('beforeOpen', () => _classPrivateMethodGet(this, _onMenuBeforeOpen, _onMenuBeforeOpen2).call(this));\n      this.menu.addLocalHook('afterOpen', () => _classPrivateMethodGet(this, _onMenuAfterOpen, _onMenuAfterOpen2).call(this));\n      this.menu.addLocalHook('afterSubmenuOpen', subMenuInstance => _classPrivateMethodGet(this, _onSubMenuAfterOpen, _onSubMenuAfterOpen2).call(this, subMenuInstance));\n      this.menu.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onMenuAfterClose, _onMenuAfterClose2).call(this));\n      this.menu.addLocalHook('executeCommand', function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n        return _this.executeCommand.call(_this, ...params);\n      });\n\n      // Register all commands. Predefined and added by user or by plugins\n      arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n    });\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dropdownMenu`](@/api/options.md#dropdownmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const gridContext = this.hot.getShortcutManager().getContext('grid');\n    const callback = () => {\n      const {\n        highlight\n      } = this.hot.getSelectedRangeLast();\n      if ((highlight.isHeader() && highlight.row === -1 || highlight.isCell()) && highlight.col >= 0) {\n        this.hot.selectColumns(highlight.col, highlight.col, -1);\n        const {\n          from\n        } = this.hot.getSelectedRangeLast();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        const target = this.hot.getCell(-1, from.col, true);\n        const rect = target.getBoundingClientRect();\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + target.offsetHeight + offset.top\n        }, {\n          left: rect.width\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      }\n    };\n    gridContext.addShortcuts([{\n      keys: [['Shift', 'Alt', 'ArrowDown'], ['Control/Meta', 'Enter']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader() && !this.menu.isOpened();\n      },\n      captureCtrl: true,\n      group: SHORTCUTS_GROUP\n    }, {\n      keys: [['Shift', 'Alt', 'ArrowDown']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        const highlight = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isCell() && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    }]);\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers the DOM listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.eventManager.addEventListener(this.hot.rootElement, 'click', event => _classPrivateMethodGet(this, _onTableClick, _onTableClick2).call(this, event));\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeDropdownMenuShow\n   * @fires Hooks#afterDropdownMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes dropdown menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n  }\n\n  /**\n   * Executes context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'row_above'` - Insert row above\n   *  * `'row_below'` - Insert row below\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_row'` - Remove row\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName Command name to execute.\n   * @param {*} params Additional parameters passed to the command executor.\n   */\n  executeCommand(commandName) {\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Turns on / off listening on dropdown menu.\n   *\n   * @private\n   * @param {boolean} listen Turn on listening when value is set to true, otherwise turn it off.\n   */\n  setListening() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.menu.isOpened()) {\n      if (listen) {\n        this.menu.hotMenu.listen();\n      } else {\n        this.menu.hotMenu.unlisten();\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _addCustomShortcuts2(menuInstance) {\n  menuInstance.getKeyboardShortcutsCtrl().addCustomShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => false\n  }]);\n}\nfunction _onTableClick2(event) {\n  event.stopPropagation();\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n    const rect = event.target.getBoundingClientRect();\n    this.open({\n      left: rect.left + offset.left,\n      top: rect.top + event.target.offsetHeight + 3 + offset.top\n    }, {\n      left: rect.width\n    });\n  }\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  // Corner or a higher-level header\n  const headerRow = TH.parentNode;\n  if (!headerRow) {\n    return;\n  }\n  const headerRowList = headerRow.parentNode.childNodes;\n  const level = Array.prototype.indexOf.call(headerRowList, headerRow);\n  if (col < 0 || level !== headerRowList.length - 1) {\n    return;\n  }\n  const existingButton = TH.querySelector(`.${BUTTON_CLASS_NAME}`);\n\n  // Plugin enabled and buttons already exists, return.\n  if (this.enabled && existingButton) {\n    return;\n  }\n  // Plugin disabled and buttons still exists, so remove them.\n  if (!this.enabled) {\n    if (existingButton) {\n      existingButton.parentNode.removeChild(existingButton);\n    }\n    return;\n  }\n  const button = this.hot.rootDocument.createElement('button');\n  button.className = BUTTON_CLASS_NAME;\n  button.type = 'button';\n  button.tabIndex = -1;\n  if (this.hot.getSettings().ariaTags) {\n    setAttribute(button, [A11Y_HIDDEN(), A11Y_LABEL(' ')]);\n    setAttribute(TH, [A11Y_HASPOPUP('menu')]);\n  }\n\n  // prevent page reload on button click\n  button.onclick = function () {\n    return false;\n  };\n  TH.firstChild.insertBefore(button, TH.firstChild.firstChild);\n}\nfunction _onMenuBeforeOpen2() {\n  this.hot.runHooks('beforeDropdownMenuShow', this);\n}\nfunction _onMenuAfterOpen2() {\n  this.hot.runHooks('afterDropdownMenuShow', this);\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, this.menu);\n}\nfunction _onSubMenuAfterOpen2(subMenuInstance) {\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, subMenuInstance);\n}\nfunction _onMenuAfterClose2() {\n  this.hot.listen();\n  this.hot.runHooks('afterDropdownMenuHide', this);\n}\nDropdownMenu.SEPARATOR = {\n  name: SEPARATOR\n};","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","privateCollection","has","TypeError","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","Number","_classPrivateMethodGet","receiver","fn","BasePlugin","arrayEach","objectEach","CommandExecutor","getDocumentOffsetByElement","hasClass","setAttribute","ItemsFactory","Menu","Hooks","COLUMN_LEFT","COLUMN_RIGHT","REMOVE_COLUMN","CLEAR_COLUMN","READ_ONLY","ALIGNMENT","SEPARATOR","A11Y_HASPOPUP","A11Y_HIDDEN","A11Y_LABEL","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","BUTTON_CLASS_NAME","SHORTCUTS_GROUP","_addCustomShortcuts","WeakSet","_onTableClick","_onAfterGetColHeader","_onMenuBeforeOpen","_onMenuAfterOpen","_onSubMenuAfterOpen","_onMenuAfterClose","DropdownMenu","PLUGIN_DEPS","DEFAULT_ITEMS","constructor","hotInstance","hot","addHook","col","TH","_onAfterGetColHeader2","isEnabled","getSettings","enablePlugin","_this","enabled","itemsFactory","settings","predefinedItems","items","getItems","registerEvents","callback","commandExecutor","setCommonCallback","registerShortcuts","callOnPluginsReady","runHooks","setPredefinedItems","menuItems","menu","destroy","className","keepInViewport","container","uiContainer","rootDocument","body","setMenuItems","addLocalHook","_onMenuBeforeOpen2","_onMenuAfterOpen2","subMenuInstance","_onSubMenuAfterOpen2","_onMenuAfterClose2","_len","arguments","length","params","Array","_key","executeCommand","command","registerCommand","updatePlugin","disablePlugin","close","unregisterShortcuts","gridContext","getShortcutManager","getContext","highlight","getSelectedRangeLast","isHeader","row","isCell","selectColumns","from","offset","target","getCell","rect","getBoundingClientRect","open","left","top","offsetHeight","width","getNavigator","toFirstItem","addShortcuts","keys","runOnlyIf","_this$hot$getSelected","selection","isCellVisible","isOpened","captureCtrl","group","_this$hot$getSelected2","removeShortcutsByGroup","eventManager","addEventListener","rootElement","event","_onTableClick2","position","_this$menu","undefined","above","below","right","setOffset","setPosition","_this$menu2","commandName","_len2","_key2","execute","setListening","listen","hotMenu","unlisten","_addCustomShortcuts2","menuInstance","getKeyboardShortcutsCtrl","addCustomShortcuts","stopPropagation","headerRow","parentNode","headerRowList","childNodes","level","prototype","indexOf","existingButton","querySelector","removeChild","button","createElement","type","tabIndex","ariaTags","onclick","firstChild","insertBefore","name"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/dropdownMenu/dropdownMenu.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"../contextMenu/commandExecutor.mjs\";\nimport { getDocumentOffsetByElement } from \"../contextMenu/utils.mjs\";\nimport { hasClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { ItemsFactory } from \"../contextMenu/itemsFactory.mjs\";\nimport { Menu } from \"../contextMenu/menu/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { COLUMN_LEFT, COLUMN_RIGHT, REMOVE_COLUMN, CLEAR_COLUMN, READ_ONLY, ALIGNMENT, SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { A11Y_HASPOPUP, A11Y_HIDDEN, A11Y_LABEL } from \"../../helpers/a11y.mjs\";\nHooks.getSingleton().register('afterDropdownMenuDefaultOptions');\nHooks.getSingleton().register('beforeDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuHide');\nHooks.getSingleton().register('afterDropdownMenuExecute');\nexport const PLUGIN_KEY = 'dropdownMenu';\nexport const PLUGIN_PRIORITY = 230;\nconst BUTTON_CLASS_NAME = 'changeType';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin DropdownMenu\n * @class DropdownMenu\n *\n * @description\n * This plugin creates the Handsontable Dropdown Menu. It allows to create a new row or column at any place in the grid\n * among [other features](@/guides/accessories-and-menus/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or array of any available strings:\n * * `[\"row_above\", \"row_below\", \"col_left\", \"col_right\",\n * \"remove_row\", \"remove_col\", \"---------\", \"undo\", \"redo\"]`.\n *\n * See [the dropdown menu demo](@/guides/columns/column-menu.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable dropdown menu\n *   dropdownMenu: true\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable and configure dropdown menu\n *   dropdownMenu: ['remove_col', '---------', 'make_read_only', 'alignment']\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={data}\n *   comments={true}\n *   // enable and configure dropdown menu\n *   dropdownMenu={['remove_col', '---------', 'make_read_only', 'alignment']}\n * />\n * ```\n * :::\n */\nvar _addCustomShortcuts = /*#__PURE__*/new WeakSet();\nvar _onTableClick = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _onMenuBeforeOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onSubMenuAfterOpen = /*#__PURE__*/new WeakSet();\nvar _onMenuAfterClose = /*#__PURE__*/new WeakSet();\nexport class DropdownMenu extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Default menu items order when `dropdownMenu` is enabled by setting the config item to `true`.\n   *\n   * @returns {Array}\n   */\n  static get DEFAULT_ITEMS() {\n    return [COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_COLUMN, SEPARATOR, CLEAR_COLUMN, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n\n  /**\n   * Instance of {@link CommandExecutor}.\n   *\n   * @private\n   * @type {CommandExecutor}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n\n    // One listener for enable/disable functionality\n    /**\n     * On menu after close listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuHide\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterClose);\n    /**\n     * Listener for the `afterSubmenuOpen` hook.\n     *\n     * @private\n     * @param {Menu} subMenuInstance The opened sub menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _onSubMenuAfterOpen);\n    /**\n     * On menu after open listener.\n     *\n     * @private\n     * @fires Hooks#afterDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuAfterOpen);\n    /**\n     * On menu before open listener.\n     *\n     * @private\n     * @fires Hooks#beforeDropdownMenuShow\n     */\n    _classPrivateMethodInitSpec(this, _onMenuBeforeOpen);\n    /**\n     * On after get column header listener.\n     *\n     * @private\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * Table click listener.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _onTableClick);\n    /**\n     * Add custom shortcuts to the provided menu instance.\n     *\n     * @param {Menu} menuInstance The menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _addCustomShortcuts);\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DropdownMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   *\n   * @fires Hooks#afterDropdownMenuDefaultOptions\n   * @fires Hooks#beforeDropdownMenuSetItems\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.itemsFactory = new ItemsFactory(this.hot, DropdownMenu.DEFAULT_ITEMS);\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.registerEvents();\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n    this.callOnPluginsReady(() => {\n      this.hot.runHooks('afterDropdownMenuDefaultOptions', predefinedItems);\n      this.itemsFactory.setPredefinedItems(predefinedItems.items);\n      const menuItems = this.itemsFactory.getItems(settings);\n      if (this.menu) {\n        this.menu.destroy();\n      }\n      this.menu = new Menu(this.hot, {\n        className: 'htDropdownMenu',\n        keepInViewport: true,\n        container: settings.uiContainer || this.hot.rootDocument.body\n      });\n      this.hot.runHooks('beforeDropdownMenuSetItems', menuItems);\n      this.menu.setMenuItems(menuItems);\n      this.menu.addLocalHook('beforeOpen', () => _classPrivateMethodGet(this, _onMenuBeforeOpen, _onMenuBeforeOpen2).call(this));\n      this.menu.addLocalHook('afterOpen', () => _classPrivateMethodGet(this, _onMenuAfterOpen, _onMenuAfterOpen2).call(this));\n      this.menu.addLocalHook('afterSubmenuOpen', subMenuInstance => _classPrivateMethodGet(this, _onSubMenuAfterOpen, _onSubMenuAfterOpen2).call(this, subMenuInstance));\n      this.menu.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onMenuAfterClose, _onMenuAfterClose2).call(this));\n      this.menu.addLocalHook('executeCommand', function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n        return _this.executeCommand.call(_this, ...params);\n      });\n\n      // Register all commands. Predefined and added by user or by plugins\n      arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n    });\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dropdownMenu`](@/api/options.md#dropdownmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const gridContext = this.hot.getShortcutManager().getContext('grid');\n    const callback = () => {\n      const {\n        highlight\n      } = this.hot.getSelectedRangeLast();\n      if ((highlight.isHeader() && highlight.row === -1 || highlight.isCell()) && highlight.col >= 0) {\n        this.hot.selectColumns(highlight.col, highlight.col, -1);\n        const {\n          from\n        } = this.hot.getSelectedRangeLast();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        const target = this.hot.getCell(-1, from.col, true);\n        const rect = target.getBoundingClientRect();\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + target.offsetHeight + offset.top\n        }, {\n          left: rect.width\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      }\n    };\n    gridContext.addShortcuts([{\n      keys: [['Shift', 'Alt', 'ArrowDown'], ['Control/Meta', 'Enter']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader() && !this.menu.isOpened();\n      },\n      captureCtrl: true,\n      group: SHORTCUTS_GROUP\n    }, {\n      keys: [['Shift', 'Alt', 'ArrowDown']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        const highlight = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isCell() && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    }]);\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers the DOM listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.eventManager.addEventListener(this.hot.rootElement, 'click', event => _classPrivateMethodGet(this, _onTableClick, _onTableClick2).call(this, event));\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeDropdownMenuShow\n   * @fires Hooks#afterDropdownMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes dropdown menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n  }\n\n  /**\n   * Executes context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'row_above'` - Insert row above\n   *  * `'row_below'` - Insert row below\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_row'` - Remove row\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName Command name to execute.\n   * @param {*} params Additional parameters passed to the command executor.\n   */\n  executeCommand(commandName) {\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Turns on / off listening on dropdown menu.\n   *\n   * @private\n   * @param {boolean} listen Turn on listening when value is set to true, otherwise turn it off.\n   */\n  setListening() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.menu.isOpened()) {\n      if (listen) {\n        this.menu.hotMenu.listen();\n      } else {\n        this.menu.hotMenu.unlisten();\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _addCustomShortcuts2(menuInstance) {\n  menuInstance.getKeyboardShortcutsCtrl().addCustomShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => false\n  }]);\n}\nfunction _onTableClick2(event) {\n  event.stopPropagation();\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n    const rect = event.target.getBoundingClientRect();\n    this.open({\n      left: rect.left + offset.left,\n      top: rect.top + event.target.offsetHeight + 3 + offset.top\n    }, {\n      left: rect.width\n    });\n  }\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  // Corner or a higher-level header\n  const headerRow = TH.parentNode;\n  if (!headerRow) {\n    return;\n  }\n  const headerRowList = headerRow.parentNode.childNodes;\n  const level = Array.prototype.indexOf.call(headerRowList, headerRow);\n  if (col < 0 || level !== headerRowList.length - 1) {\n    return;\n  }\n  const existingButton = TH.querySelector(`.${BUTTON_CLASS_NAME}`);\n\n  // Plugin enabled and buttons already exists, return.\n  if (this.enabled && existingButton) {\n    return;\n  }\n  // Plugin disabled and buttons still exists, so remove them.\n  if (!this.enabled) {\n    if (existingButton) {\n      existingButton.parentNode.removeChild(existingButton);\n    }\n    return;\n  }\n  const button = this.hot.rootDocument.createElement('button');\n  button.className = BUTTON_CLASS_NAME;\n  button.type = 'button';\n  button.tabIndex = -1;\n  if (this.hot.getSettings().ariaTags) {\n    setAttribute(button, [A11Y_HIDDEN(), A11Y_LABEL(' ')]);\n    setAttribute(TH, [A11Y_HASPOPUP('menu')]);\n  }\n\n  // prevent page reload on button click\n  button.onclick = function () {\n    return false;\n  };\n  TH.firstChild.insertBefore(button, TH.firstChild.firstChild);\n}\nfunction _onMenuBeforeOpen2() {\n  this.hot.runHooks('beforeDropdownMenuShow', this);\n}\nfunction _onMenuAfterOpen2() {\n  this.hot.runHooks('afterDropdownMenuShow', this);\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, this.menu);\n}\nfunction _onSubMenuAfterOpen2(subMenuInstance) {\n  _classPrivateMethodGet(this, _addCustomShortcuts, _addCustomShortcuts2).call(this, subMenuInstance);\n}\nfunction _onMenuAfterClose2() {\n  this.hot.listen();\n  this.hot.runHooks('afterDropdownMenuHide', this);\n}\nDropdownMenu.SEPARATOR = {\n  name: SEPARATOR\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}