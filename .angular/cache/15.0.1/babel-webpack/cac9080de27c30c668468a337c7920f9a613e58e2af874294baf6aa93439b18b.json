{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Event from \"../event.mjs\";\nimport Overlays from \"../overlays.mjs\";\nimport Settings from \"../settings.mjs\";\nimport MasterTable from \"../table/master.mjs\";\nimport Viewport from \"../viewport.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\nimport { SelectionManager } from \"../selection/manager.mjs\";\nimport { objectEach } from \"../../../../helpers/object.mjs\";\nimport { addClass, removeClass } from \"../../../../helpers/dom/element.mjs\";\n/**\n * @class Walkontable\n */\nexport default class Walkontable extends CoreAbstract {\n  /**\n   * @param {HTMLTableElement} table Main table.\n   * @param {SettingsPure} settings The Walkontable settings.\n   */\n  constructor(table, settings) {\n    super(table, new Settings(settings));\n    const facadeGetter = this.wtSettings.getSetting('facade', this); // todo rethink. I would like to have no access to facade from the internal scope.\n\n    this.wtTable = new MasterTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = new Viewport(this.getViewportDao(), this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.selectionManager = new SelectionManager(this.wtSettings.getSetting('selections'));\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager);\n    this.wtOverlays = new Overlays(\n    // TODO create DAO and remove reference to the Walkontable instance.\n    this, facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.exportSettingsAsClassNames();\n    this.findOriginalHeaders();\n  }\n\n  /**\n   * Export settings as class names added to the parent element of the table.\n   */\n  exportSettingsAsClassNames() {\n    const toExport = {\n      rowHeaders: 'htRowHeaders',\n      columnHeaders: 'htColumnHeaders'\n    };\n    const allClassNames = [];\n    const newClassNames = [];\n    objectEach(toExport, (className, key) => {\n      if (this.wtSettings.getSetting(key).length) {\n        newClassNames.push(className);\n      }\n      allClassNames.push(className);\n    });\n    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n  }\n\n  /**\n   * @returns {ViewportDao}\n   */\n  getViewportDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get topOverlayTrimmingContainer() {\n        return wot.wtOverlays.topOverlay.trimmingContainer;\n      },\n      get inlineStartOverlayTrimmingContainer() {\n        return wot.wtOverlays.inlineStartOverlay.trimmingContainer;\n      },\n      get topScrollPosition() {\n        return wot.wtOverlays.topOverlay.getScrollPosition();\n      },\n      get topParentOffset() {\n        return wot.wtOverlays.topOverlay.getTableParentOffset();\n      },\n      get inlineStartScrollPosition() {\n        return wot.wtOverlays.inlineStartOverlay.getScrollPosition();\n      },\n      get inlineStartParentOffset() {\n        return wot.wtOverlays.inlineStartOverlay.getTableParentOffset();\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n\n      get bottomOverlay() {\n        return wot.wtOverlays.bottomOverlay; // TODO refactoring: move outside dao, use IOC\n      }\n    };\n  }\n}","map":{"version":3,"names":["Event","Overlays","Settings","MasterTable","Viewport","CoreAbstract","SelectionManager","objectEach","addClass","removeClass","Walkontable","constructor","table","settings","facadeGetter","wtSettings","getSetting","wtTable","getTableDao","domBindings","wtViewport","getViewportDao","eventManager","selectionManager","wtEvent","wtOverlays","exportSettingsAsClassNames","findOriginalHeaders","toExport","rowHeaders","columnHeaders","allClassNames","newClassNames","className","key","length","push","wtRootElement","parentNode","wot","topOverlayTrimmingContainer","topOverlay","trimmingContainer","inlineStartOverlayTrimmingContainer","inlineStartOverlay","topScrollPosition","getScrollPosition","topParentOffset","getTableParentOffset","inlineStartScrollPosition","inlineStartParentOffset","bottomOverlay"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/3rdparty/walkontable/src/core/core.mjs"],"sourcesContent":["import \"core-js/modules/es.array.push.js\";\nimport Event from \"../event.mjs\";\nimport Overlays from \"../overlays.mjs\";\nimport Settings from \"../settings.mjs\";\nimport MasterTable from \"../table/master.mjs\";\nimport Viewport from \"../viewport.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\nimport { SelectionManager } from \"../selection/manager.mjs\";\nimport { objectEach } from \"../../../../helpers/object.mjs\";\nimport { addClass, removeClass } from \"../../../../helpers/dom/element.mjs\";\n/**\n * @class Walkontable\n */\nexport default class Walkontable extends CoreAbstract {\n  /**\n   * @param {HTMLTableElement} table Main table.\n   * @param {SettingsPure} settings The Walkontable settings.\n   */\n  constructor(table, settings) {\n    super(table, new Settings(settings));\n    const facadeGetter = this.wtSettings.getSetting('facade', this); // todo rethink. I would like to have no access to facade from the internal scope.\n\n    this.wtTable = new MasterTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = new Viewport(this.getViewportDao(), this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.selectionManager = new SelectionManager(this.wtSettings.getSetting('selections'));\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager);\n    this.wtOverlays = new Overlays(\n    // TODO create DAO and remove reference to the Walkontable instance.\n    this, facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.exportSettingsAsClassNames();\n    this.findOriginalHeaders();\n  }\n\n  /**\n   * Export settings as class names added to the parent element of the table.\n   */\n  exportSettingsAsClassNames() {\n    const toExport = {\n      rowHeaders: 'htRowHeaders',\n      columnHeaders: 'htColumnHeaders'\n    };\n    const allClassNames = [];\n    const newClassNames = [];\n    objectEach(toExport, (className, key) => {\n      if (this.wtSettings.getSetting(key).length) {\n        newClassNames.push(className);\n      }\n      allClassNames.push(className);\n    });\n    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n  }\n\n  /**\n   * @returns {ViewportDao}\n   */\n  getViewportDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get topOverlayTrimmingContainer() {\n        return wot.wtOverlays.topOverlay.trimmingContainer;\n      },\n      get inlineStartOverlayTrimmingContainer() {\n        return wot.wtOverlays.inlineStartOverlay.trimmingContainer;\n      },\n      get topScrollPosition() {\n        return wot.wtOverlays.topOverlay.getScrollPosition();\n      },\n      get topParentOffset() {\n        return wot.wtOverlays.topOverlay.getTableParentOffset();\n      },\n      get inlineStartScrollPosition() {\n        return wot.wtOverlays.inlineStartOverlay.getScrollPosition();\n      },\n      get inlineStartParentOffset() {\n        return wot.wtOverlays.inlineStartOverlay.getTableParentOffset();\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get bottomOverlay() {\n        return wot.wtOverlays.bottomOverlay; // TODO refactoring: move outside dao, use IOC\n      }\n    };\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}