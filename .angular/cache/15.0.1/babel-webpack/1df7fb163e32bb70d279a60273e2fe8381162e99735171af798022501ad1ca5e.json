{"ast":null,"code":"import { AutocompleteEditor } from \"../autocompleteEditor/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nexport const EDITOR_TYPE = 'dropdown';\n\n/**\n * @private\n * @class DropdownEditor\n */\nexport class DropdownEditor extends AutocompleteEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n\n  /**\n   * @param {number} row The visual row index.\n   * @param {number} col The visual column index.\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\n   * @param {HTMLTableCellElement} td The rendered cell element.\n   * @param {*} value The rendered value.\n   * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    super.prepare(row, col, prop, td, value, cellProperties);\n    this.cellProperties.filter = false;\n    this.cellProperties.strict = true;\n  }\n}\nHooks.getSingleton().add('beforeValidate', function (value, row, col) {\n  const cellMeta = this.getCellMeta(row, this.propToCol(col));\n  if (cellMeta.editor === DropdownEditor) {\n    if (cellMeta.strict === undefined) {\n      cellMeta.filter = false;\n      cellMeta.strict = true;\n    }\n  }\n});","map":{"version":3,"names":["AutocompleteEditor","Hooks","EDITOR_TYPE","DropdownEditor","prepare","row","col","prop","td","value","cellProperties","filter","strict","getSingleton","add","cellMeta","getCellMeta","propToCol","editor","undefined"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/editors/dropdownEditor/dropdownEditor.mjs"],"sourcesContent":["import { AutocompleteEditor } from \"../autocompleteEditor/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nexport const EDITOR_TYPE = 'dropdown';\n\n/**\n * @private\n * @class DropdownEditor\n */\nexport class DropdownEditor extends AutocompleteEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n\n  /**\n   * @param {number} row The visual row index.\n   * @param {number} col The visual column index.\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\n   * @param {HTMLTableCellElement} td The rendered cell element.\n   * @param {*} value The rendered value.\n   * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    super.prepare(row, col, prop, td, value, cellProperties);\n    this.cellProperties.filter = false;\n    this.cellProperties.strict = true;\n  }\n}\nHooks.getSingleton().add('beforeValidate', function (value, row, col) {\n  const cellMeta = this.getCellMeta(row, this.propToCol(col));\n  if (cellMeta.editor === DropdownEditor) {\n    if (cellMeta.strict === undefined) {\n      cellMeta.filter = false;\n      cellMeta.strict = true;\n    }\n  }\n});"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,iCAAiC;AACpE,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAO,MAAMC,WAAW,GAAG,UAAU;;AAErC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASH,kBAAkB,CAAC;EACrD,WAAWE,WAAW,GAAG;IACvB,OAAOA,WAAW;EACpB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,KAAK,EAAEC,cAAc,EAAE;IACjD,KAAK,CAACN,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,KAAK,EAAEC,cAAc,CAAC;IACxD,IAAI,CAACA,cAAc,CAACC,MAAM,GAAG,KAAK;IAClC,IAAI,CAACD,cAAc,CAACE,MAAM,GAAG,IAAI;EACnC;AACF;AACAX,KAAK,CAACY,YAAY,EAAE,CAACC,GAAG,CAAC,gBAAgB,EAAE,UAAUL,KAAK,EAAEJ,GAAG,EAAEC,GAAG,EAAE;EACpE,MAAMS,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACX,GAAG,EAAE,IAAI,CAACY,SAAS,CAACX,GAAG,CAAC,CAAC;EAC3D,IAAIS,QAAQ,CAACG,MAAM,KAAKf,cAAc,EAAE;IACtC,IAAIY,QAAQ,CAACH,MAAM,KAAKO,SAAS,EAAE;MACjCJ,QAAQ,CAACJ,MAAM,GAAG,KAAK;MACvBI,QAAQ,CAACH,MAAM,GAAG,IAAI;IACxB;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}