{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { closestDown, hasClass, isChildOf, getParent } from \"../../../helpers/dom/element.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { isTouchSupported } from \"../../../helpers/feature.mjs\";\nimport { isMobileBrowser, isChromeWebKit, isFirefoxWebKit, isIOS } from \"../../../helpers/browser.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/**\n * @class Event\n */\nvar _wtSettings = /*#__PURE__*/new WeakMap();\nvar _domBindings = /*#__PURE__*/new WeakMap();\nvar _wtTable = /*#__PURE__*/new WeakMap();\nvar _selectionManager = /*#__PURE__*/new WeakMap();\nvar _parent = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _facadeGetter = /*#__PURE__*/new WeakMap();\nvar _selectedCellBeforeTouchEnd = /*#__PURE__*/new WeakMap();\nvar _dblClickTimeout = /*#__PURE__*/new WeakMap();\nvar _dblClickOrigin = /*#__PURE__*/new WeakMap();\nclass Event {\n  /**\n   * @param {FacadeGetter} facadeGetter Gets an instance facade.\n   * @param {DomBindings} domBindings Bindings into dom.\n   * @param {Settings} wtSettings The walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {Table} wtTable The table.\n   * @param {SelectionManager} selectionManager Selections.\n   * @param {Event} [parent=null] The main Event instance.\n   */\n  constructor(facadeGetter, domBindings, wtSettings, eventManager, wtTable, selectionManager) {\n    let parent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    _classPrivateFieldInitSpec(this, _wtSettings, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _domBindings, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _wtTable, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _selectionManager, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _parent, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @type {EventManager}\n     */\n    _classPrivateFieldInitSpec(this, _eventManager, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Should be use only for passing face called external origin methods, like registered event listeners.\n     * It provides backward compatibility by getting instance facade.\n     *\n     * @todo Consider about removing this from Event class, because it make relationship into facade (implicit circular\n     *   dependency).\n     * @todo Con. Maybe passing listener caller as an ioc from faced resolves this issue. To rethink later.\n     *\n     * @type {FacadeGetter}\n     */\n    _classPrivateFieldInitSpec(this, _facadeGetter, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCellBeforeTouchEnd, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickTimeout, {\n      writable: true,\n      value: [null, null]\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickOrigin, {\n      writable: true,\n      value: [null, null]\n    });\n    _classPrivateFieldSet(this, _wtSettings, wtSettings);\n    _classPrivateFieldSet(this, _domBindings, domBindings);\n    _classPrivateFieldSet(this, _wtTable, wtTable);\n    _classPrivateFieldSet(this, _selectionManager, selectionManager);\n    _classPrivateFieldSet(this, _parent, parent);\n    _classPrivateFieldSet(this, _eventManager, eventManager);\n    _classPrivateFieldSet(this, _facadeGetter, facadeGetter);\n    this.registerEvents();\n  }\n\n  /**\n   * Adds listeners for mouse and touch events.\n   *\n   * @private\n   */\n  registerEvents() {\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'contextmenu', event => this.onContextMenu(event));\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).TABLE, 'mouseover', event => this.onMouseOver(event));\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).TABLE, 'mouseout', event => this.onMouseOut(event));\n    const initTouchEvents = () => {\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'touchstart', event => this.onTouchStart(event));\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'touchend', event => this.onTouchEnd(event));\n      if (!this.momentumScrolling) {\n        this.momentumScrolling = {};\n      }\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'scroll', () => {\n        clearTimeout(this.momentumScrolling._timeout);\n        if (!this.momentumScrolling.ongoing) {\n          _classPrivateFieldGet(this, _wtSettings).getSetting('onBeforeTouchScroll');\n        }\n        this.momentumScrolling.ongoing = true;\n        this.momentumScrolling._timeout = setTimeout(() => {\n          if (!this.touchApplied) {\n            this.momentumScrolling.ongoing = false;\n            _classPrivateFieldGet(this, _wtSettings).getSetting('onAfterMomentumScroll');\n          }\n        }, 200);\n      });\n    };\n    const initMouseEvents = () => {\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'mouseup', event => this.onMouseUp(event));\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'mousedown', event => this.onMouseDown(event));\n    };\n    if (isMobileBrowser()) {\n      initTouchEvents();\n    } else {\n      // PC like devices which support both methods (touchscreen and ability to plug-in mouse).\n      if (isTouchSupported()) {\n        initTouchEvents();\n      }\n      initMouseEvents();\n    }\n  }\n\n  /**\n   * Checks if an element is already selected.\n   *\n   * @private\n   * @param {Element} touchTarget An element to check.\n   * @returns {boolean}\n   */\n  selectedCellWasTouched(touchTarget) {\n    const cellUnderFinger = this.parentCell(touchTarget);\n    const coordsOfCellUnderFinger = cellUnderFinger.coords;\n    if (_classPrivateFieldGet(this, _selectedCellBeforeTouchEnd) && coordsOfCellUnderFinger) {\n      const [rowTouched, rowSelected] = [coordsOfCellUnderFinger.row, _classPrivateFieldGet(this, _selectedCellBeforeTouchEnd).from.row];\n      const [colTouched, colSelected] = [coordsOfCellUnderFinger.col, _classPrivateFieldGet(this, _selectedCellBeforeTouchEnd).from.col];\n      return rowTouched === rowSelected && colTouched === colSelected;\n    }\n    return false;\n  }\n\n  /**\n   * Gets closest TD or TH element.\n   *\n   * @private\n   * @param {Element} elem An element from the traversing starts.\n   * @returns {object} Contains coordinates and reference to TD or TH if it exists. Otherwise it's empty object.\n   */\n  parentCell(elem) {\n    const cell = {};\n    const TABLE = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const TD = closestDown(elem, ['TD', 'TH'], TABLE);\n    if (TD) {\n      cell.coords = _classPrivateFieldGet(this, _wtTable).getCoords(TD);\n      cell.TD = TD;\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {\n      cell.coords = _classPrivateFieldGet(this, _selectionManager).getFocusSelection().cellRange.highlight;\n      cell.TD = _classPrivateFieldGet(this, _wtTable).getCell(cell.coords);\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {\n      if (_classPrivateFieldGet(this, _selectionManager).getAreaSelection().cellRange) {\n        cell.coords = _classPrivateFieldGet(this, _selectionManager).getAreaSelection().cellRange.to;\n        cell.TD = _classPrivateFieldGet(this, _wtTable).getCell(cell.coords);\n      }\n    }\n    return cell;\n  }\n\n  /**\n   * OnMouseDown callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseDown(event) {\n    const activeElement = _classPrivateFieldGet(this, _domBindings).rootDocument.activeElement;\n    const getParentNode = partial(getParent, event.target);\n    const realTarget = event.target;\n\n    // ignore non-TD focusable elements from mouse down processing\n    // (https://github.com/handsontable/handsontable/issues/3555)\n    if (!['TD', 'TH'].includes(activeElement.nodeName) && (realTarget === activeElement || getParentNode(0) === activeElement || getParentNode(1) === activeElement)) {\n      return;\n    }\n    const cell = this.parentCell(realTarget);\n    if (hasClass(realTarget, 'corner')) {\n      _classPrivateFieldGet(this, _wtSettings).getSetting('onCellCornerMouseDown', event, realTarget);\n    } else if (cell.TD && _classPrivateFieldGet(this, _wtSettings).has('onCellMouseDown')) {\n      this.callListener('onCellMouseDown', event, cell.coords, cell.TD);\n    }\n\n    // doubleclick reacts only for left mouse button or from touch events\n    if ((event.button === 0 || this.touchApplied) && cell.TD) {\n      _classPrivateFieldGet(this, _dblClickOrigin)[0] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[0]);\n      _classPrivateFieldGet(this, _dblClickTimeout)[0] = setTimeout(() => {\n        _classPrivateFieldGet(this, _dblClickOrigin)[0] = null;\n      }, 1000);\n    }\n  }\n\n  /**\n   * OnContextMenu callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onContextMenu(event) {\n    if (_classPrivateFieldGet(this, _wtSettings).has('onCellContextMenu')) {\n      const cell = this.parentCell(event.target);\n      if (cell.TD) {\n        this.callListener('onCellContextMenu', event, cell.coords, cell.TD);\n      }\n    }\n  }\n\n  /**\n   * OnMouseOver callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOver(event) {\n    if (!_classPrivateFieldGet(this, _wtSettings).has('onCellMouseOver')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const td = closestDown(event.target, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(this, _parent) || this;\n    if (td && td !== parent.lastMouseOver && isChildOf(td, table)) {\n      parent.lastMouseOver = td;\n      this.callListener('onCellMouseOver', event, _classPrivateFieldGet(this, _wtTable).getCoords(td), td);\n    }\n  }\n\n  /**\n   * OnMouseOut callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOut(event) {\n    if (!_classPrivateFieldGet(this, _wtSettings).has('onCellMouseOut')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const lastTD = closestDown(event.target, ['TD', 'TH'], table);\n    const nextTD = closestDown(event.relatedTarget, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(this, _parent) || this;\n    if (lastTD && lastTD !== nextTD && isChildOf(lastTD, table)) {\n      this.callListener('onCellMouseOut', event, _classPrivateFieldGet(this, _wtTable).getCoords(lastTD), lastTD);\n      if (nextTD === null) {\n        parent.lastMouseOver = null;\n      }\n    }\n  }\n\n  /**\n   * OnMouseUp callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseUp(event) {\n    const cell = this.parentCell(event.target);\n    if (cell.TD && _classPrivateFieldGet(this, _wtSettings).has('onCellMouseUp')) {\n      this.callListener('onCellMouseUp', event, cell.coords, cell.TD);\n    }\n\n    // if not left mouse button, and the origin event is not comes from touch\n    if (event.button !== 0 && !this.touchApplied) {\n      return;\n    }\n    if (cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[0] && cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[1]) {\n      if (hasClass(event.target, 'corner')) {\n        this.callListener('onCellCornerDblClick', event, cell.coords, cell.TD);\n      } else {\n        this.callListener('onCellDblClick', event, cell.coords, cell.TD);\n      }\n      _classPrivateFieldGet(this, _dblClickOrigin)[0] = null;\n      _classPrivateFieldGet(this, _dblClickOrigin)[1] = null;\n    } else if (cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[0]) {\n      _classPrivateFieldGet(this, _dblClickOrigin)[1] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[1]);\n      _classPrivateFieldGet(this, _dblClickTimeout)[1] = setTimeout(() => {\n        _classPrivateFieldGet(this, _dblClickOrigin)[1] = null;\n      }, 500);\n    }\n  }\n\n  /**\n   * OnTouchStart callback. Simulates mousedown event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchStart(event) {\n    _classPrivateFieldSet(this, _selectedCellBeforeTouchEnd, _classPrivateFieldGet(this, _selectionManager).getFocusSelection().cellRange);\n    this.touchApplied = true;\n    this.onMouseDown(event);\n  }\n\n  /**\n   * OnTouchEnd callback. Simulates mouseup event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchEnd(event) {\n    var _this$parentCell;\n    const target = event.target;\n    const parentCellCoords = (_this$parentCell = this.parentCell(target)) === null || _this$parentCell === void 0 ? void 0 : _this$parentCell.coords;\n    const isCellsRange = isDefined(parentCellCoords) && parentCellCoords.row >= 0 && parentCellCoords.col >= 0;\n    const isEventCancelable = event.cancelable && isCellsRange && _classPrivateFieldGet(this, _wtSettings).getSetting('isDataViewInstance');\n\n    // To prevent accidental redirects or other actions that the interactive elements (e.q \"A\" link) do\n    // while the cell is highlighted, all touch events that are triggered on different cells are\n    // \"preventDefault\"'ed. The user can interact with the element (e.q. click on the link that opens\n    // a new page) only when the same cell was previously selected (see related PR #7980).\n    if (isEventCancelable) {\n      const interactiveElements = ['A', 'BUTTON', 'INPUT'];\n\n      // For browsers that use the WebKit as an engine (excluding Safari), there is a bug. The prevent\n      // default has to be called all the time. Otherwise, the second tap won't be triggered (probably\n      // caused by the native ~300ms delay - https://webkit.org/blog/5610/more-responsive-tapping-on-ios/).\n      // To make the interactive elements work, the event target element has to be check. If the element\n      // matches the allow-list, the event is not prevented.\n      if (isIOS() && (isChromeWebKit() || isFirefoxWebKit()) && this.selectedCellWasTouched(target) && !interactiveElements.includes(target.tagName)) {\n        event.preventDefault();\n      } else if (!this.selectedCellWasTouched(target)) {\n        // For other browsers, prevent default is fired only for the first tap and only when the previous\n        // highlighted cell was different.\n        event.preventDefault();\n      }\n    }\n    this.onMouseUp(event);\n    this.touchApplied = false;\n  }\n\n  /**\n   * Call listener with backward compatibility.\n   *\n   * @private\n   * @param {string} name Name of listener.\n   * @param {MouseEvent} event The event object.\n   * @param {CellCoords} coords Coordinates.\n   * @param {HTMLElement} target Event target.\n   */\n  callListener(name, event, coords, target) {\n    const listener = _classPrivateFieldGet(this, _wtSettings).getSettingPure(name);\n    if (listener) {\n      listener(event, coords, target, _classPrivateFieldGet(this, _facadeGetter).call(this));\n    }\n  }\n\n  /**\n   * Clears double-click timeouts and destroys the internal eventManager instance.\n   */\n  destroy() {\n    clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[0]);\n    clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[1]);\n    _classPrivateFieldGet(this, _eventManager).destroy();\n  }\n}\nexport default Event;","map":{"version":3,"names":["_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_classPrivateFieldGet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","call","_classPrivateFieldSet","_classApplyDescriptorSet","action","writable","closestDown","hasClass","isChildOf","getParent","partial","isTouchSupported","isMobileBrowser","isChromeWebKit","isFirefoxWebKit","isIOS","isDefined","_wtSettings","WeakMap","_domBindings","_wtTable","_selectionManager","_parent","_eventManager","_facadeGetter","_selectedCellBeforeTouchEnd","_dblClickTimeout","_dblClickOrigin","Event","constructor","facadeGetter","domBindings","wtSettings","eventManager","wtTable","selectionManager","parent","arguments","length","undefined","registerEvents","addEventListener","holder","event","onContextMenu","TABLE","onMouseOver","onMouseOut","initTouchEvents","onTouchStart","onTouchEnd","momentumScrolling","clearTimeout","_timeout","ongoing","getSetting","setTimeout","touchApplied","initMouseEvents","onMouseUp","onMouseDown","selectedCellWasTouched","touchTarget","cellUnderFinger","parentCell","coordsOfCellUnderFinger","coords","rowTouched","rowSelected","row","from","colTouched","colSelected","col","elem","cell","TD","getCoords","getFocusSelection","cellRange","highlight","getCell","getAreaSelection","to","activeElement","rootDocument","getParentNode","target","realTarget","includes","nodeName","callListener","button","table","td","lastMouseOver","lastTD","nextTD","relatedTarget","_this$parentCell","parentCellCoords","isCellsRange","isEventCancelable","cancelable","interactiveElements","tagName","preventDefault","name","listener","getSettingPure","destroy"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/3rdparty/walkontable/src/event.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { closestDown, hasClass, isChildOf, getParent } from \"../../../helpers/dom/element.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { isTouchSupported } from \"../../../helpers/feature.mjs\";\nimport { isMobileBrowser, isChromeWebKit, isFirefoxWebKit, isIOS } from \"../../../helpers/browser.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/**\n * @class Event\n */\nvar _wtSettings = /*#__PURE__*/new WeakMap();\nvar _domBindings = /*#__PURE__*/new WeakMap();\nvar _wtTable = /*#__PURE__*/new WeakMap();\nvar _selectionManager = /*#__PURE__*/new WeakMap();\nvar _parent = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _facadeGetter = /*#__PURE__*/new WeakMap();\nvar _selectedCellBeforeTouchEnd = /*#__PURE__*/new WeakMap();\nvar _dblClickTimeout = /*#__PURE__*/new WeakMap();\nvar _dblClickOrigin = /*#__PURE__*/new WeakMap();\nclass Event {\n  /**\n   * @param {FacadeGetter} facadeGetter Gets an instance facade.\n   * @param {DomBindings} domBindings Bindings into dom.\n   * @param {Settings} wtSettings The walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {Table} wtTable The table.\n   * @param {SelectionManager} selectionManager Selections.\n   * @param {Event} [parent=null] The main Event instance.\n   */\n  constructor(facadeGetter, domBindings, wtSettings, eventManager, wtTable, selectionManager) {\n    let parent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    _classPrivateFieldInitSpec(this, _wtSettings, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _domBindings, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _wtTable, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _selectionManager, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _parent, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @type {EventManager}\n     */\n    _classPrivateFieldInitSpec(this, _eventManager, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Should be use only for passing face called external origin methods, like registered event listeners.\n     * It provides backward compatibility by getting instance facade.\n     *\n     * @todo Consider about removing this from Event class, because it make relationship into facade (implicit circular\n     *   dependency).\n     * @todo Con. Maybe passing listener caller as an ioc from faced resolves this issue. To rethink later.\n     *\n     * @type {FacadeGetter}\n     */\n    _classPrivateFieldInitSpec(this, _facadeGetter, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCellBeforeTouchEnd, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickTimeout, {\n      writable: true,\n      value: [null, null]\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickOrigin, {\n      writable: true,\n      value: [null, null]\n    });\n    _classPrivateFieldSet(this, _wtSettings, wtSettings);\n    _classPrivateFieldSet(this, _domBindings, domBindings);\n    _classPrivateFieldSet(this, _wtTable, wtTable);\n    _classPrivateFieldSet(this, _selectionManager, selectionManager);\n    _classPrivateFieldSet(this, _parent, parent);\n    _classPrivateFieldSet(this, _eventManager, eventManager);\n    _classPrivateFieldSet(this, _facadeGetter, facadeGetter);\n    this.registerEvents();\n  }\n\n  /**\n   * Adds listeners for mouse and touch events.\n   *\n   * @private\n   */\n  registerEvents() {\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'contextmenu', event => this.onContextMenu(event));\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).TABLE, 'mouseover', event => this.onMouseOver(event));\n    _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).TABLE, 'mouseout', event => this.onMouseOut(event));\n    const initTouchEvents = () => {\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'touchstart', event => this.onTouchStart(event));\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'touchend', event => this.onTouchEnd(event));\n      if (!this.momentumScrolling) {\n        this.momentumScrolling = {};\n      }\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'scroll', () => {\n        clearTimeout(this.momentumScrolling._timeout);\n        if (!this.momentumScrolling.ongoing) {\n          _classPrivateFieldGet(this, _wtSettings).getSetting('onBeforeTouchScroll');\n        }\n        this.momentumScrolling.ongoing = true;\n        this.momentumScrolling._timeout = setTimeout(() => {\n          if (!this.touchApplied) {\n            this.momentumScrolling.ongoing = false;\n            _classPrivateFieldGet(this, _wtSettings).getSetting('onAfterMomentumScroll');\n          }\n        }, 200);\n      });\n    };\n    const initMouseEvents = () => {\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'mouseup', event => this.onMouseUp(event));\n      _classPrivateFieldGet(this, _eventManager).addEventListener(_classPrivateFieldGet(this, _wtTable).holder, 'mousedown', event => this.onMouseDown(event));\n    };\n    if (isMobileBrowser()) {\n      initTouchEvents();\n    } else {\n      // PC like devices which support both methods (touchscreen and ability to plug-in mouse).\n      if (isTouchSupported()) {\n        initTouchEvents();\n      }\n      initMouseEvents();\n    }\n  }\n\n  /**\n   * Checks if an element is already selected.\n   *\n   * @private\n   * @param {Element} touchTarget An element to check.\n   * @returns {boolean}\n   */\n  selectedCellWasTouched(touchTarget) {\n    const cellUnderFinger = this.parentCell(touchTarget);\n    const coordsOfCellUnderFinger = cellUnderFinger.coords;\n    if (_classPrivateFieldGet(this, _selectedCellBeforeTouchEnd) && coordsOfCellUnderFinger) {\n      const [rowTouched, rowSelected] = [coordsOfCellUnderFinger.row, _classPrivateFieldGet(this, _selectedCellBeforeTouchEnd).from.row];\n      const [colTouched, colSelected] = [coordsOfCellUnderFinger.col, _classPrivateFieldGet(this, _selectedCellBeforeTouchEnd).from.col];\n      return rowTouched === rowSelected && colTouched === colSelected;\n    }\n    return false;\n  }\n\n  /**\n   * Gets closest TD or TH element.\n   *\n   * @private\n   * @param {Element} elem An element from the traversing starts.\n   * @returns {object} Contains coordinates and reference to TD or TH if it exists. Otherwise it's empty object.\n   */\n  parentCell(elem) {\n    const cell = {};\n    const TABLE = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const TD = closestDown(elem, ['TD', 'TH'], TABLE);\n    if (TD) {\n      cell.coords = _classPrivateFieldGet(this, _wtTable).getCoords(TD);\n      cell.TD = TD;\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {\n      cell.coords = _classPrivateFieldGet(this, _selectionManager).getFocusSelection().cellRange.highlight;\n      cell.TD = _classPrivateFieldGet(this, _wtTable).getCell(cell.coords);\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {\n      if (_classPrivateFieldGet(this, _selectionManager).getAreaSelection().cellRange) {\n        cell.coords = _classPrivateFieldGet(this, _selectionManager).getAreaSelection().cellRange.to;\n        cell.TD = _classPrivateFieldGet(this, _wtTable).getCell(cell.coords);\n      }\n    }\n    return cell;\n  }\n\n  /**\n   * OnMouseDown callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseDown(event) {\n    const activeElement = _classPrivateFieldGet(this, _domBindings).rootDocument.activeElement;\n    const getParentNode = partial(getParent, event.target);\n    const realTarget = event.target;\n\n    // ignore non-TD focusable elements from mouse down processing\n    // (https://github.com/handsontable/handsontable/issues/3555)\n    if (!['TD', 'TH'].includes(activeElement.nodeName) && (realTarget === activeElement || getParentNode(0) === activeElement || getParentNode(1) === activeElement)) {\n      return;\n    }\n    const cell = this.parentCell(realTarget);\n    if (hasClass(realTarget, 'corner')) {\n      _classPrivateFieldGet(this, _wtSettings).getSetting('onCellCornerMouseDown', event, realTarget);\n    } else if (cell.TD && _classPrivateFieldGet(this, _wtSettings).has('onCellMouseDown')) {\n      this.callListener('onCellMouseDown', event, cell.coords, cell.TD);\n    }\n\n    // doubleclick reacts only for left mouse button or from touch events\n    if ((event.button === 0 || this.touchApplied) && cell.TD) {\n      _classPrivateFieldGet(this, _dblClickOrigin)[0] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[0]);\n      _classPrivateFieldGet(this, _dblClickTimeout)[0] = setTimeout(() => {\n        _classPrivateFieldGet(this, _dblClickOrigin)[0] = null;\n      }, 1000);\n    }\n  }\n\n  /**\n   * OnContextMenu callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onContextMenu(event) {\n    if (_classPrivateFieldGet(this, _wtSettings).has('onCellContextMenu')) {\n      const cell = this.parentCell(event.target);\n      if (cell.TD) {\n        this.callListener('onCellContextMenu', event, cell.coords, cell.TD);\n      }\n    }\n  }\n\n  /**\n   * OnMouseOver callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOver(event) {\n    if (!_classPrivateFieldGet(this, _wtSettings).has('onCellMouseOver')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const td = closestDown(event.target, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(this, _parent) || this;\n    if (td && td !== parent.lastMouseOver && isChildOf(td, table)) {\n      parent.lastMouseOver = td;\n      this.callListener('onCellMouseOver', event, _classPrivateFieldGet(this, _wtTable).getCoords(td), td);\n    }\n  }\n\n  /**\n   * OnMouseOut callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOut(event) {\n    if (!_classPrivateFieldGet(this, _wtSettings).has('onCellMouseOut')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(this, _wtTable).TABLE;\n    const lastTD = closestDown(event.target, ['TD', 'TH'], table);\n    const nextTD = closestDown(event.relatedTarget, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(this, _parent) || this;\n    if (lastTD && lastTD !== nextTD && isChildOf(lastTD, table)) {\n      this.callListener('onCellMouseOut', event, _classPrivateFieldGet(this, _wtTable).getCoords(lastTD), lastTD);\n      if (nextTD === null) {\n        parent.lastMouseOver = null;\n      }\n    }\n  }\n\n  /**\n   * OnMouseUp callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseUp(event) {\n    const cell = this.parentCell(event.target);\n    if (cell.TD && _classPrivateFieldGet(this, _wtSettings).has('onCellMouseUp')) {\n      this.callListener('onCellMouseUp', event, cell.coords, cell.TD);\n    }\n\n    // if not left mouse button, and the origin event is not comes from touch\n    if (event.button !== 0 && !this.touchApplied) {\n      return;\n    }\n    if (cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[0] && cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[1]) {\n      if (hasClass(event.target, 'corner')) {\n        this.callListener('onCellCornerDblClick', event, cell.coords, cell.TD);\n      } else {\n        this.callListener('onCellDblClick', event, cell.coords, cell.TD);\n      }\n      _classPrivateFieldGet(this, _dblClickOrigin)[0] = null;\n      _classPrivateFieldGet(this, _dblClickOrigin)[1] = null;\n    } else if (cell.TD === _classPrivateFieldGet(this, _dblClickOrigin)[0]) {\n      _classPrivateFieldGet(this, _dblClickOrigin)[1] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[1]);\n      _classPrivateFieldGet(this, _dblClickTimeout)[1] = setTimeout(() => {\n        _classPrivateFieldGet(this, _dblClickOrigin)[1] = null;\n      }, 500);\n    }\n  }\n\n  /**\n   * OnTouchStart callback. Simulates mousedown event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchStart(event) {\n    _classPrivateFieldSet(this, _selectedCellBeforeTouchEnd, _classPrivateFieldGet(this, _selectionManager).getFocusSelection().cellRange);\n    this.touchApplied = true;\n    this.onMouseDown(event);\n  }\n\n  /**\n   * OnTouchEnd callback. Simulates mouseup event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchEnd(event) {\n    var _this$parentCell;\n    const target = event.target;\n    const parentCellCoords = (_this$parentCell = this.parentCell(target)) === null || _this$parentCell === void 0 ? void 0 : _this$parentCell.coords;\n    const isCellsRange = isDefined(parentCellCoords) && parentCellCoords.row >= 0 && parentCellCoords.col >= 0;\n    const isEventCancelable = event.cancelable && isCellsRange && _classPrivateFieldGet(this, _wtSettings).getSetting('isDataViewInstance');\n\n    // To prevent accidental redirects or other actions that the interactive elements (e.q \"A\" link) do\n    // while the cell is highlighted, all touch events that are triggered on different cells are\n    // \"preventDefault\"'ed. The user can interact with the element (e.q. click on the link that opens\n    // a new page) only when the same cell was previously selected (see related PR #7980).\n    if (isEventCancelable) {\n      const interactiveElements = ['A', 'BUTTON', 'INPUT'];\n\n      // For browsers that use the WebKit as an engine (excluding Safari), there is a bug. The prevent\n      // default has to be called all the time. Otherwise, the second tap won't be triggered (probably\n      // caused by the native ~300ms delay - https://webkit.org/blog/5610/more-responsive-tapping-on-ios/).\n      // To make the interactive elements work, the event target element has to be check. If the element\n      // matches the allow-list, the event is not prevented.\n      if (isIOS() && (isChromeWebKit() || isFirefoxWebKit()) && this.selectedCellWasTouched(target) && !interactiveElements.includes(target.tagName)) {\n        event.preventDefault();\n      } else if (!this.selectedCellWasTouched(target)) {\n        // For other browsers, prevent default is fired only for the first tap and only when the previous\n        // highlighted cell was different.\n        event.preventDefault();\n      }\n    }\n    this.onMouseUp(event);\n    this.touchApplied = false;\n  }\n\n  /**\n   * Call listener with backward compatibility.\n   *\n   * @private\n   * @param {string} name Name of listener.\n   * @param {MouseEvent} event The event object.\n   * @param {CellCoords} coords Coordinates.\n   * @param {HTMLElement} target Event target.\n   */\n  callListener(name, event, coords, target) {\n    const listener = _classPrivateFieldGet(this, _wtSettings).getSettingPure(name);\n    if (listener) {\n      listener(event, coords, target, _classPrivateFieldGet(this, _facadeGetter).call(this));\n    }\n  }\n\n  /**\n   * Clears double-click timeouts and destroys the internal eventManager instance.\n   */\n  destroy() {\n    clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[0]);\n    clearTimeout(_classPrivateFieldGet(this, _dblClickTimeout)[1]);\n    _classPrivateFieldGet(this, _eventManager).destroy();\n  }\n}\nexport default Event;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}