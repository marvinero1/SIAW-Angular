{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { offsetRelativeTo } from \"../../helpers/dom/event.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport const PLUGIN_KEY = 'manualColumnMove';\nexport const PLUGIN_PRIORITY = 120;\nconst CSS_PLUGIN = 'ht__manualColumnMove';\nconst CSS_SHOW_UI = 'show-ui';\nconst CSS_ON_MOVING = 'on-moving--columns';\nconst CSS_AFTER_SELECTION = 'after-selection--columns';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\nvar _backlight = /*#__PURE__*/new WeakMap();\nvar _guideline = /*#__PURE__*/new WeakMap();\nvar _columnsToMove = /*#__PURE__*/new WeakMap();\nvar _countCols = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _target = /*#__PURE__*/new WeakMap();\nvar _cachedDropIndex = /*#__PURE__*/new WeakMap();\nvar _hoveredColumn = /*#__PURE__*/new WeakMap();\nvar _rootElementOffset = /*#__PURE__*/new WeakMap();\nvar _hasRowHeaders = /*#__PURE__*/new WeakMap();\nvar _fixedColumnsStart = /*#__PURE__*/new WeakMap();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterScrollVertically = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class ManualColumnMove extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterScrollVertically);\n    /**\n     * `onMouseUp` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseOver);\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Backlight UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _backlight, {\n      writable: true,\n      value: new BacklightUI(this.hot)\n    });\n    /**\n     * Guideline UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _guideline, {\n      writable: true,\n      value: new GuidelineUI(this.hot)\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _columnsToMove, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _countCols, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _target, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _cachedDropIndex, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _hoveredColumn, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _rootElementOffset, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _hasRowHeaders, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _fixedColumnsStart, {\n      writable: true,\n      value: void 0\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseOver', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseOver, _onBeforeOnCellMouseOver2).call(_this, ...args);\n    });\n    this.addHook('afterScrollVertically', () => _classPrivateMethodGet(this, _onAfterScrollVertically, _onAfterScrollVertically2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.buildPluginUI();\n    this.registerEvents();\n\n    // TODO: move adding plugin classname to BasePlugin.\n    addClass(this.hot.rootElement, CSS_PLUGIN);\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnMove`](@/api/options.md#manualcolumnmove)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    this.moveBySettingsOrLoad();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    removeClass(this.hot.rootElement, CSS_PLUGIN);\n    this.unregisterEvents();\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.disablePlugin();\n  }\n\n  /**\n   * Moves a single column.\n   *\n   * @param {number} column Visual column index to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumn(column, finalIndex) {\n    return this.moveColumns([column], finalIndex);\n  }\n\n  /**\n   * Moves a multiple columns.\n   *\n   * @param {Array} columns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumns(columns, finalIndex) {\n    const dropIndex = _classPrivateFieldGet(this, _cachedDropIndex);\n    const movePossible = this.isMovePossible(columns, finalIndex);\n    const beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n    _classPrivateFieldSet(this, _cachedDropIndex, undefined);\n    if (beforeMoveHook === false) {\n      return;\n    }\n    if (movePossible) {\n      this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n    }\n    const movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n    this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n    return movePerformed;\n  }\n\n  /**\n   * Drag a single column to drop index position.\n   *\n   * @param {number} column Visual column index to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumn(column, dropIndex) {\n    return this.dragColumns([column], dropIndex);\n  }\n\n  /**\n   * Drag multiple columns to drop index position.\n   *\n   * @param {Array} columns Array of visual column indexes to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumns(columns, dropIndex) {\n    const finalIndex = this.countFinalIndex(columns, dropIndex);\n    _classPrivateFieldSet(this, _cachedDropIndex, dropIndex);\n    return this.moveColumns(columns, finalIndex);\n  }\n\n  /**\n   * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n   * possible, i.e. You can’t move more than one element to the last position.\n   *\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isMovePossible(movedColumns, finalIndex) {\n    const length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength();\n\n    // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n    const tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n    const tooLowDestinationIndex = finalIndex < 0;\n    const tooLowMovedColumnIndex = movedColumns.some(movedColumn => movedColumn < 0);\n    const tooHighMovedColumnIndex = movedColumns.some(movedColumn => movedColumn >= length);\n    if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicates if order of columns was changed.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isColumnOrderChanged(movedColumns, finalIndex) {\n    return movedColumns.some((column, nrOfMovedElement) => column - nrOfMovedElement !== finalIndex);\n  }\n\n  /**\n   * Count the final column index from the drop index.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n   * @returns {number} Visual column index, being a start index for the moved columns.\n   */\n  countFinalIndex(movedColumns, dropIndex) {\n    const numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, (numberOfColumns, currentColumnIndex) => {\n      if (currentColumnIndex < dropIndex) {\n        numberOfColumns += 1;\n      }\n      return numberOfColumns;\n    }, 0);\n    return dropIndex - numberOfColumnsLowerThanDropIndex;\n  }\n\n  /**\n   * Gets the sum of the widths of columns in the provided range.\n   *\n   * @private\n   * @param {number} fromColumn Visual column index.\n   * @param {number} toColumn Visual column index.\n   * @returns {number}\n   */\n  getColumnsWidth(fromColumn, toColumn) {\n    const columnMapper = this.hot.columnIndexMapper;\n    let columnsWidth = 0;\n    for (let visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n      // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n      // when column is stretched.\n      const renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n      if (visualColumnIndex < 0) {\n        columnsWidth += this.hot.view._wt.wtViewport.getRowHeaderWidth() || 0;\n      } else if (renderableIndex !== null) {\n        columnsWidth += this.hot.view._wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n      }\n    }\n    return columnsWidth;\n  }\n\n  /**\n   * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n   *\n   * @private\n   */\n  moveBySettingsOrLoad() {\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(pluginSettings)) {\n      this.moveColumns(pluginSettings, 0);\n    } else if (pluginSettings !== undefined) {\n      const persistentState = this.persistentStateLoad();\n      if (persistentState.length) {\n        this.moveColumns(persistentState, 0);\n      }\n    }\n  }\n\n  /**\n   * Checks if the provided column is in the fixedColumnsTop section.\n   *\n   * @private\n   * @param {number} column Visual column index to check.\n   * @returns {boolean}\n   */\n  isFixedColumnsStart(column) {\n    return column < this.hot.getSettings().fixedColumnsStart;\n  }\n\n  /**\n   * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateSave\n   */\n  persistentStateSave() {\n    this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n  }\n\n  /**\n   * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateLoad\n   * @returns {Array} Stored state.\n   */\n  persistentStateLoad() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n    return storedState.value ? storedState.value : [];\n  }\n\n  /**\n   * Prepares an array of indexes based on actual selection.\n   *\n   * @private\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array}\n   */\n  prepareColumnsToMoving(start, end) {\n    const selectedColumns = [];\n    rangeEach(start, end, i => {\n      selectedColumns.push(i);\n    });\n    return selectedColumns;\n  }\n\n  /**\n   * Update the UI visual position.\n   *\n   * @private\n   */\n  refreshPositions() {\n    const firstVisible = this.hot.view.getFirstFullyVisibleColumn();\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn)) && firstVisible > 0) {\n      this.hot.scrollViewportTo({\n        col: this.hot.columnIndexMapper.getNearestNotHiddenIndex(firstVisible - 1, -1)\n      });\n    }\n    const wtTable = this.hot.view._wt.wtTable;\n    const scrollableElement = this.hot.view._wt.wtOverlays.scrollableElement;\n    const scrollStart = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n    let tdOffsetStart = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, _classPrivateFieldGet(this, _hoveredColumn) - 1);\n    const hiderWidth = wtTable.hider.offsetWidth;\n    const tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n    const backlightElemMarginStart = _classPrivateFieldGet(this, _backlight).getOffset().start;\n    const backlightElemWidth = _classPrivateFieldGet(this, _backlight).getSize().width;\n    let rowHeaderWidth = 0;\n    let mouseOffsetStart = 0;\n    if (this.hot.isRtl()) {\n      const rootWindow = this.hot.rootWindow;\n      const containerWidth = outerWidth(this.hot.rootElement);\n      const gridMostRightPos = rootWindow.innerWidth - _classPrivateFieldGet(this, _rootElementOffset) - containerWidth;\n      mouseOffsetStart = rootWindow.innerWidth - _classPrivateFieldGet(this, _target).eventPageX - gridMostRightPos - (scrollableElement.scrollX === undefined ? scrollStart : 0);\n    } else {\n      mouseOffsetStart = _classPrivateFieldGet(this, _target).eventPageX - (_classPrivateFieldGet(this, _rootElementOffset) - (scrollableElement.scrollX === undefined ? scrollStart : 0));\n    }\n    if (_classPrivateFieldGet(this, _hasRowHeaders)) {\n      rowHeaderWidth = this.hot.view._wt.wtOverlays.inlineStartOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n    }\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn))) {\n      tdOffsetStart += scrollStart;\n    }\n    tdOffsetStart += rowHeaderWidth;\n    if (_classPrivateFieldGet(this, _hoveredColumn) < 0) {\n      // if hover on rowHeader\n      if (_classPrivateFieldGet(this, _fixedColumnsStart) > 0) {\n        _classPrivateFieldGet(this, _target).col = 0;\n      } else {\n        _classPrivateFieldGet(this, _target).col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n      }\n    } else if (_classPrivateFieldGet(this, _target).TD.offsetWidth / 2 + tdOffsetStart <= mouseOffsetStart) {\n      const newCoordsCol = _classPrivateFieldGet(this, _hoveredColumn) >= _classPrivateFieldGet(this, _countCols) ? _classPrivateFieldGet(this, _countCols) - 1 : _classPrivateFieldGet(this, _hoveredColumn);\n\n      // if hover on right part of TD\n      _classPrivateFieldGet(this, _target).col = newCoordsCol + 1;\n      // unfortunately first column is bigger than rest\n      tdOffsetStart += _classPrivateFieldGet(this, _target).TD.offsetWidth;\n    } else {\n      // elsewhere on table\n      _classPrivateFieldGet(this, _target).col = _classPrivateFieldGet(this, _hoveredColumn);\n    }\n    let backlightStart = mouseOffsetStart;\n    let guidelineStart = tdOffsetStart;\n    if (mouseOffsetStart + backlightElemWidth + backlightElemMarginStart >= hiderWidth) {\n      // prevent display backlight on the right side of the table\n      backlightStart = hiderWidth - backlightElemWidth - backlightElemMarginStart;\n    } else if (mouseOffsetStart + backlightElemMarginStart < tbodyOffsetLeft + rowHeaderWidth) {\n      // prevent display backlight on the left side of the table\n      backlightStart = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginStart);\n    }\n    if (tdOffsetStart >= hiderWidth - 1) {\n      // prevent display guideline outside the table\n      guidelineStart = hiderWidth - 1;\n    } else if (guidelineStart === 0) {\n      // guideline has got `margin-left: -1px` as default\n      guidelineStart = 1;\n    } else if (scrollableElement.scrollX !== undefined && _classPrivateFieldGet(this, _hoveredColumn) < _classPrivateFieldGet(this, _fixedColumnsStart)) {\n      guidelineStart -= _classPrivateFieldGet(this, _rootElementOffset) <= scrollableElement.scrollX ? _classPrivateFieldGet(this, _rootElementOffset) : 0;\n    }\n    _classPrivateFieldGet(this, _backlight).setPosition(null, backlightStart);\n    _classPrivateFieldGet(this, _guideline).setPosition(null, guidelineStart);\n  }\n\n  /**\n   * Binds the events used by the plugin.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    this.eventManager.addEventListener(documentElement, 'mousemove', event => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, event));\n    this.eventManager.addEventListener(documentElement, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n  }\n\n  /**\n   * Unbinds the events used by the plugin.\n   *\n   * @private\n   */\n  unregisterEvents() {\n    this.eventManager.clear();\n  }\n  /**\n   * Builds the plugin's UI.\n   *\n   * @private\n   */\n  buildPluginUI() {\n    _classPrivateFieldGet(this, _backlight).build();\n    _classPrivateFieldGet(this, _guideline).build();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.destroy();\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  const wtTable = this.hot.view._wt.wtTable;\n  const isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n  const selection = this.hot.getSelectedRangeLast();\n  // This block action shouldn't be handled below.\n  const isSortingElement = hasClass(event.target, 'sortAction');\n  if (!selection || !isHeaderSelection || _classPrivateFieldGet(this, _pressed) || event.button !== 0 || isSortingElement) {\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n    removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n    return;\n  }\n  const guidelineIsNotReady = _classPrivateFieldGet(this, _guideline).isBuilt() && !_classPrivateFieldGet(this, _guideline).isAppended();\n  const backlightIsNotReady = _classPrivateFieldGet(this, _backlight).isBuilt() && !_classPrivateFieldGet(this, _backlight).isAppended();\n  if (guidelineIsNotReady && backlightIsNotReady) {\n    _classPrivateFieldGet(this, _guideline).appendTo(wtTable.hider);\n    _classPrivateFieldGet(this, _backlight).appendTo(wtTable.hider);\n  }\n  const {\n    from,\n    to\n  } = selection;\n  const start = Math.min(from.col, to.col);\n  const end = Math.max(from.col, to.col);\n  if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n    controller.column = true;\n    _classPrivateFieldSet(this, _pressed, true);\n    const eventOffsetX = TD.firstChild ? offsetRelativeTo(event, TD.firstChild).x : event.offsetX;\n    _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n    _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n    _classPrivateFieldGet(this, _target).TD = TD;\n    _classPrivateFieldGet(this, _target).col = coords.col;\n    _classPrivateFieldSet(this, _columnsToMove, this.prepareColumnsToMoving(start, end));\n    _classPrivateFieldSet(this, _hasRowHeaders, !!this.hot.getSettings().rowHeaders);\n    _classPrivateFieldSet(this, _countCols, this.hot.countCols());\n    _classPrivateFieldSet(this, _fixedColumnsStart, this.hot.getSettings().fixedColumnsStart);\n    _classPrivateFieldSet(this, _rootElementOffset, offset(this.hot.rootElement).left);\n    const countColumnsFrom = _classPrivateFieldGet(this, _hasRowHeaders) ? -1 : 0;\n    const topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n    const fixedColumnsStart = coords.col < _classPrivateFieldGet(this, _fixedColumnsStart);\n    const horizontalScrollPosition = this.hot.view._wt.wtOverlays.inlineStartOverlay.getOverlayOffset();\n    const offsetX = Math.abs(eventOffsetX - (this.hot.isRtl() ? TD.offsetWidth : 0));\n    const inlineOffset = this.getColumnsWidth(start, coords.col - 1) + offsetX;\n    const inlinePos = this.getColumnsWidth(countColumnsFrom, start - 1) + (fixedColumnsStart ? horizontalScrollPosition : 0) + inlineOffset;\n    _classPrivateFieldGet(this, _backlight).setPosition(topPos, inlinePos);\n    _classPrivateFieldGet(this, _backlight).setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n    _classPrivateFieldGet(this, _backlight).setOffset(null, -inlineOffset);\n    addClass(this.hot.rootElement, CSS_ON_MOVING);\n  } else {\n    removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  }\n}\nfunction _onMouseMove2(event) {\n  if (!_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n  this.refreshPositions();\n}\nfunction _onBeforeOnCellMouseOver2(event, coords, TD, controller) {\n  const selectedRange = this.hot.getSelectedRangeLast();\n  if (!selectedRange || !_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  if (_classPrivateFieldGet(this, _columnsToMove).indexOf(coords.col) > -1) {\n    removeClass(this.hot.rootElement, CSS_SHOW_UI);\n  } else {\n    addClass(this.hot.rootElement, CSS_SHOW_UI);\n  }\n  controller.row = true;\n  controller.column = true;\n  controller.cell = true;\n  _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n  _classPrivateFieldGet(this, _target).TD = TD;\n}\nfunction _onMouseUp2() {\n  const target = _classPrivateFieldGet(this, _target).col;\n  const columnsLen = _classPrivateFieldGet(this, _columnsToMove).length;\n  _classPrivateFieldSet(this, _hoveredColumn, undefined);\n  _classPrivateFieldSet(this, _pressed, false);\n  removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n  if (this.hot.selection.isSelectedByColumnHeader()) {\n    addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n  }\n  if (columnsLen < 1 || target === undefined) {\n    return;\n  }\n  const firstMovedVisualColumn = _classPrivateFieldGet(this, _columnsToMove)[0];\n  const firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n  const movePerformed = this.dragColumns(_classPrivateFieldGet(this, _columnsToMove), target);\n  _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  if (movePerformed === true) {\n    this.persistentStateSave();\n    this.hot.render();\n    this.hot.view.adjustElementsSize(true);\n    const selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n    const selectionEnd = selectionStart + columnsLen - 1;\n    this.hot.selectColumns(selectionStart, selectionEnd);\n  }\n}\nfunction _onAfterScrollVertically2() {\n  const wtTable = this.hot.view._wt.wtTable;\n  const headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n  const scrollTop = wtTable.holder.scrollTop;\n  const posTop = headerHeight + scrollTop;\n  _classPrivateFieldGet(this, _backlight).setPosition(posTop);\n  _classPrivateFieldGet(this, _backlight).setSize(null, wtTable.hider.offsetHeight - posTop);\n}\nfunction _onAfterLoadData2() {\n  this.moveBySettingsOrLoad();\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","privateMap","value","set","privateCollection","has","TypeError","_classPrivateFieldSet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorSet","call","writable","_classPrivateFieldGet","_classApplyDescriptorGet","action","get","_classPrivateMethodGet","fn","BasePlugin","Hooks","arrayReduce","addClass","removeClass","offset","hasClass","outerWidth","offsetRelativeTo","rangeEach","BacklightUI","GuidelineUI","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","CSS_PLUGIN","CSS_SHOW_UI","CSS_ON_MOVING","CSS_AFTER_SELECTION","_backlight","WeakMap","_guideline","_columnsToMove","_countCols","_pressed","_target","_cachedDropIndex","_hoveredColumn","_rootElementOffset","_hasRowHeaders","_fixedColumnsStart","_onBeforeOnCellMouseDown","WeakSet","_onMouseMove","_onBeforeOnCellMouseOver","_onMouseUp","_onAfterScrollVertically","_onAfterLoadData","ManualColumnMove","constructor","arguments","hot","isEnabled","getSettings","enablePlugin","_this","enabled","addHook","_len","length","args","Array","_key","_onBeforeOnCellMouseDown2","_len2","_key2","_onBeforeOnCellMouseOver2","_onAfterScrollVertically2","_len3","_key3","_onAfterLoadData2","buildPluginUI","registerEvents","rootElement","updatePlugin","disablePlugin","moveBySettingsOrLoad","unregisterEvents","destroy","moveColumn","column","finalIndex","moveColumns","columns","dropIndex","movePossible","isMovePossible","beforeMoveHook","runHooks","undefined","columnIndexMapper","moveIndexes","movePerformed","isColumnOrderChanged","dragColumn","dragColumns","countFinalIndex","movedColumns","getNotTrimmedIndexesLength","tooHighDestinationIndex","tooLowDestinationIndex","tooLowMovedColumnIndex","some","movedColumn","tooHighMovedColumnIndex","nrOfMovedElement","numberOfColumnsLowerThanDropIndex","numberOfColumns","currentColumnIndex","getColumnsWidth","fromColumn","toColumn","columnMapper","columnsWidth","visualColumnIndex","renderableIndex","getRenderableFromVisualIndex","view","_wt","wtViewport","getRowHeaderWidth","wtTable","getStretchedColumnWidth","pluginSettings","isArray","persistentState","persistentStateLoad","isFixedColumnsStart","fixedColumnsStart","persistentStateSave","getIndexesSequence","storedState","prepareColumnsToMoving","start","end","selectedColumns","i","push","refreshPositions","firstVisible","getFirstFullyVisibleColumn","scrollViewportTo","col","getNearestNotHiddenIndex","scrollableElement","wtOverlays","scrollStart","scrollX","scrollLeft","tdOffsetStart","THEAD","offsetLeft","hiderWidth","hider","offsetWidth","tbodyOffsetLeft","TBODY","backlightElemMarginStart","getOffset","backlightElemWidth","getSize","width","rowHeaderWidth","mouseOffsetStart","isRtl","rootWindow","containerWidth","gridMostRightPos","innerWidth","eventPageX","inlineStartOverlay","clone","getColumnHeader","TD","newCoordsCol","backlightStart","guidelineStart","Math","abs","setPosition","documentElement","rootDocument","eventManager","addEventListener","event","_onMouseMove2","_onMouseUp2","clear","build","coords","controller","isHeaderSelection","selection","isSelectedByColumnHeader","getSelectedRangeLast","isSortingElement","target","button","guidelineIsNotReady","isBuilt","isAppended","backlightIsNotReady","appendTo","from","to","min","max","row","eventOffsetX","firstChild","x","offsetX","pageX","rowHeaders","countCols","left","countColumnsFrom","topPos","holder","scrollTop","getColumnHeaderHeight","horizontalScrollPosition","getOverlayOffset","inlineOffset","inlinePos","setSize","offsetHeight","setOffset","selectedRange","indexOf","cell","columnsLen","firstMovedVisualColumn","firstMovedPhysicalColumn","toPhysicalColumn","render","adjustElementsSize","selectionStart","toVisualColumn","selectionEnd","selectColumns","headerHeight","posTop"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/manualColumnMove/manualColumnMove.mjs"],"sourcesContent":["import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayReduce } from \"../../helpers/array.mjs\";\nimport { addClass, removeClass, offset, hasClass, outerWidth } from \"../../helpers/dom/element.mjs\";\nimport { offsetRelativeTo } from \"../../helpers/dom/event.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport BacklightUI from \"./ui/backlight.mjs\";\nimport GuidelineUI from \"./ui/guideline.mjs\";\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nexport const PLUGIN_KEY = 'manualColumnMove';\nexport const PLUGIN_PRIORITY = 120;\nconst CSS_PLUGIN = 'ht__manualColumnMove';\nconst CSS_SHOW_UI = 'show-ui';\nconst CSS_ON_MOVING = 'on-moving--columns';\nconst CSS_AFTER_SELECTION = 'after-selection--columns';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin ManualColumnMove\n * @class ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - `moveColumn` - move single column to the new position.\n * - `moveColumns` - move many columns (as an array of indexes) to the new position.\n * - `dragColumn` - drag single column to the new position.\n * - `dragColumns` - drag many columns (as an array of indexes) to the new position.\n *\n * [Documentation](@/guides/columns/column-moving.md) explain differences between drag and move actions.\n * Please keep in mind that if you want apply visual changes,\n * you have to call manually the `render` method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where columns has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\nvar _backlight = /*#__PURE__*/new WeakMap();\nvar _guideline = /*#__PURE__*/new WeakMap();\nvar _columnsToMove = /*#__PURE__*/new WeakMap();\nvar _countCols = /*#__PURE__*/new WeakMap();\nvar _pressed = /*#__PURE__*/new WeakMap();\nvar _target = /*#__PURE__*/new WeakMap();\nvar _cachedDropIndex = /*#__PURE__*/new WeakMap();\nvar _hoveredColumn = /*#__PURE__*/new WeakMap();\nvar _rootElementOffset = /*#__PURE__*/new WeakMap();\nvar _hasRowHeaders = /*#__PURE__*/new WeakMap();\nvar _fixedColumnsStart = /*#__PURE__*/new WeakMap();\nvar _onBeforeOnCellMouseDown = /*#__PURE__*/new WeakSet();\nvar _onMouseMove = /*#__PURE__*/new WeakSet();\nvar _onBeforeOnCellMouseOver = /*#__PURE__*/new WeakSet();\nvar _onMouseUp = /*#__PURE__*/new WeakSet();\nvar _onAfterScrollVertically = /*#__PURE__*/new WeakSet();\nvar _onAfterLoadData = /*#__PURE__*/new WeakSet();\nexport class ManualColumnMove extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     */\n    _classPrivateMethodInitSpec(this, _onAfterLoadData);\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterScrollVertically);\n    /**\n     * `onMouseUp` hook callback.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseUp);\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseOver);\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n    _classPrivateMethodInitSpec(this, _onMouseMove);\n    /**\n     * Change the behavior of selection / dragging.\n     *\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n    _classPrivateMethodInitSpec(this, _onBeforeOnCellMouseDown);\n    /**\n     * Backlight UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _backlight, {\n      writable: true,\n      value: new BacklightUI(this.hot)\n    });\n    /**\n     * Guideline UI object.\n     *\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _guideline, {\n      writable: true,\n      value: new GuidelineUI(this.hot)\n    });\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _columnsToMove, {\n      writable: true,\n      value: []\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _countCols, {\n      writable: true,\n      value: 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _pressed, {\n      writable: true,\n      value: false\n    });\n    /**\n     * @type {object}\n     */\n    _classPrivateFieldInitSpec(this, _target, {\n      writable: true,\n      value: {}\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _cachedDropIndex, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _hoveredColumn, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _rootElementOffset, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _hasRowHeaders, {\n      writable: true,\n      value: void 0\n    });\n    /**\n     * @type {number}\n     */\n    _classPrivateFieldInitSpec(this, _fixedColumnsStart, {\n      writable: true,\n      value: void 0\n    });\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseDown, _onBeforeOnCellMouseDown2).call(_this, ...args);\n    });\n    this.addHook('beforeOnCellMouseOver', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _classPrivateMethodGet(_this, _onBeforeOnCellMouseOver, _onBeforeOnCellMouseOver2).call(_this, ...args);\n    });\n    this.addHook('afterScrollVertically', () => _classPrivateMethodGet(this, _onAfterScrollVertically, _onAfterScrollVertically2).call(this));\n    this.addHook('afterLoadData', function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _classPrivateMethodGet(_this, _onAfterLoadData, _onAfterLoadData2).call(_this, ...args);\n    });\n    this.buildPluginUI();\n    this.registerEvents();\n\n    // TODO: move adding plugin classname to BasePlugin.\n    addClass(this.hot.rootElement, CSS_PLUGIN);\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`manualColumnMove`](@/api/options.md#manualcolumnmove)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    this.moveBySettingsOrLoad();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    removeClass(this.hot.rootElement, CSS_PLUGIN);\n    this.unregisterEvents();\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.disablePlugin();\n  }\n\n  /**\n   * Moves a single column.\n   *\n   * @param {number} column Visual column index to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumn(column, finalIndex) {\n    return this.moveColumns([column], finalIndex);\n  }\n\n  /**\n   * Moves a multiple columns.\n   *\n   * @param {Array} columns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  moveColumns(columns, finalIndex) {\n    const dropIndex = _classPrivateFieldGet(this, _cachedDropIndex);\n    const movePossible = this.isMovePossible(columns, finalIndex);\n    const beforeMoveHook = this.hot.runHooks('beforeColumnMove', columns, finalIndex, dropIndex, movePossible);\n    _classPrivateFieldSet(this, _cachedDropIndex, undefined);\n    if (beforeMoveHook === false) {\n      return;\n    }\n    if (movePossible) {\n      this.hot.columnIndexMapper.moveIndexes(columns, finalIndex);\n    }\n    const movePerformed = movePossible && this.isColumnOrderChanged(columns, finalIndex);\n    this.hot.runHooks('afterColumnMove', columns, finalIndex, dropIndex, movePossible, movePerformed);\n    return movePerformed;\n  }\n\n  /**\n   * Drag a single column to drop index position.\n   *\n   * @param {number} column Visual column index to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumn(column, dropIndex) {\n    return this.dragColumns([column], dropIndex);\n  }\n\n  /**\n   * Drag multiple columns to drop index position.\n   *\n   * @param {Array} columns Array of visual column indexes to be dragged.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns. Points to where we are going to drop the moved elements.\n   * To check visualization of drop index please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @fires Hooks#beforeColumnMove\n   * @fires Hooks#afterColumnMove\n   * @returns {boolean}\n   */\n  dragColumns(columns, dropIndex) {\n    const finalIndex = this.countFinalIndex(columns, dropIndex);\n    _classPrivateFieldSet(this, _cachedDropIndex, dropIndex);\n    return this.moveColumns(columns, finalIndex);\n  }\n\n  /**\n   * Indicates if it's possible to move columns to the desired position. Some of the actions aren't\n   * possible, i.e. You can’t move more than one element to the last position.\n   *\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isMovePossible(movedColumns, finalIndex) {\n    const length = this.hot.columnIndexMapper.getNotTrimmedIndexesLength();\n\n    // An attempt to transfer more columns to start destination than is possible (only when moving from the top to the bottom).\n    const tooHighDestinationIndex = movedColumns.length + finalIndex > length;\n    const tooLowDestinationIndex = finalIndex < 0;\n    const tooLowMovedColumnIndex = movedColumns.some(movedColumn => movedColumn < 0);\n    const tooHighMovedColumnIndex = movedColumns.some(movedColumn => movedColumn >= length);\n    if (tooHighDestinationIndex || tooLowDestinationIndex || tooLowMovedColumnIndex || tooHighMovedColumnIndex) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicates if order of columns was changed.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} finalIndex Visual column index, being a start index for the moved columns. Points to where the elements will be placed after the moving action.\n   * To check the visualization of the final index, please take a look at [documentation](@/guides/columns/column-moving.md#drag-and-move-actions-of-manualcolumnmove-plugin).\n   * @returns {boolean}\n   */\n  isColumnOrderChanged(movedColumns, finalIndex) {\n    return movedColumns.some((column, nrOfMovedElement) => column - nrOfMovedElement !== finalIndex);\n  }\n\n  /**\n   * Count the final column index from the drop index.\n   *\n   * @private\n   * @param {Array} movedColumns Array of visual column indexes to be moved.\n   * @param {number} dropIndex Visual column index, being a drop index for the moved columns.\n   * @returns {number} Visual column index, being a start index for the moved columns.\n   */\n  countFinalIndex(movedColumns, dropIndex) {\n    const numberOfColumnsLowerThanDropIndex = arrayReduce(movedColumns, (numberOfColumns, currentColumnIndex) => {\n      if (currentColumnIndex < dropIndex) {\n        numberOfColumns += 1;\n      }\n      return numberOfColumns;\n    }, 0);\n    return dropIndex - numberOfColumnsLowerThanDropIndex;\n  }\n\n  /**\n   * Gets the sum of the widths of columns in the provided range.\n   *\n   * @private\n   * @param {number} fromColumn Visual column index.\n   * @param {number} toColumn Visual column index.\n   * @returns {number}\n   */\n  getColumnsWidth(fromColumn, toColumn) {\n    const columnMapper = this.hot.columnIndexMapper;\n    let columnsWidth = 0;\n    for (let visualColumnIndex = fromColumn; visualColumnIndex <= toColumn; visualColumnIndex += 1) {\n      // We can't use just `getColWidth` (even without indexes translation) as it doesn't return proper values\n      // when column is stretched.\n      const renderableIndex = columnMapper.getRenderableFromVisualIndex(visualColumnIndex);\n      if (visualColumnIndex < 0) {\n        columnsWidth += this.hot.view._wt.wtViewport.getRowHeaderWidth() || 0;\n      } else if (renderableIndex !== null) {\n        columnsWidth += this.hot.view._wt.wtTable.getStretchedColumnWidth(renderableIndex) || 0;\n      }\n    }\n    return columnsWidth;\n  }\n\n  /**\n   * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n   *\n   * @private\n   */\n  moveBySettingsOrLoad() {\n    const pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n    if (Array.isArray(pluginSettings)) {\n      this.moveColumns(pluginSettings, 0);\n    } else if (pluginSettings !== undefined) {\n      const persistentState = this.persistentStateLoad();\n      if (persistentState.length) {\n        this.moveColumns(persistentState, 0);\n      }\n    }\n  }\n\n  /**\n   * Checks if the provided column is in the fixedColumnsTop section.\n   *\n   * @private\n   * @param {number} column Visual column index to check.\n   * @returns {boolean}\n   */\n  isFixedColumnsStart(column) {\n    return column < this.hot.getSettings().fixedColumnsStart;\n  }\n\n  /**\n   * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateSave\n   */\n  persistentStateSave() {\n    this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.hot.columnIndexMapper.getIndexesSequence()); // The `PersistentState` plugin should be refactored.\n  }\n\n  /**\n   * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n   *\n   * @private\n   * @fires Hooks#persistentStateLoad\n   * @returns {Array} Stored state.\n   */\n  persistentStateLoad() {\n    const storedState = {};\n    this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n    return storedState.value ? storedState.value : [];\n  }\n\n  /**\n   * Prepares an array of indexes based on actual selection.\n   *\n   * @private\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array}\n   */\n  prepareColumnsToMoving(start, end) {\n    const selectedColumns = [];\n    rangeEach(start, end, i => {\n      selectedColumns.push(i);\n    });\n    return selectedColumns;\n  }\n\n  /**\n   * Update the UI visual position.\n   *\n   * @private\n   */\n  refreshPositions() {\n    const firstVisible = this.hot.view.getFirstFullyVisibleColumn();\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn)) && firstVisible > 0) {\n      this.hot.scrollViewportTo({\n        col: this.hot.columnIndexMapper.getNearestNotHiddenIndex(firstVisible - 1, -1)\n      });\n    }\n    const wtTable = this.hot.view._wt.wtTable;\n    const scrollableElement = this.hot.view._wt.wtOverlays.scrollableElement;\n    const scrollStart = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n    let tdOffsetStart = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, _classPrivateFieldGet(this, _hoveredColumn) - 1);\n    const hiderWidth = wtTable.hider.offsetWidth;\n    const tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n    const backlightElemMarginStart = _classPrivateFieldGet(this, _backlight).getOffset().start;\n    const backlightElemWidth = _classPrivateFieldGet(this, _backlight).getSize().width;\n    let rowHeaderWidth = 0;\n    let mouseOffsetStart = 0;\n    if (this.hot.isRtl()) {\n      const rootWindow = this.hot.rootWindow;\n      const containerWidth = outerWidth(this.hot.rootElement);\n      const gridMostRightPos = rootWindow.innerWidth - _classPrivateFieldGet(this, _rootElementOffset) - containerWidth;\n      mouseOffsetStart = rootWindow.innerWidth - _classPrivateFieldGet(this, _target).eventPageX - gridMostRightPos - (scrollableElement.scrollX === undefined ? scrollStart : 0);\n    } else {\n      mouseOffsetStart = _classPrivateFieldGet(this, _target).eventPageX - (_classPrivateFieldGet(this, _rootElementOffset) - (scrollableElement.scrollX === undefined ? scrollStart : 0));\n    }\n    if (_classPrivateFieldGet(this, _hasRowHeaders)) {\n      rowHeaderWidth = this.hot.view._wt.wtOverlays.inlineStartOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n    }\n    if (this.isFixedColumnsStart(_classPrivateFieldGet(this, _hoveredColumn))) {\n      tdOffsetStart += scrollStart;\n    }\n    tdOffsetStart += rowHeaderWidth;\n    if (_classPrivateFieldGet(this, _hoveredColumn) < 0) {\n      // if hover on rowHeader\n      if (_classPrivateFieldGet(this, _fixedColumnsStart) > 0) {\n        _classPrivateFieldGet(this, _target).col = 0;\n      } else {\n        _classPrivateFieldGet(this, _target).col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n      }\n    } else if (_classPrivateFieldGet(this, _target).TD.offsetWidth / 2 + tdOffsetStart <= mouseOffsetStart) {\n      const newCoordsCol = _classPrivateFieldGet(this, _hoveredColumn) >= _classPrivateFieldGet(this, _countCols) ? _classPrivateFieldGet(this, _countCols) - 1 : _classPrivateFieldGet(this, _hoveredColumn);\n\n      // if hover on right part of TD\n      _classPrivateFieldGet(this, _target).col = newCoordsCol + 1;\n      // unfortunately first column is bigger than rest\n      tdOffsetStart += _classPrivateFieldGet(this, _target).TD.offsetWidth;\n    } else {\n      // elsewhere on table\n      _classPrivateFieldGet(this, _target).col = _classPrivateFieldGet(this, _hoveredColumn);\n    }\n    let backlightStart = mouseOffsetStart;\n    let guidelineStart = tdOffsetStart;\n    if (mouseOffsetStart + backlightElemWidth + backlightElemMarginStart >= hiderWidth) {\n      // prevent display backlight on the right side of the table\n      backlightStart = hiderWidth - backlightElemWidth - backlightElemMarginStart;\n    } else if (mouseOffsetStart + backlightElemMarginStart < tbodyOffsetLeft + rowHeaderWidth) {\n      // prevent display backlight on the left side of the table\n      backlightStart = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginStart);\n    }\n    if (tdOffsetStart >= hiderWidth - 1) {\n      // prevent display guideline outside the table\n      guidelineStart = hiderWidth - 1;\n    } else if (guidelineStart === 0) {\n      // guideline has got `margin-left: -1px` as default\n      guidelineStart = 1;\n    } else if (scrollableElement.scrollX !== undefined && _classPrivateFieldGet(this, _hoveredColumn) < _classPrivateFieldGet(this, _fixedColumnsStart)) {\n      guidelineStart -= _classPrivateFieldGet(this, _rootElementOffset) <= scrollableElement.scrollX ? _classPrivateFieldGet(this, _rootElementOffset) : 0;\n    }\n    _classPrivateFieldGet(this, _backlight).setPosition(null, backlightStart);\n    _classPrivateFieldGet(this, _guideline).setPosition(null, guidelineStart);\n  }\n\n  /**\n   * Binds the events used by the plugin.\n   *\n   * @private\n   */\n  registerEvents() {\n    const {\n      documentElement\n    } = this.hot.rootDocument;\n    this.eventManager.addEventListener(documentElement, 'mousemove', event => _classPrivateMethodGet(this, _onMouseMove, _onMouseMove2).call(this, event));\n    this.eventManager.addEventListener(documentElement, 'mouseup', () => _classPrivateMethodGet(this, _onMouseUp, _onMouseUp2).call(this));\n  }\n\n  /**\n   * Unbinds the events used by the plugin.\n   *\n   * @private\n   */\n  unregisterEvents() {\n    this.eventManager.clear();\n  }\n  /**\n   * Builds the plugin's UI.\n   *\n   * @private\n   */\n  buildPluginUI() {\n    _classPrivateFieldGet(this, _backlight).build();\n    _classPrivateFieldGet(this, _guideline).build();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    _classPrivateFieldGet(this, _backlight).destroy();\n    _classPrivateFieldGet(this, _guideline).destroy();\n    super.destroy();\n  }\n}\nfunction _onBeforeOnCellMouseDown2(event, coords, TD, controller) {\n  const wtTable = this.hot.view._wt.wtTable;\n  const isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n  const selection = this.hot.getSelectedRangeLast();\n  // This block action shouldn't be handled below.\n  const isSortingElement = hasClass(event.target, 'sortAction');\n  if (!selection || !isHeaderSelection || _classPrivateFieldGet(this, _pressed) || event.button !== 0 || isSortingElement) {\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n    removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n    return;\n  }\n  const guidelineIsNotReady = _classPrivateFieldGet(this, _guideline).isBuilt() && !_classPrivateFieldGet(this, _guideline).isAppended();\n  const backlightIsNotReady = _classPrivateFieldGet(this, _backlight).isBuilt() && !_classPrivateFieldGet(this, _backlight).isAppended();\n  if (guidelineIsNotReady && backlightIsNotReady) {\n    _classPrivateFieldGet(this, _guideline).appendTo(wtTable.hider);\n    _classPrivateFieldGet(this, _backlight).appendTo(wtTable.hider);\n  }\n  const {\n    from,\n    to\n  } = selection;\n  const start = Math.min(from.col, to.col);\n  const end = Math.max(from.col, to.col);\n  if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n    controller.column = true;\n    _classPrivateFieldSet(this, _pressed, true);\n    const eventOffsetX = TD.firstChild ? offsetRelativeTo(event, TD.firstChild).x : event.offsetX;\n    _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n    _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n    _classPrivateFieldGet(this, _target).TD = TD;\n    _classPrivateFieldGet(this, _target).col = coords.col;\n    _classPrivateFieldSet(this, _columnsToMove, this.prepareColumnsToMoving(start, end));\n    _classPrivateFieldSet(this, _hasRowHeaders, !!this.hot.getSettings().rowHeaders);\n    _classPrivateFieldSet(this, _countCols, this.hot.countCols());\n    _classPrivateFieldSet(this, _fixedColumnsStart, this.hot.getSettings().fixedColumnsStart);\n    _classPrivateFieldSet(this, _rootElementOffset, offset(this.hot.rootElement).left);\n    const countColumnsFrom = _classPrivateFieldGet(this, _hasRowHeaders) ? -1 : 0;\n    const topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n    const fixedColumnsStart = coords.col < _classPrivateFieldGet(this, _fixedColumnsStart);\n    const horizontalScrollPosition = this.hot.view._wt.wtOverlays.inlineStartOverlay.getOverlayOffset();\n    const offsetX = Math.abs(eventOffsetX - (this.hot.isRtl() ? TD.offsetWidth : 0));\n    const inlineOffset = this.getColumnsWidth(start, coords.col - 1) + offsetX;\n    const inlinePos = this.getColumnsWidth(countColumnsFrom, start - 1) + (fixedColumnsStart ? horizontalScrollPosition : 0) + inlineOffset;\n    _classPrivateFieldGet(this, _backlight).setPosition(topPos, inlinePos);\n    _classPrivateFieldGet(this, _backlight).setSize(this.getColumnsWidth(start, end), wtTable.hider.offsetHeight - topPos);\n    _classPrivateFieldGet(this, _backlight).setOffset(null, -inlineOffset);\n    addClass(this.hot.rootElement, CSS_ON_MOVING);\n  } else {\n    removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n    _classPrivateFieldSet(this, _pressed, false);\n    _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  }\n}\nfunction _onMouseMove2(event) {\n  if (!_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _target).eventPageX = event.pageX;\n  this.refreshPositions();\n}\nfunction _onBeforeOnCellMouseOver2(event, coords, TD, controller) {\n  const selectedRange = this.hot.getSelectedRangeLast();\n  if (!selectedRange || !_classPrivateFieldGet(this, _pressed)) {\n    return;\n  }\n  if (_classPrivateFieldGet(this, _columnsToMove).indexOf(coords.col) > -1) {\n    removeClass(this.hot.rootElement, CSS_SHOW_UI);\n  } else {\n    addClass(this.hot.rootElement, CSS_SHOW_UI);\n  }\n  controller.row = true;\n  controller.column = true;\n  controller.cell = true;\n  _classPrivateFieldSet(this, _hoveredColumn, coords.col);\n  _classPrivateFieldGet(this, _target).TD = TD;\n}\nfunction _onMouseUp2() {\n  const target = _classPrivateFieldGet(this, _target).col;\n  const columnsLen = _classPrivateFieldGet(this, _columnsToMove).length;\n  _classPrivateFieldSet(this, _hoveredColumn, undefined);\n  _classPrivateFieldSet(this, _pressed, false);\n  removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n  if (this.hot.selection.isSelectedByColumnHeader()) {\n    addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n  }\n  if (columnsLen < 1 || target === undefined) {\n    return;\n  }\n  const firstMovedVisualColumn = _classPrivateFieldGet(this, _columnsToMove)[0];\n  const firstMovedPhysicalColumn = this.hot.toPhysicalColumn(firstMovedVisualColumn);\n  const movePerformed = this.dragColumns(_classPrivateFieldGet(this, _columnsToMove), target);\n  _classPrivateFieldGet(this, _columnsToMove).length = 0;\n  if (movePerformed === true) {\n    this.persistentStateSave();\n    this.hot.render();\n    this.hot.view.adjustElementsSize(true);\n    const selectionStart = this.hot.toVisualColumn(firstMovedPhysicalColumn);\n    const selectionEnd = selectionStart + columnsLen - 1;\n    this.hot.selectColumns(selectionStart, selectionEnd);\n  }\n}\nfunction _onAfterScrollVertically2() {\n  const wtTable = this.hot.view._wt.wtTable;\n  const headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n  const scrollTop = wtTable.holder.scrollTop;\n  const posTop = headerHeight + scrollTop;\n  _classPrivateFieldGet(this, _backlight).setPosition(posTop);\n  _classPrivateFieldGet(this, _backlight).setSize(null, wtTable.hider.offsetHeight - posTop);\n}\nfunction _onAfterLoadData2() {\n  this.moveBySettingsOrLoad();\n}"],"mappings":"AAAA,OAAO,kCAAkC;AACzC,OAAO,mCAAmC;AAC1C,SAASA,2BAA2B,CAACC,GAAG,EAAEC,UAAU,EAAE;EAAEC,0BAA0B,CAACF,GAAG,EAAEC,UAAU,CAAC;EAAEA,UAAU,CAACE,GAAG,CAACH,GAAG,CAAC;AAAE;AAC1H,SAASI,0BAA0B,CAACJ,GAAG,EAAEK,UAAU,EAAEC,KAAK,EAAE;EAAEJ,0BAA0B,CAACF,GAAG,EAAEK,UAAU,CAAC;EAAEA,UAAU,CAACE,GAAG,CAACP,GAAG,EAAEM,KAAK,CAAC;AAAE;AACvI,SAASJ,0BAA0B,CAACF,GAAG,EAAEQ,iBAAiB,EAAE;EAAE,IAAIA,iBAAiB,CAACC,GAAG,CAACT,GAAG,CAAC,EAAE;IAAE,MAAM,IAAIU,SAAS,CAAC,gEAAgE,CAAC;EAAE;AAAE;AACzL,SAASC,qBAAqB,CAACC,QAAQ,EAAEP,UAAU,EAAEC,KAAK,EAAE;EAAE,IAAIO,UAAU,GAAGC,4BAA4B,CAACF,QAAQ,EAAEP,UAAU,EAAE,KAAK,CAAC;EAAEU,wBAAwB,CAACH,QAAQ,EAAEC,UAAU,EAAEP,KAAK,CAAC;EAAE,OAAOA,KAAK;AAAE;AAC/M,SAASS,wBAAwB,CAACH,QAAQ,EAAEC,UAAU,EAAEP,KAAK,EAAE;EAAE,IAAIO,UAAU,CAACN,GAAG,EAAE;IAAEM,UAAU,CAACN,GAAG,CAACS,IAAI,CAACJ,QAAQ,EAAEN,KAAK,CAAC;EAAE,CAAC,MAAM;IAAE,IAAI,CAACO,UAAU,CAACI,QAAQ,EAAE;MAAE,MAAM,IAAIP,SAAS,CAAC,0CAA0C,CAAC;IAAE;IAAEG,UAAU,CAACP,KAAK,GAAGA,KAAK;EAAE;AAAE;AACjQ,SAASY,qBAAqB,CAACN,QAAQ,EAAEP,UAAU,EAAE;EAAE,IAAIQ,UAAU,GAAGC,4BAA4B,CAACF,QAAQ,EAAEP,UAAU,EAAE,KAAK,CAAC;EAAE,OAAOc,wBAAwB,CAACP,QAAQ,EAAEC,UAAU,CAAC;AAAE;AAC1L,SAASC,4BAA4B,CAACF,QAAQ,EAAEP,UAAU,EAAEe,MAAM,EAAE;EAAE,IAAI,CAACf,UAAU,CAACI,GAAG,CAACG,QAAQ,CAAC,EAAE;IAAE,MAAM,IAAIF,SAAS,CAAC,eAAe,GAAGU,MAAM,GAAG,gCAAgC,CAAC;EAAE;EAAE,OAAOf,UAAU,CAACgB,GAAG,CAACT,QAAQ,CAAC;AAAE;AAC5N,SAASO,wBAAwB,CAACP,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAIA,UAAU,CAACQ,GAAG,EAAE;IAAE,OAAOR,UAAU,CAACQ,GAAG,CAACL,IAAI,CAACJ,QAAQ,CAAC;EAAE;EAAE,OAAOC,UAAU,CAACP,KAAK;AAAE;AACjJ,SAASgB,sBAAsB,CAACV,QAAQ,EAAEX,UAAU,EAAEsB,EAAE,EAAE;EAAE,IAAI,CAACtB,UAAU,CAACQ,GAAG,CAACG,QAAQ,CAAC,EAAE;IAAE,MAAM,IAAIF,SAAS,CAAC,gDAAgD,CAAC;EAAE;EAAE,OAAOa,EAAE;AAAE;AACjL,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,+BAA+B;AACnG,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5CV,KAAK,CAACW,YAAY,EAAE,CAACC,QAAQ,CAAC,kBAAkB,CAAC;AACjDZ,KAAK,CAACW,YAAY,EAAE,CAACC,QAAQ,CAAC,iBAAiB,CAAC;AAChD,OAAO,MAAMC,UAAU,GAAG,kBAAkB;AAC5C,OAAO,MAAMC,eAAe,GAAG,GAAG;AAClC,MAAMC,UAAU,GAAG,sBAAsB;AACzC,MAAMC,WAAW,GAAG,SAAS;AAC7B,MAAMC,aAAa,GAAG,oBAAoB;AAC1C,MAAMC,mBAAmB,GAAG,0BAA0B;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAG,aAAa,IAAIC,OAAO,EAAE;AAC3C,IAAIC,UAAU,GAAG,aAAa,IAAID,OAAO,EAAE;AAC3C,IAAIE,cAAc,GAAG,aAAa,IAAIF,OAAO,EAAE;AAC/C,IAAIG,UAAU,GAAG,aAAa,IAAIH,OAAO,EAAE;AAC3C,IAAII,QAAQ,GAAG,aAAa,IAAIJ,OAAO,EAAE;AACzC,IAAIK,OAAO,GAAG,aAAa,IAAIL,OAAO,EAAE;AACxC,IAAIM,gBAAgB,GAAG,aAAa,IAAIN,OAAO,EAAE;AACjD,IAAIO,cAAc,GAAG,aAAa,IAAIP,OAAO,EAAE;AAC/C,IAAIQ,kBAAkB,GAAG,aAAa,IAAIR,OAAO,EAAE;AACnD,IAAIS,cAAc,GAAG,aAAa,IAAIT,OAAO,EAAE;AAC/C,IAAIU,kBAAkB,GAAG,aAAa,IAAIV,OAAO,EAAE;AACnD,IAAIW,wBAAwB,GAAG,aAAa,IAAIC,OAAO,EAAE;AACzD,IAAIC,YAAY,GAAG,aAAa,IAAID,OAAO,EAAE;AAC7C,IAAIE,wBAAwB,GAAG,aAAa,IAAIF,OAAO,EAAE;AACzD,IAAIG,UAAU,GAAG,aAAa,IAAIH,OAAO,EAAE;AAC3C,IAAII,wBAAwB,GAAG,aAAa,IAAIJ,OAAO,EAAE;AACzD,IAAIK,gBAAgB,GAAG,aAAa,IAAIL,OAAO,EAAE;AACjD,OAAO,MAAMM,gBAAgB,SAASvC,UAAU,CAAC;EAC/CwC,WAAW,GAAG;IACZ,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB;AACJ;AACA;AACA;AACA;IACIlE,2BAA2B,CAAC,IAAI,EAAE+D,gBAAgB,CAAC;IACnD;AACJ;AACA;IACI/D,2BAA2B,CAAC,IAAI,EAAE8D,wBAAwB,CAAC;IAC3D;AACJ;AACA;IACI9D,2BAA2B,CAAC,IAAI,EAAE6D,UAAU,CAAC;IAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI7D,2BAA2B,CAAC,IAAI,EAAE4D,wBAAwB,CAAC;IAC3D;AACJ;AACA;AACA;AACA;IACI5D,2BAA2B,CAAC,IAAI,EAAE2D,YAAY,CAAC;IAC/C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI3D,2BAA2B,CAAC,IAAI,EAAEyD,wBAAwB,CAAC;IAC3D;AACJ;AACA;AACA;AACA;IACIpD,0BAA0B,CAAC,IAAI,EAAEwC,UAAU,EAAE;MAC3C3B,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,IAAI4B,WAAW,CAAC,IAAI,CAACgC,GAAG;IACjC,CAAC,CAAC;IACF;AACJ;AACA;AACA;AACA;IACI9D,0BAA0B,CAAC,IAAI,EAAE0C,UAAU,EAAE;MAC3C7B,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,IAAI6B,WAAW,CAAC,IAAI,CAAC+B,GAAG;IACjC,CAAC,CAAC;IACF;AACJ;AACA;IACI9D,0BAA0B,CAAC,IAAI,EAAE2C,cAAc,EAAE;MAC/C9B,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE;IACT,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAE4C,UAAU,EAAE;MAC3C/B,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE;IACT,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAE6C,QAAQ,EAAE;MACzChC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE;IACT,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAE8C,OAAO,EAAE;MACxCjC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,CAAC;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAE+C,gBAAgB,EAAE;MACjDlC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAEgD,cAAc,EAAE;MAC/CnC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAEiD,kBAAkB,EAAE;MACnDpC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAEkD,cAAc,EAAE;MAC/CrC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACF;AACJ;AACA;IACIF,0BAA0B,CAAC,IAAI,EAAEmD,kBAAkB,EAAE;MACnDtC,QAAQ,EAAE,IAAI;MACdX,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;EACJ;EACA,WAAWgC,UAAU,GAAG;IACtB,OAAOA,UAAU;EACnB;EACA,WAAWC,eAAe,GAAG;IAC3B,OAAOA,eAAe;EACxB;EACA;AACF;AACA;AACA;AACA;AACA;EACE4B,SAAS,GAAG;IACV,OAAO,CAAC,CAAC,IAAI,CAACD,GAAG,CAACE,WAAW,EAAE,CAAC9B,UAAU,CAAC;EAC7C;;EAEA;AACF;AACA;EACE+B,YAAY,GAAG;IACb,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB;IACF;IACA,IAAI,CAACC,OAAO,CAAC,uBAAuB,EAAE,YAAY;MAChD,KAAK,IAAIC,IAAI,GAAGR,SAAS,CAACS,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;QACvFF,IAAI,CAACE,IAAI,CAAC,GAAGZ,SAAS,CAACY,IAAI,CAAC;MAC9B;MACA,OAAOvD,sBAAsB,CAACgD,KAAK,EAAEd,wBAAwB,EAAEsB,yBAAyB,CAAC,CAAC9D,IAAI,CAACsD,KAAK,EAAE,GAAGK,IAAI,CAAC;IAChH,CAAC,CAAC;IACF,IAAI,CAACH,OAAO,CAAC,uBAAuB,EAAE,YAAY;MAChD,KAAK,IAAIO,KAAK,GAAGd,SAAS,CAACS,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACG,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;QAC7FL,IAAI,CAACK,KAAK,CAAC,GAAGf,SAAS,CAACe,KAAK,CAAC;MAChC;MACA,OAAO1D,sBAAsB,CAACgD,KAAK,EAAEX,wBAAwB,EAAEsB,yBAAyB,CAAC,CAACjE,IAAI,CAACsD,KAAK,EAAE,GAAGK,IAAI,CAAC;IAChH,CAAC,CAAC;IACF,IAAI,CAACH,OAAO,CAAC,uBAAuB,EAAE,MAAMlD,sBAAsB,CAAC,IAAI,EAAEuC,wBAAwB,EAAEqB,yBAAyB,CAAC,CAAClE,IAAI,CAAC,IAAI,CAAC,CAAC;IACzI,IAAI,CAACwD,OAAO,CAAC,eAAe,EAAE,YAAY;MACxC,KAAK,IAAIW,KAAK,GAAGlB,SAAS,CAACS,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACO,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;QAC7FT,IAAI,CAACS,KAAK,CAAC,GAAGnB,SAAS,CAACmB,KAAK,CAAC;MAChC;MACA,OAAO9D,sBAAsB,CAACgD,KAAK,EAAER,gBAAgB,EAAEuB,iBAAiB,CAAC,CAACrE,IAAI,CAACsD,KAAK,EAAE,GAAGK,IAAI,CAAC;IAChG,CAAC,CAAC;IACF,IAAI,CAACW,aAAa,EAAE;IACpB,IAAI,CAACC,cAAc,EAAE;;IAErB;IACA5D,QAAQ,CAAC,IAAI,CAACuC,GAAG,CAACsB,WAAW,EAAEhD,UAAU,CAAC;IAC1C,KAAK,CAAC6B,YAAY,EAAE;EACtB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEoB,YAAY,GAAG;IACb,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACrB,YAAY,EAAE;IACnB,IAAI,CAACsB,oBAAoB,EAAE;IAC3B,KAAK,CAACF,YAAY,EAAE;EACtB;;EAEA;AACF;AACA;EACEC,aAAa,GAAG;IACd9D,WAAW,CAAC,IAAI,CAACsC,GAAG,CAACsB,WAAW,EAAEhD,UAAU,CAAC;IAC7C,IAAI,CAACoD,gBAAgB,EAAE;IACvB1E,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACiD,OAAO,EAAE;IACjD3E,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAAC+C,OAAO,EAAE;IACjD,KAAK,CAACH,aAAa,EAAE;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,UAAU,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC7B,OAAO,IAAI,CAACC,WAAW,CAAC,CAACF,MAAM,CAAC,EAAEC,UAAU,CAAC;EAC/C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,OAAO,EAAEF,UAAU,EAAE;IAC/B,MAAMG,SAAS,GAAGjF,qBAAqB,CAAC,IAAI,EAAEiC,gBAAgB,CAAC;IAC/D,MAAMiD,YAAY,GAAG,IAAI,CAACC,cAAc,CAACH,OAAO,EAAEF,UAAU,CAAC;IAC7D,MAAMM,cAAc,GAAG,IAAI,CAACpC,GAAG,CAACqC,QAAQ,CAAC,kBAAkB,EAAEL,OAAO,EAAEF,UAAU,EAAEG,SAAS,EAAEC,YAAY,CAAC;IAC1GzF,qBAAqB,CAAC,IAAI,EAAEwC,gBAAgB,EAAEqD,SAAS,CAAC;IACxD,IAAIF,cAAc,KAAK,KAAK,EAAE;MAC5B;IACF;IACA,IAAIF,YAAY,EAAE;MAChB,IAAI,CAAClC,GAAG,CAACuC,iBAAiB,CAACC,WAAW,CAACR,OAAO,EAAEF,UAAU,CAAC;IAC7D;IACA,MAAMW,aAAa,GAAGP,YAAY,IAAI,IAAI,CAACQ,oBAAoB,CAACV,OAAO,EAAEF,UAAU,CAAC;IACpF,IAAI,CAAC9B,GAAG,CAACqC,QAAQ,CAAC,iBAAiB,EAAEL,OAAO,EAAEF,UAAU,EAAEG,SAAS,EAAEC,YAAY,EAAEO,aAAa,CAAC;IACjG,OAAOA,aAAa;EACtB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,UAAU,CAACd,MAAM,EAAEI,SAAS,EAAE;IAC5B,OAAO,IAAI,CAACW,WAAW,CAAC,CAACf,MAAM,CAAC,EAAEI,SAAS,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEW,WAAW,CAACZ,OAAO,EAAEC,SAAS,EAAE;IAC9B,MAAMH,UAAU,GAAG,IAAI,CAACe,eAAe,CAACb,OAAO,EAAEC,SAAS,CAAC;IAC3DxF,qBAAqB,CAAC,IAAI,EAAEwC,gBAAgB,EAAEgD,SAAS,CAAC;IACxD,OAAO,IAAI,CAACF,WAAW,CAACC,OAAO,EAAEF,UAAU,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEK,cAAc,CAACW,YAAY,EAAEhB,UAAU,EAAE;IACvC,MAAMtB,MAAM,GAAG,IAAI,CAACR,GAAG,CAACuC,iBAAiB,CAACQ,0BAA0B,EAAE;;IAEtE;IACA,MAAMC,uBAAuB,GAAGF,YAAY,CAACtC,MAAM,GAAGsB,UAAU,GAAGtB,MAAM;IACzE,MAAMyC,sBAAsB,GAAGnB,UAAU,GAAG,CAAC;IAC7C,MAAMoB,sBAAsB,GAAGJ,YAAY,CAACK,IAAI,CAACC,WAAW,IAAIA,WAAW,GAAG,CAAC,CAAC;IAChF,MAAMC,uBAAuB,GAAGP,YAAY,CAACK,IAAI,CAACC,WAAW,IAAIA,WAAW,IAAI5C,MAAM,CAAC;IACvF,IAAIwC,uBAAuB,IAAIC,sBAAsB,IAAIC,sBAAsB,IAAIG,uBAAuB,EAAE;MAC1G,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEX,oBAAoB,CAACI,YAAY,EAAEhB,UAAU,EAAE;IAC7C,OAAOgB,YAAY,CAACK,IAAI,CAAC,CAACtB,MAAM,EAAEyB,gBAAgB,KAAKzB,MAAM,GAAGyB,gBAAgB,KAAKxB,UAAU,CAAC;EAClG;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEe,eAAe,CAACC,YAAY,EAAEb,SAAS,EAAE;IACvC,MAAMsB,iCAAiC,GAAG/F,WAAW,CAACsF,YAAY,EAAE,CAACU,eAAe,EAAEC,kBAAkB,KAAK;MAC3G,IAAIA,kBAAkB,GAAGxB,SAAS,EAAE;QAClCuB,eAAe,IAAI,CAAC;MACtB;MACA,OAAOA,eAAe;IACxB,CAAC,EAAE,CAAC,CAAC;IACL,OAAOvB,SAAS,GAAGsB,iCAAiC;EACtD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,eAAe,CAACC,UAAU,EAAEC,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAG,IAAI,CAAC7D,GAAG,CAACuC,iBAAiB;IAC/C,IAAIuB,YAAY,GAAG,CAAC;IACpB,KAAK,IAAIC,iBAAiB,GAAGJ,UAAU,EAAEI,iBAAiB,IAAIH,QAAQ,EAAEG,iBAAiB,IAAI,CAAC,EAAE;MAC9F;MACA;MACA,MAAMC,eAAe,GAAGH,YAAY,CAACI,4BAA4B,CAACF,iBAAiB,CAAC;MACpF,IAAIA,iBAAiB,GAAG,CAAC,EAAE;QACzBD,YAAY,IAAI,IAAI,CAAC9D,GAAG,CAACkE,IAAI,CAACC,GAAG,CAACC,UAAU,CAACC,iBAAiB,EAAE,IAAI,CAAC;MACvE,CAAC,MAAM,IAAIL,eAAe,KAAK,IAAI,EAAE;QACnCF,YAAY,IAAI,IAAI,CAAC9D,GAAG,CAACkE,IAAI,CAACC,GAAG,CAACG,OAAO,CAACC,uBAAuB,CAACP,eAAe,CAAC,IAAI,CAAC;MACzF;IACF;IACA,OAAOF,YAAY;EACrB;;EAEA;AACF;AACA;AACA;AACA;EACErC,oBAAoB,GAAG;IACrB,MAAM+C,cAAc,GAAG,IAAI,CAACxE,GAAG,CAACE,WAAW,EAAE,CAAC9B,UAAU,CAAC;IACzD,IAAIsC,KAAK,CAAC+D,OAAO,CAACD,cAAc,CAAC,EAAE;MACjC,IAAI,CAACzC,WAAW,CAACyC,cAAc,EAAE,CAAC,CAAC;IACrC,CAAC,MAAM,IAAIA,cAAc,KAAKlC,SAAS,EAAE;MACvC,MAAMoC,eAAe,GAAG,IAAI,CAACC,mBAAmB,EAAE;MAClD,IAAID,eAAe,CAAClE,MAAM,EAAE;QAC1B,IAAI,CAACuB,WAAW,CAAC2C,eAAe,EAAE,CAAC,CAAC;MACtC;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,mBAAmB,CAAC/C,MAAM,EAAE;IAC1B,OAAOA,MAAM,GAAG,IAAI,CAAC7B,GAAG,CAACE,WAAW,EAAE,CAAC2E,iBAAiB;EAC1D;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,mBAAmB,GAAG;IACpB,IAAI,CAAC9E,GAAG,CAACqC,QAAQ,CAAC,qBAAqB,EAAE,kBAAkB,EAAE,IAAI,CAACrC,GAAG,CAACuC,iBAAiB,CAACwC,kBAAkB,EAAE,CAAC,CAAC,CAAC;EACjH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,mBAAmB,GAAG;IACpB,MAAMK,WAAW,GAAG,CAAC,CAAC;IACtB,IAAI,CAAChF,GAAG,CAACqC,QAAQ,CAAC,qBAAqB,EAAE,kBAAkB,EAAE2C,WAAW,CAAC;IACzE,OAAOA,WAAW,CAAC5I,KAAK,GAAG4I,WAAW,CAAC5I,KAAK,GAAG,EAAE;EACnD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE6I,sBAAsB,CAACC,KAAK,EAAEC,GAAG,EAAE;IACjC,MAAMC,eAAe,GAAG,EAAE;IAC1BrH,SAAS,CAACmH,KAAK,EAAEC,GAAG,EAAEE,CAAC,IAAI;MACzBD,eAAe,CAACE,IAAI,CAACD,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,OAAOD,eAAe;EACxB;;EAEA;AACF;AACA;AACA;AACA;EACEG,gBAAgB,GAAG;IACjB,MAAMC,YAAY,GAAG,IAAI,CAACxF,GAAG,CAACkE,IAAI,CAACuB,0BAA0B,EAAE;IAC/D,IAAI,IAAI,CAACb,mBAAmB,CAAC5H,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,CAAC,IAAIsG,YAAY,GAAG,CAAC,EAAE;MAC7F,IAAI,CAACxF,GAAG,CAAC0F,gBAAgB,CAAC;QACxBC,GAAG,EAAE,IAAI,CAAC3F,GAAG,CAACuC,iBAAiB,CAACqD,wBAAwB,CAACJ,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC;MAC/E,CAAC,CAAC;IACJ;IACA,MAAMlB,OAAO,GAAG,IAAI,CAACtE,GAAG,CAACkE,IAAI,CAACC,GAAG,CAACG,OAAO;IACzC,MAAMuB,iBAAiB,GAAG,IAAI,CAAC7F,GAAG,CAACkE,IAAI,CAACC,GAAG,CAAC2B,UAAU,CAACD,iBAAiB;IACxE,MAAME,WAAW,GAAG,OAAOF,iBAAiB,CAACG,OAAO,KAAK,QAAQ,GAAGH,iBAAiB,CAACG,OAAO,GAAGH,iBAAiB,CAACI,UAAU;IAC5H,IAAIC,aAAa,GAAG,IAAI,CAAClG,GAAG,CAACkE,IAAI,CAACiC,KAAK,CAACC,UAAU,GAAG,IAAI,CAAC1C,eAAe,CAAC,CAAC,EAAE1G,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,GAAG,CAAC,CAAC;IAC7H,MAAMmH,UAAU,GAAG/B,OAAO,CAACgC,KAAK,CAACC,WAAW;IAC5C,MAAMC,eAAe,GAAGlC,OAAO,CAACmC,KAAK,CAACL,UAAU;IAChD,MAAMM,wBAAwB,GAAG1J,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACiI,SAAS,EAAE,CAACzB,KAAK;IAC1F,MAAM0B,kBAAkB,GAAG5J,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACmI,OAAO,EAAE,CAACC,KAAK;IAClF,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAI,IAAI,CAAChH,GAAG,CAACiH,KAAK,EAAE,EAAE;MACpB,MAAMC,UAAU,GAAG,IAAI,CAAClH,GAAG,CAACkH,UAAU;MACtC,MAAMC,cAAc,GAAGtJ,UAAU,CAAC,IAAI,CAACmC,GAAG,CAACsB,WAAW,CAAC;MACvD,MAAM8F,gBAAgB,GAAGF,UAAU,CAACG,UAAU,GAAGrK,qBAAqB,CAAC,IAAI,EAAEmC,kBAAkB,CAAC,GAAGgI,cAAc;MACjHH,gBAAgB,GAAGE,UAAU,CAACG,UAAU,GAAGrK,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAACsI,UAAU,GAAGF,gBAAgB,IAAIvB,iBAAiB,CAACG,OAAO,KAAK1D,SAAS,GAAGyD,WAAW,GAAG,CAAC,CAAC;IAC7K,CAAC,MAAM;MACLiB,gBAAgB,GAAGhK,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAACsI,UAAU,IAAItK,qBAAqB,CAAC,IAAI,EAAEmC,kBAAkB,CAAC,IAAI0G,iBAAiB,CAACG,OAAO,KAAK1D,SAAS,GAAGyD,WAAW,GAAG,CAAC,CAAC,CAAC;IACtL;IACA,IAAI/I,qBAAqB,CAAC,IAAI,EAAEoC,cAAc,CAAC,EAAE;MAC/C2H,cAAc,GAAG,IAAI,CAAC/G,GAAG,CAACkE,IAAI,CAACC,GAAG,CAAC2B,UAAU,CAACyB,kBAAkB,CAACC,KAAK,CAAClD,OAAO,CAACmD,eAAe,CAAC,CAAC,CAAC,CAAC,CAAClB,WAAW;IAChH;IACA,IAAI,IAAI,CAAC3B,mBAAmB,CAAC5H,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,CAAC,EAAE;MACzEgH,aAAa,IAAIH,WAAW;IAC9B;IACAG,aAAa,IAAIa,cAAc;IAC/B,IAAI/J,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,GAAG,CAAC,EAAE;MACnD;MACA,IAAIlC,qBAAqB,CAAC,IAAI,EAAEqC,kBAAkB,CAAC,GAAG,CAAC,EAAE;QACvDrC,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG,GAAG,CAAC;MAC9C,CAAC,MAAM;QACL3I,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG,GAAGH,YAAY,GAAG,CAAC,GAAGA,YAAY,GAAG,CAAC,GAAGA,YAAY;MAC/F;IACF,CAAC,MAAM,IAAIxI,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC0I,EAAE,CAACnB,WAAW,GAAG,CAAC,GAAGL,aAAa,IAAIc,gBAAgB,EAAE;MACtG,MAAMW,YAAY,GAAG3K,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,IAAIlC,qBAAqB,CAAC,IAAI,EAAE8B,UAAU,CAAC,GAAG9B,qBAAqB,CAAC,IAAI,EAAE8B,UAAU,CAAC,GAAG,CAAC,GAAG9B,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC;;MAEvM;MACAlC,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG,GAAGgC,YAAY,GAAG,CAAC;MAC3D;MACAzB,aAAa,IAAIlJ,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC0I,EAAE,CAACnB,WAAW;IACtE,CAAC,MAAM;MACL;MACAvJ,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG,GAAG3I,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC;IACxF;IACA,IAAI0I,cAAc,GAAGZ,gBAAgB;IACrC,IAAIa,cAAc,GAAG3B,aAAa;IAClC,IAAIc,gBAAgB,GAAGJ,kBAAkB,GAAGF,wBAAwB,IAAIL,UAAU,EAAE;MAClF;MACAuB,cAAc,GAAGvB,UAAU,GAAGO,kBAAkB,GAAGF,wBAAwB;IAC7E,CAAC,MAAM,IAAIM,gBAAgB,GAAGN,wBAAwB,GAAGF,eAAe,GAAGO,cAAc,EAAE;MACzF;MACAa,cAAc,GAAGpB,eAAe,GAAGO,cAAc,GAAGe,IAAI,CAACC,GAAG,CAACrB,wBAAwB,CAAC;IACxF;IACA,IAAIR,aAAa,IAAIG,UAAU,GAAG,CAAC,EAAE;MACnC;MACAwB,cAAc,GAAGxB,UAAU,GAAG,CAAC;IACjC,CAAC,MAAM,IAAIwB,cAAc,KAAK,CAAC,EAAE;MAC/B;MACAA,cAAc,GAAG,CAAC;IACpB,CAAC,MAAM,IAAIhC,iBAAiB,CAACG,OAAO,KAAK1D,SAAS,IAAItF,qBAAqB,CAAC,IAAI,EAAEkC,cAAc,CAAC,GAAGlC,qBAAqB,CAAC,IAAI,EAAEqC,kBAAkB,CAAC,EAAE;MACnJwI,cAAc,IAAI7K,qBAAqB,CAAC,IAAI,EAAEmC,kBAAkB,CAAC,IAAI0G,iBAAiB,CAACG,OAAO,GAAGhJ,qBAAqB,CAAC,IAAI,EAAEmC,kBAAkB,CAAC,GAAG,CAAC;IACtJ;IACAnC,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACsJ,WAAW,CAAC,IAAI,EAAEJ,cAAc,CAAC;IACzE5K,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAACoJ,WAAW,CAAC,IAAI,EAAEH,cAAc,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACExG,cAAc,GAAG;IACf,MAAM;MACJ4G;IACF,CAAC,GAAG,IAAI,CAACjI,GAAG,CAACkI,YAAY;IACzB,IAAI,CAACC,YAAY,CAACC,gBAAgB,CAACH,eAAe,EAAE,WAAW,EAAEI,KAAK,IAAIjL,sBAAsB,CAAC,IAAI,EAAEoC,YAAY,EAAE8I,aAAa,CAAC,CAACxL,IAAI,CAAC,IAAI,EAAEuL,KAAK,CAAC,CAAC;IACtJ,IAAI,CAACF,YAAY,CAACC,gBAAgB,CAACH,eAAe,EAAE,SAAS,EAAE,MAAM7K,sBAAsB,CAAC,IAAI,EAAEsC,UAAU,EAAE6I,WAAW,CAAC,CAACzL,IAAI,CAAC,IAAI,CAAC,CAAC;EACxI;;EAEA;AACF;AACA;AACA;AACA;EACE4E,gBAAgB,GAAG;IACjB,IAAI,CAACyG,YAAY,CAACK,KAAK,EAAE;EAC3B;EACA;AACF;AACA;AACA;AACA;EACEpH,aAAa,GAAG;IACdpE,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAAC+J,KAAK,EAAE;IAC/CzL,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAAC6J,KAAK,EAAE;EACjD;EACA;AACF;AACA;EACE9G,OAAO,GAAG;IACR3E,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACiD,OAAO,EAAE;IACjD3E,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAAC+C,OAAO,EAAE;IACjD,KAAK,CAACA,OAAO,EAAE;EACjB;AACF;AACA,SAASf,yBAAyB,CAACyH,KAAK,EAAEK,MAAM,EAAEhB,EAAE,EAAEiB,UAAU,EAAE;EAChE,MAAMrE,OAAO,GAAG,IAAI,CAACtE,GAAG,CAACkE,IAAI,CAACC,GAAG,CAACG,OAAO;EACzC,MAAMsE,iBAAiB,GAAG,IAAI,CAAC5I,GAAG,CAAC6I,SAAS,CAACC,wBAAwB,EAAE;EACvE,MAAMD,SAAS,GAAG,IAAI,CAAC7I,GAAG,CAAC+I,oBAAoB,EAAE;EACjD;EACA,MAAMC,gBAAgB,GAAGpL,QAAQ,CAACyK,KAAK,CAACY,MAAM,EAAE,YAAY,CAAC;EAC7D,IAAI,CAACJ,SAAS,IAAI,CAACD,iBAAiB,IAAI5L,qBAAqB,CAAC,IAAI,EAAE+B,QAAQ,CAAC,IAAIsJ,KAAK,CAACa,MAAM,KAAK,CAAC,IAAIF,gBAAgB,EAAE;IACvHvM,qBAAqB,CAAC,IAAI,EAAEsC,QAAQ,EAAE,KAAK,CAAC;IAC5C/B,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAAC2B,MAAM,GAAG,CAAC;IACtD9C,WAAW,CAAC,IAAI,CAACsC,GAAG,CAACsB,WAAW,EAAE,CAAC9C,aAAa,EAAED,WAAW,CAAC,CAAC;IAC/D;EACF;EACA,MAAM4K,mBAAmB,GAAGnM,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAACwK,OAAO,EAAE,IAAI,CAACpM,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAACyK,UAAU,EAAE;EACtI,MAAMC,mBAAmB,GAAGtM,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAAC0K,OAAO,EAAE,IAAI,CAACpM,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAAC2K,UAAU,EAAE;EACtI,IAAIF,mBAAmB,IAAIG,mBAAmB,EAAE;IAC9CtM,qBAAqB,CAAC,IAAI,EAAE4B,UAAU,CAAC,CAAC2K,QAAQ,CAACjF,OAAO,CAACgC,KAAK,CAAC;IAC/DtJ,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAAC6K,QAAQ,CAACjF,OAAO,CAACgC,KAAK,CAAC;EACjE;EACA,MAAM;IACJkD,IAAI;IACJC;EACF,CAAC,GAAGZ,SAAS;EACb,MAAM3D,KAAK,GAAG4C,IAAI,CAAC4B,GAAG,CAACF,IAAI,CAAC7D,GAAG,EAAE8D,EAAE,CAAC9D,GAAG,CAAC;EACxC,MAAMR,GAAG,GAAG2C,IAAI,CAAC6B,GAAG,CAACH,IAAI,CAAC7D,GAAG,EAAE8D,EAAE,CAAC9D,GAAG,CAAC;EACtC,IAAI+C,MAAM,CAACkB,GAAG,GAAG,CAAC,IAAIlB,MAAM,CAAC/C,GAAG,IAAIT,KAAK,IAAIwD,MAAM,CAAC/C,GAAG,IAAIR,GAAG,EAAE;IAC9DwD,UAAU,CAAC9G,MAAM,GAAG,IAAI;IACxBpF,qBAAqB,CAAC,IAAI,EAAEsC,QAAQ,EAAE,IAAI,CAAC;IAC3C,MAAM8K,YAAY,GAAGnC,EAAE,CAACoC,UAAU,GAAGhM,gBAAgB,CAACuK,KAAK,EAAEX,EAAE,CAACoC,UAAU,CAAC,CAACC,CAAC,GAAG1B,KAAK,CAAC2B,OAAO;IAC7FhN,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAACsI,UAAU,GAAGe,KAAK,CAAC4B,KAAK;IAC7DxN,qBAAqB,CAAC,IAAI,EAAEyC,cAAc,EAAEwJ,MAAM,CAAC/C,GAAG,CAAC;IACvD3I,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC0I,EAAE,GAAGA,EAAE;IAC5C1K,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG,GAAG+C,MAAM,CAAC/C,GAAG;IACrDlJ,qBAAqB,CAAC,IAAI,EAAEoC,cAAc,EAAE,IAAI,CAACoG,sBAAsB,CAACC,KAAK,EAAEC,GAAG,CAAC,CAAC;IACpF1I,qBAAqB,CAAC,IAAI,EAAE2C,cAAc,EAAE,CAAC,CAAC,IAAI,CAACY,GAAG,CAACE,WAAW,EAAE,CAACgK,UAAU,CAAC;IAChFzN,qBAAqB,CAAC,IAAI,EAAEqC,UAAU,EAAE,IAAI,CAACkB,GAAG,CAACmK,SAAS,EAAE,CAAC;IAC7D1N,qBAAqB,CAAC,IAAI,EAAE4C,kBAAkB,EAAE,IAAI,CAACW,GAAG,CAACE,WAAW,EAAE,CAAC2E,iBAAiB,CAAC;IACzFpI,qBAAqB,CAAC,IAAI,EAAE0C,kBAAkB,EAAExB,MAAM,CAAC,IAAI,CAACqC,GAAG,CAACsB,WAAW,CAAC,CAAC8I,IAAI,CAAC;IAClF,MAAMC,gBAAgB,GAAGrN,qBAAqB,CAAC,IAAI,EAAEoC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC7E,MAAMkL,MAAM,GAAGhG,OAAO,CAACiG,MAAM,CAACC,SAAS,GAAGlG,OAAO,CAACmG,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC;IAC9E,MAAM5F,iBAAiB,GAAG6D,MAAM,CAAC/C,GAAG,GAAG3I,qBAAqB,CAAC,IAAI,EAAEqC,kBAAkB,CAAC;IACtF,MAAMqL,wBAAwB,GAAG,IAAI,CAAC1K,GAAG,CAACkE,IAAI,CAACC,GAAG,CAAC2B,UAAU,CAACyB,kBAAkB,CAACoD,gBAAgB,EAAE;IACnG,MAAMX,OAAO,GAAGlC,IAAI,CAACC,GAAG,CAAC8B,YAAY,IAAI,IAAI,CAAC7J,GAAG,CAACiH,KAAK,EAAE,GAAGS,EAAE,CAACnB,WAAW,GAAG,CAAC,CAAC,CAAC;IAChF,MAAMqE,YAAY,GAAG,IAAI,CAAClH,eAAe,CAACwB,KAAK,EAAEwD,MAAM,CAAC/C,GAAG,GAAG,CAAC,CAAC,GAAGqE,OAAO;IAC1E,MAAMa,SAAS,GAAG,IAAI,CAACnH,eAAe,CAAC2G,gBAAgB,EAAEnF,KAAK,GAAG,CAAC,CAAC,IAAIL,iBAAiB,GAAG6F,wBAAwB,GAAG,CAAC,CAAC,GAAGE,YAAY;IACvI5N,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACsJ,WAAW,CAACsC,MAAM,EAAEO,SAAS,CAAC;IACtE7N,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACoM,OAAO,CAAC,IAAI,CAACpH,eAAe,CAACwB,KAAK,EAAEC,GAAG,CAAC,EAAEb,OAAO,CAACgC,KAAK,CAACyE,YAAY,GAAGT,MAAM,CAAC;IACtHtN,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACsM,SAAS,CAAC,IAAI,EAAE,CAACJ,YAAY,CAAC;IACtEnN,QAAQ,CAAC,IAAI,CAACuC,GAAG,CAACsB,WAAW,EAAE9C,aAAa,CAAC;EAC/C,CAAC,MAAM;IACLd,WAAW,CAAC,IAAI,CAACsC,GAAG,CAACsB,WAAW,EAAE7C,mBAAmB,CAAC;IACtDhC,qBAAqB,CAAC,IAAI,EAAEsC,QAAQ,EAAE,KAAK,CAAC;IAC5C/B,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAAC2B,MAAM,GAAG,CAAC;EACxD;AACF;AACA,SAAS8H,aAAa,CAACD,KAAK,EAAE;EAC5B,IAAI,CAACrL,qBAAqB,CAAC,IAAI,EAAE+B,QAAQ,CAAC,EAAE;IAC1C;EACF;EACA/B,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAACsI,UAAU,GAAGe,KAAK,CAAC4B,KAAK;EAC7D,IAAI,CAAC1E,gBAAgB,EAAE;AACzB;AACA,SAASxE,yBAAyB,CAACsH,KAAK,EAAEK,MAAM,EAAEhB,EAAE,EAAEiB,UAAU,EAAE;EAChE,MAAMsC,aAAa,GAAG,IAAI,CAACjL,GAAG,CAAC+I,oBAAoB,EAAE;EACrD,IAAI,CAACkC,aAAa,IAAI,CAACjO,qBAAqB,CAAC,IAAI,EAAE+B,QAAQ,CAAC,EAAE;IAC5D;EACF;EACA,IAAI/B,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAACqM,OAAO,CAACxC,MAAM,CAAC/C,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IACxEjI,WAAW,CAAC,IAAI,CAACsC,GAAG,CAACsB,WAAW,EAAE/C,WAAW,CAAC;EAChD,CAAC,MAAM;IACLd,QAAQ,CAAC,IAAI,CAACuC,GAAG,CAACsB,WAAW,EAAE/C,WAAW,CAAC;EAC7C;EACAoK,UAAU,CAACiB,GAAG,GAAG,IAAI;EACrBjB,UAAU,CAAC9G,MAAM,GAAG,IAAI;EACxB8G,UAAU,CAACwC,IAAI,GAAG,IAAI;EACtB1O,qBAAqB,CAAC,IAAI,EAAEyC,cAAc,EAAEwJ,MAAM,CAAC/C,GAAG,CAAC;EACvD3I,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC0I,EAAE,GAAGA,EAAE;AAC9C;AACA,SAASa,WAAW,GAAG;EACrB,MAAMU,MAAM,GAAGjM,qBAAqB,CAAC,IAAI,EAAEgC,OAAO,CAAC,CAAC2G,GAAG;EACvD,MAAMyF,UAAU,GAAGpO,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAAC2B,MAAM;EACrE/D,qBAAqB,CAAC,IAAI,EAAEyC,cAAc,EAAEoD,SAAS,CAAC;EACtD7F,qBAAqB,CAAC,IAAI,EAAEsC,QAAQ,EAAE,KAAK,CAAC;EAC5CrB,WAAW,CAAC,IAAI,CAACsC,GAAG,CAACsB,WAAW,EAAE,CAAC9C,aAAa,EAAED,WAAW,EAAEE,mBAAmB,CAAC,CAAC;EACpF,IAAI,IAAI,CAACuB,GAAG,CAAC6I,SAAS,CAACC,wBAAwB,EAAE,EAAE;IACjDrL,QAAQ,CAAC,IAAI,CAACuC,GAAG,CAACsB,WAAW,EAAE7C,mBAAmB,CAAC;EACrD;EACA,IAAI2M,UAAU,GAAG,CAAC,IAAInC,MAAM,KAAK3G,SAAS,EAAE;IAC1C;EACF;EACA,MAAM+I,sBAAsB,GAAGrO,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAAC,CAAC,CAAC;EAC7E,MAAMyM,wBAAwB,GAAG,IAAI,CAACtL,GAAG,CAACuL,gBAAgB,CAACF,sBAAsB,CAAC;EAClF,MAAM5I,aAAa,GAAG,IAAI,CAACG,WAAW,CAAC5F,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,EAAEoK,MAAM,CAAC;EAC3FjM,qBAAqB,CAAC,IAAI,EAAE6B,cAAc,CAAC,CAAC2B,MAAM,GAAG,CAAC;EACtD,IAAIiC,aAAa,KAAK,IAAI,EAAE;IAC1B,IAAI,CAACqC,mBAAmB,EAAE;IAC1B,IAAI,CAAC9E,GAAG,CAACwL,MAAM,EAAE;IACjB,IAAI,CAACxL,GAAG,CAACkE,IAAI,CAACuH,kBAAkB,CAAC,IAAI,CAAC;IACtC,MAAMC,cAAc,GAAG,IAAI,CAAC1L,GAAG,CAAC2L,cAAc,CAACL,wBAAwB,CAAC;IACxE,MAAMM,YAAY,GAAGF,cAAc,GAAGN,UAAU,GAAG,CAAC;IACpD,IAAI,CAACpL,GAAG,CAAC6L,aAAa,CAACH,cAAc,EAAEE,YAAY,CAAC;EACtD;AACF;AACA,SAAS5K,yBAAyB,GAAG;EACnC,MAAMsD,OAAO,GAAG,IAAI,CAACtE,GAAG,CAACkE,IAAI,CAACC,GAAG,CAACG,OAAO;EACzC,MAAMwH,YAAY,GAAGxH,OAAO,CAACmG,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC;EACzD,MAAMD,SAAS,GAAGlG,OAAO,CAACiG,MAAM,CAACC,SAAS;EAC1C,MAAMuB,MAAM,GAAGD,YAAY,GAAGtB,SAAS;EACvCxN,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACsJ,WAAW,CAAC+D,MAAM,CAAC;EAC3D/O,qBAAqB,CAAC,IAAI,EAAE0B,UAAU,CAAC,CAACoM,OAAO,CAAC,IAAI,EAAExG,OAAO,CAACgC,KAAK,CAACyE,YAAY,GAAGgB,MAAM,CAAC;AAC5F;AACA,SAAS5K,iBAAiB,GAAG;EAC3B,IAAI,CAACM,oBAAoB,EAAE;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}