{"ast":null,"code":"import { BaseEditor } from \"../baseEditor/index.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nexport const EDITOR_TYPE = 'checkbox';\n\n/**\n * @private\n * @class CheckboxEditor\n */\nexport class CheckboxEditor extends BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  beginEditing(initialValue, event) {\n    // Just some events connected with checkbox editor are delegated here. Some `keydown` events like `enter` and `space` key press\n    // are handled inside `checkboxRenderer`. Some events come here from `editorManager`. Below `if` statement was created by author\n    // for purpose of handling only `doubleclick` event which may be done on a cell with checkbox.\n\n    if (event && event.type === 'mouseup') {\n      const checkbox = this.TD.querySelector('input[type=\"checkbox\"]');\n      if (!hasClass(checkbox, 'htBadValue')) {\n        checkbox.click();\n      }\n    }\n  }\n  finishEditing() {}\n  init() {}\n  open() {}\n  close() {}\n  getValue() {}\n  setValue() {}\n  focus() {}\n}","map":{"version":3,"names":["BaseEditor","hasClass","EDITOR_TYPE","CheckboxEditor","beginEditing","initialValue","event","type","checkbox","TD","querySelector","click","finishEditing","init","open","close","getValue","setValue","focus"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/editors/checkboxEditor/checkboxEditor.mjs"],"sourcesContent":["import { BaseEditor } from \"../baseEditor/index.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nexport const EDITOR_TYPE = 'checkbox';\n\n/**\n * @private\n * @class CheckboxEditor\n */\nexport class CheckboxEditor extends BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  beginEditing(initialValue, event) {\n    // Just some events connected with checkbox editor are delegated here. Some `keydown` events like `enter` and `space` key press\n    // are handled inside `checkboxRenderer`. Some events come here from `editorManager`. Below `if` statement was created by author\n    // for purpose of handling only `doubleclick` event which may be done on a cell with checkbox.\n\n    if (event && event.type === 'mouseup') {\n      const checkbox = this.TD.querySelector('input[type=\"checkbox\"]');\n      if (!hasClass(checkbox, 'htBadValue')) {\n        checkbox.click();\n      }\n    }\n  }\n  finishEditing() {}\n  init() {}\n  open() {}\n  close() {}\n  getValue() {}\n  setValue() {}\n  focus() {}\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,OAAO,MAAMC,WAAW,GAAG,UAAU;;AAErC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASH,UAAU,CAAC;EAC7C,WAAWE,WAAW,GAAG;IACvB,OAAOA,WAAW;EACpB;EACAE,YAAY,CAACC,YAAY,EAAEC,KAAK,EAAE;IAChC;IACA;IACA;;IAEA,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;MACrC,MAAMC,QAAQ,GAAG,IAAI,CAACC,EAAE,CAACC,aAAa,CAAC,wBAAwB,CAAC;MAChE,IAAI,CAACT,QAAQ,CAACO,QAAQ,EAAE,YAAY,CAAC,EAAE;QACrCA,QAAQ,CAACG,KAAK,EAAE;MAClB;IACF;EACF;EACAC,aAAa,GAAG,CAAC;EACjBC,IAAI,GAAG,CAAC;EACRC,IAAI,GAAG,CAAC;EACRC,KAAK,GAAG,CAAC;EACTC,QAAQ,GAAG,CAAC;EACZC,QAAQ,GAAG,CAAC;EACZC,KAAK,GAAG,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}