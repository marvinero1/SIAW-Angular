{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@services/app.service\";\nimport * as i3 from \"ngx-toastr\";\nvar AuthGuard = /** @class */function () {\n  function AuthGuard(router, appService, toastr) {\n    this.router = router;\n    this.appService = appService;\n    this.toastr = toastr;\n  }\n  AuthGuard.prototype.canActivate = function (next, state) {\n    // console.log(sessionStorage.length);\n    if (sessionStorage.length == 0) {\n      this.router.navigate(['/login']);\n      this.toastr.info('Tiene que Iniciar Sesion, AuthGuard Activo üõ°Ô∏è');\n      console.log(\"No hay Session, no puede ingresar al sistema.\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  AuthGuard.prototype.canActivateChild = function (next, state) {\n    return this.canActivate(next, state);\n  };\n  AuthGuard.…µfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.…µ…µinject(i1.Router), i0.…µ…µinject(i2.AppService), i0.…µ…µinject(i3.ToastrService));\n  };\n  AuthGuard.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.…µfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n}();\nexport { AuthGuard };","map":{"version":3,"mappings":"AACA,SAGIA,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAO,EACPC,MAAM,QACH,iBAAiB;;;;;AAMxB;EAII,mBAAoBC,MAAc,EAAUC,UAAsB,EAAUC,MAAqB;IAA7E,WAAM,GAANF,MAAM;IAAkB,eAAU,GAAVC,UAAU;IAAsB,WAAM,GAANC,MAAM;EAAkB;EAEpGC,+BAAW,GAAX,UACIC,IAA4B,EAC5BC,KAA0B;IAM1B;IAEA,IAAGC,cAAc,CAACC,MAAM,IAAI,CAAC,EAAC;MAC1B,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,gDAAgD,CAAC;MAClEC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAE5D,OAAO,KAAK;KACf,MAAI;MACD,OAAO,IAAI;;EAEnB,CAAC;EAEDR,oCAAgB,GAAhB,UACIC,IAA4B,EAC5BC,KAA0B;IAK1B,OAAO,IAAI,CAACO,WAAW,CAACR,IAAI,EAAEC,KAAK,CAAC;EACxC,CAAC;;qBAhCQF,SAAS;EAAA;;WAATA,SAAS;IAAAU,SAATV,SAAS;IAAAW,YAFN;EAAM;kBAftB;CAkDC,EApCD;SAGaX,SAAS","names":["ActivatedRouteSnapshot","RouterStateSnapshot","UrlTree","Router","router","appService","toastr","AuthGuard","next","state","sessionStorage","length","navigate","info","console","log","canActivate","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {\r\n    CanActivate,\r\n    CanActivateChild,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    UrlTree,\r\n    Router\r\n} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AppService} from '@services/app.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n    constructor(private router: Router, private appService: AppService, private toastr: ToastrService) {}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        | Observable<boolean | UrlTree>\r\n        | Promise<boolean | UrlTree>\r\n        | boolean\r\n        | UrlTree {\r\n        \r\n        // console.log(sessionStorage.length);\r\n\r\n        if(sessionStorage.length == 0){\r\n            this.router.navigate(['/login']);\r\n            this.toastr.info('Tiene que Iniciar Sesion, AuthGuard Activo üõ°Ô∏è');\r\n            console.log(\"No hay Session, no puede ingresar al sistema.\");\r\n\r\n            return false; \r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    canActivateChild(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        | Observable<boolean | UrlTree>\r\n        | Promise<boolean | UrlTree>\r\n        | boolean\r\n        | UrlTree {\r\n        return this.canActivate(next, state);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}