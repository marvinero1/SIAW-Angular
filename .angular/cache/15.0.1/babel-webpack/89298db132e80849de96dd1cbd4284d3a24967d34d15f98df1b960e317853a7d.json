{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { isNumeric } from \"../../../helpers/number.mjs\";\nimport { toUpperCaseFirst } from \"../../../helpers/string.mjs\";\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @class\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    /**\n     * Defines the \"start\" physical CSS property name used within the class depending on what document\n     * layout direction the library runs.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"inlineProperty\", void 0);\n    this.hot = hotInstance;\n    this.inlineProperty = hotInstance.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} inlinePosition New left/right (depends on LTR/RTL document mode) position of the element.\n   */\n  setPosition(top, inlinePosition) {\n    if (isNumeric(top)) {\n      this._element.style.top = top + UNIT;\n    }\n    if (isNumeric(inlinePosition)) {\n      this._element.style[this.inlineProperty] = inlinePosition + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    const style = this._element.style;\n    return {\n      top: style.top ? parseInt(style.top, 10) : 0,\n      start: style[this.inlineProperty] ? parseInt(style[this.inlineProperty], 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (isNumeric(width)) {\n      this._element.style.width = width + UNIT;\n    }\n    if (isNumeric(height)) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} inlineOffset New margin left/right (depends on LTR/RTL document mode) of the element.\n   */\n  setOffset(top, inlineOffset) {\n    if (isNumeric(top)) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (isNumeric(inlineOffset)) {\n      this._element.style[`margin${toUpperCaseFirst(this.inlineProperty)}`] = inlineOffset + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    const style = this._element.style;\n    const inlineProp = `margin${toUpperCaseFirst(this.inlineProperty)}`;\n    return {\n      top: style.marginTop ? parseInt(style.marginTop, 10) : 0,\n      start: style[inlineProp] ? parseInt(style[inlineProp], 10) : 0\n    };\n  }\n}\nexport default BaseUI;","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","isNumeric","toUpperCaseFirst","STATE_INITIALIZED","STATE_BUILT","STATE_APPENDED","UNIT","BaseUI","constructor","hotInstance","hot","inlineProperty","isRtl","appendTo","wrapper","appendChild","_element","state","build","rootDocument","createElement","destroy","isAppended","parentElement","removeChild","isBuilt","setPosition","top","inlinePosition","style","getPosition","parseInt","start","setSize","width","height","getSize","setOffset","inlineOffset","marginTop","getOffset","inlineProp"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/manualColumnMove/ui/_base.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { isNumeric } from \"../../../helpers/number.mjs\";\nimport { toUpperCaseFirst } from \"../../../helpers/string.mjs\";\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @class\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    /**\n     * Defines the \"start\" physical CSS property name used within the class depending on what document\n     * layout direction the library runs.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"inlineProperty\", void 0);\n    this.hot = hotInstance;\n    this.inlineProperty = hotInstance.isRtl() ? 'right' : 'left';\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} inlinePosition New left/right (depends on LTR/RTL document mode) position of the element.\n   */\n  setPosition(top, inlinePosition) {\n    if (isNumeric(top)) {\n      this._element.style.top = top + UNIT;\n    }\n    if (isNumeric(inlinePosition)) {\n      this._element.style[this.inlineProperty] = inlinePosition + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    const style = this._element.style;\n    return {\n      top: style.top ? parseInt(style.top, 10) : 0,\n      start: style[this.inlineProperty] ? parseInt(style[this.inlineProperty], 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (isNumeric(width)) {\n      this._element.style.width = width + UNIT;\n    }\n    if (isNumeric(height)) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} inlineOffset New margin left/right (depends on LTR/RTL document mode) of the element.\n   */\n  setOffset(top, inlineOffset) {\n    if (isNumeric(top)) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (isNumeric(inlineOffset)) {\n      this._element.style[`margin${toUpperCaseFirst(this.inlineProperty)}`] = inlineOffset + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    const style = this._element.style;\n    const inlineProp = `margin${toUpperCaseFirst(this.inlineProperty)}`;\n    return {\n      top: style.marginTop ? parseInt(style.marginTop, 10) : 0,\n      start: style[inlineProp] ? parseInt(style[inlineProp], 10) : 0\n    };\n  }\n}\nexport default BaseUI;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}