{"ast":null,"code":"import \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isKey } from \"../../helpers/unicode.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport * as constants from \"../../i18n/constants.mjs\";\nimport { ConditionComponent } from \"./component/condition.mjs\";\nimport { OperatorsComponent } from \"./component/operators.mjs\";\nimport { ValueComponent } from \"./component/value.mjs\";\nimport { ActionBarComponent } from \"./component/actionBar.mjs\";\nimport ConditionCollection from \"./conditionCollection.mjs\";\nimport DataFilter from \"./dataFilter.mjs\";\nimport ConditionUpdateObserver from \"./conditionUpdateObserver.mjs\";\nimport { createArrayAssertion, toEmptyString, unifyColumnValues } from \"./utils.mjs\";\nimport { createMenuFocusController } from \"./menu/focusController.mjs\";\nimport { CONDITION_NONE, CONDITION_BY_VALUE, OPERATION_AND, OPERATION_OR, OPERATION_OR_THEN_VARIABLE } from \"./constants.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nexport const PLUGIN_KEY = 'filters';\nexport const PLUGIN_PRIORITY = 250;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/**\n * @plugin Filters\n * @class Filters\n *\n * @description\n * The plugin allows filtering the table data either by the built-in component or with the API.\n *\n * See [the filtering demo](@/guides/columns/column-filter.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   dropdownMenu: true,\n *   filters: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   dropdownMenu={true}\n *   filters={true}\n * />\n * ```\n * :::\n */\nvar _menuFocusNavigator = /*#__PURE__*/new WeakMap();\nvar _onAfterChange = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuShow = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuHide = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onActionBarSubmit = /*#__PURE__*/new WeakSet();\nvar _onComponentChange = /*#__PURE__*/new WeakSet();\nvar _onSelectUIClosed = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _updateComponents = /*#__PURE__*/new WeakSet();\nexport class Filters extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:DropdownMenu', 'plugin:HiddenRows', 'cell-type:checkbox'];\n  }\n\n  /**\n   * Instance of {@link DropdownMenu}.\n   *\n   * @private\n   * @type {DropdownMenu}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    // One listener for the enable/disable functionality\n    /**\n     * It updates the components state. The state is triggered by ConditionUpdateObserver, which\n     * reacts to any condition added to the condition collection. It may be added through the UI\n     * components or by API call.\n     *\n     * @param {object} conditionsState An object with the state generated by UI components.\n     */\n    _classPrivateMethodInitSpec(this, _updateComponents);\n    /**\n     * On after get column header listener.\n     *\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * On component SelectUI closed listener.\n     */\n    _classPrivateMethodInitSpec(this, _onSelectUIClosed);\n    /**\n     * On component change listener.\n     *\n     * @param {BaseComponent} component Component inheriting BaseComponent.\n     * @param {object} command Menu item object (command).\n     */\n    _classPrivateMethodInitSpec(this, _onComponentChange);\n    /**\n     * On action bar submit listener.\n     *\n     * @private\n     * @param {string} submitType The submit type.\n     */\n    _classPrivateMethodInitSpec(this, _onActionBarSubmit);\n    /**\n     * After dropdown menu default options listener.\n     *\n     * @param {object} defaultOptions ContextMenu default item options.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuDefaultOptions);\n    /**\n     * After dropdown menu hide listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuHide);\n    /**\n     * After dropdown menu show listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuShow);\n    /**\n     * `afterChange` listener.\n     *\n     * @param {Array} changes Array of changes.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterChange);\n    _defineProperty(this, \"dropdownMenuPlugin\", null);\n    /**\n     * Instance of {@link ConditionCollection}.\n     *\n     * @private\n     * @type {ConditionCollection}\n     */\n    _defineProperty(this, \"conditionCollection\", null);\n    /**\n     * Instance of {@link ConditionUpdateObserver}.\n     *\n     * @private\n     * @type {ConditionUpdateObserver}\n     */\n    _defineProperty(this, \"conditionUpdateObserver\", null);\n    /**\n     * Map, where key is component identifier and value represent `BaseComponent` element or it derivatives.\n     *\n     * @private\n     * @type {Map}\n     */\n    _defineProperty(this, \"components\", new Map([['filter_by_condition', null], ['filter_operators', null], ['filter_by_condition2', null], ['filter_by_value', null], ['filter_action_bar', null]]));\n    /**\n     * Map of skipped rows by plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n    _defineProperty(this, \"filtersRowsMap\", null);\n    /**\n     * Menu focus navigator allows switching the focus position through Tab and Shift Tab keys.\n     *\n     * @type {MenuFocusNavigator|undefined}\n     */\n    _classPrivateFieldInitSpec(this, _menuFocusNavigator, {\n      writable: true,\n      value: void 0\n    });\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Filters#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    /* eslint-disable no-unneeded-ternary */\n    return this.hot.getSettings()[PLUGIN_KEY] ? true : false;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.filtersRowsMap = this.hot.rowIndexMapper.registerMap(this.pluginName, new TrimmingMap());\n    this.dropdownMenuPlugin = this.hot.getPlugin('dropdownMenu');\n    const dropdownSettings = this.hot.getSettings().dropdownMenu;\n    const menuContainer = dropdownSettings && dropdownSettings.uiContainer || this.hot.rootDocument.body;\n    const addConfirmationHooks = component => {\n      component.addLocalHook('accept', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'accept'));\n      component.addLocalHook('cancel', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'cancel'));\n      component.addLocalHook('change', command => _classPrivateMethodGet(this, _onComponentChange, _onComponentChange2).call(this, component, command));\n      return component;\n    };\n    const filterByConditionLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_CONDITION)}:`;\n    const filterValueLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_VALUE)}:`;\n    if (!this.components.get('filter_by_condition')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition',\n        name: filterByConditionLabel,\n        addSeparator: false,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_operators')) {\n      this.components.set('filter_operators', new OperatorsComponent(this.hot, {\n        id: 'filter_operators',\n        name: 'Operators'\n      }));\n    }\n    if (!this.components.get('filter_by_condition2')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition2',\n        name: '',\n        addSeparator: true,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition2', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_by_value')) {\n      this.components.set('filter_by_value', addConfirmationHooks(new ValueComponent(this.hot, {\n        id: 'filter_by_value',\n        name: filterValueLabel\n      })));\n    }\n    if (!this.components.get('filter_action_bar')) {\n      this.components.set('filter_action_bar', addConfirmationHooks(new ActionBarComponent(this.hot, {\n        id: 'filter_action_bar',\n        name: 'Action bar'\n      })));\n    }\n    if (!this.conditionCollection) {\n      this.conditionCollection = new ConditionCollection(this.hot);\n    }\n    if (!this.conditionUpdateObserver) {\n      this.conditionUpdateObserver = new ConditionUpdateObserver(this.hot, this.conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n      this.conditionUpdateObserver.addLocalHook('update', conditionState => _classPrivateMethodGet(this, _updateComponents, _updateComponents2).call(this, conditionState));\n    }\n    this.components.forEach(component => component.show());\n    this.addHook('afterDropdownMenuDefaultOptions', defaultOptions => _classPrivateMethodGet(this, _onAfterDropdownMenuDefaultOptions, _onAfterDropdownMenuDefaultOptions2).call(this, defaultOptions));\n    this.addHook('afterDropdownMenuShow', () => _classPrivateMethodGet(this, _onAfterDropdownMenuShow, _onAfterDropdownMenuShow2).call(this));\n    this.addHook('afterDropdownMenuHide', () => _classPrivateMethodGet(this, _onAfterDropdownMenuHide, _onAfterDropdownMenuHide2).call(this));\n    this.addHook('afterChange', changes => _classPrivateMethodGet(this, _onAfterChange, _onAfterChange2).call(this, changes));\n\n    // Temp. solution (extending menu items bug in contextMenu/dropdownMenu)\n    if (this.hot.getSettings().dropdownMenu && this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.disablePlugin();\n      this.dropdownMenuPlugin.enablePlugin();\n    }\n    if (!_classPrivateFieldGet(this, _menuFocusNavigator) && this.dropdownMenuPlugin.enabled) {\n      const mainMenu = this.dropdownMenuPlugin.menu;\n      const focusableItems = [\n      // A fake menu item that once focused allows escaping from the focus navigation (using Tab keys)\n      // to the menu navigation using arrow keys.\n      {\n        focus: () => {\n          const menuNavigator = mainMenu.getNavigator();\n          const lastSelectedMenuItem = _classPrivateFieldGet(this, _menuFocusNavigator).getLastMenuPage();\n          mainMenu.focus();\n          if (lastSelectedMenuItem > 0) {\n            menuNavigator.setCurrentPage(lastSelectedMenuItem);\n          } else {\n            menuNavigator.toFirstItem();\n          }\n        }\n      }, ...Array.from(this.components).map(_ref => {\n        let [, component] = _ref;\n        return component.getElements();\n      }).flat()];\n      _classPrivateFieldSet(this, _menuFocusNavigator, createMenuFocusController(mainMenu, focusableItems));\n      const forwardToFocusNavigation = event => {\n        _classPrivateFieldGet(this, _menuFocusNavigator).listen();\n        event.preventDefault();\n        if (isKey(event.keyCode, 'TAB')) {\n          if (event.shiftKey) {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toPreviousItem();\n          } else {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toNextItem();\n          }\n        }\n      };\n      this.components.get('filter_by_value').addLocalHook('listTabKeydown', forwardToFocusNavigation);\n      this.components.get('filter_by_condition').addLocalHook('selectTabKeydown', forwardToFocusNavigation);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    if (this.enabled) {\n      var _this$dropdownMenuPlu;\n      if ((_this$dropdownMenuPlu = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu !== void 0 && _this$dropdownMenuPlu.enabled) {\n        this.dropdownMenuPlugin.menu.clearLocalHooks();\n      }\n      this.components.forEach((component, key) => {\n        component.destroy();\n        this.components.set(key, null);\n      });\n      this.conditionCollection.destroy();\n      this.conditionCollection = null;\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Alt', 'A']],\n      stopPropagation: true,\n      callback: () => {\n        const selection = this.hot.getSelected();\n        this.clearConditions();\n        this.filter();\n        if (selection) {\n          this.hot.selectCells(selection);\n        }\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof Filters#\n   * @function addCondition\n   * @description\n   * Adds condition to the conditions collection at specified column index.\n   *\n   * Possible predefined conditions:\n   *  * `begins_with` - Begins with\n   *  * `between` - Between\n   *  * `by_value` - By value\n   *  * `contains` - Contains\n   *  * `date_after` - After a date\n   *  * `date_before` - Before a date\n   *  * `date_today` - Today\n   *  * `date_tomorrow` - Tomorrow\n   *  * `date_yesterday` - Yesterday\n   *  * `empty` - Empty\n   *  * `ends_with` - Ends with\n   *  * `eq` - Equal\n   *  * `gt` - Greater than\n   *  * `gte` - Greater than or equal\n   *  * `lt` - Less than\n   *  * `lte` - Less than or equal\n   *  * `none` - None (no filter)\n   *  * `not_between` - Not between\n   *  * `not_contains` - Not contains\n   *  * `not_empty` - Not empty\n   *  * `neq` - Not equal.\n   *\n   * Possible operations on collection of conditions:\n   *  * `conjunction` - [**Conjunction**](https://en.wikipedia.org/wiki/Logical_conjunction) on conditions collection (by default), i.e. for such operation: <br/> c1 AND c2 AND c3 AND c4 ... AND cn === TRUE, where c1 ... cn are conditions.\n   *  * `disjunction` - [**Disjunction**](https://en.wikipedia.org/wiki/Logical_disjunction) on conditions collection, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *  * `disjunctionWithExtraCondition` - **Disjunction** on first `n - 1`\\* conditions from collection with an extra requirement computed from the last condition, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn-1 AND cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *\n   * \\* when `n` is collection size; it's used i.e. for one operation introduced from UI (when choosing from filter's drop-down menu two conditions with OR operator between them, mixed with choosing values from the multiple choice select)\n   *\n   * **Note**: Mind that you cannot mix different types of operations (for instance, if you use `conjunction`, use it consequently for a particular column).\n   *\n   * @example\n   * ::: only-for javascript\n   * ```js\n   * const container = document.getElementById('example');\n   * const hot = new Handsontable(container, {\n   *   data: getData(),\n   *   filters: true\n   * });\n   *\n   * // access to filters plugin instance\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * ::: only-for react\n   * ```jsx\n   * const hotRef = useRef(null);\n   *\n   * ...\n   *\n   * <HotTable\n   *   ref={hotRef}\n   *   data={getData()}\n   *   filters={true}\n   * />\n   *\n   * // access to filters plugin instance\n   * const hot = hotRef.current.hotInstance;\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * @param {number} column Visual column index.\n   * @param {string} name Condition short name.\n   * @param {Array} args Condition arguments.\n   * @param {string} [operationId=conjunction] `id` of operation which is performed on the column.\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  addCondition(column, name, args) {\n    let operationId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : OPERATION_AND;\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.addCondition(physicalColumn, {\n      command: {\n        key: name\n      },\n      args\n    }, operationId);\n  }\n\n  /**\n   * Removes conditions at specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  removeConditions(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.removeConditions(physicalColumn);\n  }\n\n  /**\n   * Clears all conditions previously added to the collection for the specified column index or, if the column index\n   * was not passed, clear the conditions for all columns.\n   *\n   * @param {number} [column] Visual column index.\n   */\n  clearConditions(column) {\n    if (column === undefined) {\n      this.conditionCollection.clean();\n    } else {\n      const physicalColumn = this.hot.toPhysicalColumn(column);\n      this.conditionCollection.removeConditions(physicalColumn);\n    }\n  }\n\n  /**\n   * Filters data based on added filter conditions.\n   *\n   * @fires Hooks#beforeFilter\n   * @fires Hooks#afterFilter\n   */\n  filter() {\n    const {\n      navigableHeaders\n    } = this.hot.getSettings();\n    const dataFilter = this._createDataFilter();\n    const needToFilter = !this.conditionCollection.isEmpty();\n    let visibleVisualRows = [];\n    const conditions = this.conditionCollection.exportAllConditions();\n    const allowFiltering = this.hot.runHooks('beforeFilter', conditions);\n    if (allowFiltering !== false) {\n      if (needToFilter) {\n        const trimmedRows = [];\n        this.hot.batchExecution(() => {\n          this.filtersRowsMap.clear();\n          visibleVisualRows = arrayMap(dataFilter.filter(), rowData => rowData.meta.visualRow);\n          const visibleVisualRowsAssertion = createArrayAssertion(visibleVisualRows);\n          rangeEach(this.hot.countSourceRows() - 1, row => {\n            if (!visibleVisualRowsAssertion(row)) {\n              trimmedRows.push(row);\n            }\n          });\n          arrayEach(trimmedRows, physicalRow => {\n            this.filtersRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n        if (!navigableHeaders && !visibleVisualRows.length) {\n          this.hot.deselectCell();\n        }\n      } else {\n        this.filtersRowsMap.clear();\n      }\n    }\n    this.hot.runHooks('afterFilter', conditions);\n    this.hot.view.adjustElementsSize(true);\n    this.hot.render();\n    if (this.hot.selection.isSelected()) {\n      this.hot.selectCell(navigableHeaders ? -1 : 0, this.hot.getSelectedRangeLast().highlight.col);\n    }\n  }\n\n  /**\n   * Gets last selected column index.\n   *\n   * @returns {{visualIndex: number, physicalIndex: number} | null} Returns `null` when a column is\n   * not selected. Otherwise, returns an object with `visualIndex` and `physicalIndex` properties containing\n   * the index of the column.\n   */\n  getSelectedColumn() {\n    var _this$hot$getSelected;\n    const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n    if (!highlight) {\n      return null;\n    }\n    return {\n      visualIndex: highlight.col,\n      physicalIndex: this.hot.toPhysicalColumn(highlight.col)\n    };\n  }\n\n  /**\n   * Returns handsontable source data with cell meta based on current selection.\n   *\n   * @param {number} [column] The physical column index. By default column index accept the value of the selected column.\n   * @returns {Array} Returns array of objects where keys as row index.\n   */\n  getDataMapAtColumn(column) {\n    const visualColumn = this.hot.toVisualColumn(column);\n    const data = [];\n    arrayEach(this.hot.getSourceDataAtCol(visualColumn), (value, rowIndex) => {\n      var _this$hot$getDataAtCe;\n      const {\n        row,\n        col,\n        visualCol,\n        visualRow,\n        type,\n        instance,\n        dateFormat,\n        locale\n      } = this.hot.getCellMeta(rowIndex, visualColumn);\n      const dataValue = (_this$hot$getDataAtCe = this.hot.getDataAtCell(this.hot.toVisualRow(rowIndex), visualColumn)) !== null && _this$hot$getDataAtCe !== void 0 ? _this$hot$getDataAtCe : value;\n      data.push({\n        meta: {\n          row,\n          col,\n          visualCol,\n          visualRow,\n          type,\n          instance,\n          dateFormat,\n          locale\n        },\n        value: toEmptyString(dataValue)\n      });\n    });\n    return data;\n  }\n  /**\n   * Update the condition of ValueComponent, based on the handled changes.\n   *\n   * @private\n   * @param {number} columnIndex Column index of handled ValueComponent condition.\n   */\n  updateValueComponentCondition(columnIndex) {\n    const dataAtCol = this.hot.getDataAtCol(columnIndex);\n    const selectedValues = unifyColumnValues(dataAtCol);\n    this.conditionUpdateObserver.updateStatesAtColumn(columnIndex, selectedValues);\n  }\n\n  /**\n   * Restores components to its saved state.\n   *\n   * @private\n   * @param {Array} components List of components.\n   */\n  restoreComponents(components) {\n    var _this$getSelectedColu;\n    const physicalIndex = (_this$getSelectedColu = this.getSelectedColumn()) === null || _this$getSelectedColu === void 0 ? void 0 : _this$getSelectedColu.physicalIndex;\n    components.forEach(component => {\n      if (component.isHidden()) {\n        return;\n      }\n      component.restoreState(physicalIndex);\n    });\n    this.updateDependentComponentsVisibility();\n  }\n  /**\n   * Get an operation, based on the number and types of arguments (where arguments are states of components).\n   *\n   * @param {string} suggestedOperation Operation which was chosen by user from UI.\n   * @param {object} byConditionState1 State of first condition component.\n   * @param {object} byConditionState2 State of second condition component.\n   * @param {object} byValueState State of value component.\n   * @private\n   * @returns {string}\n   */\n  getOperationBasedOnArguments(suggestedOperation, byConditionState1, byConditionState2, byValueState) {\n    let operation = suggestedOperation;\n    if (operation === OPERATION_OR && byConditionState1.command.key !== CONDITION_NONE && byConditionState2.command.key !== CONDITION_NONE && byValueState.command.key !== CONDITION_NONE) {\n      operation = OPERATION_OR_THEN_VARIABLE;\n    } else if (byValueState.command.key !== CONDITION_NONE) {\n      if (byConditionState1.command.key === CONDITION_NONE || byConditionState2.command.key === CONDITION_NONE) {\n        operation = OPERATION_AND;\n      }\n    }\n    return operation;\n  }\n  /**\n   * Listen to the keyboard input on document body and forward events to instance of Handsontable\n   * created by DropdownMenu plugin.\n   *\n   * @private\n   */\n  setListeningDropdownMenu() {\n    if (this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.setListening();\n    }\n  }\n\n  /**\n   * Updates visibility of some of the components, based on the state of the parent component.\n   *\n   * @private\n   */\n  updateDependentComponentsVisibility() {\n    const component = this.components.get('filter_by_condition');\n    const {\n      command\n    } = component.getState();\n    const componentsToShow = [this.components.get('filter_by_condition2'), this.components.get('filter_operators')];\n    if (command.showOperators) {\n      this.showComponents(...componentsToShow);\n    } else {\n      this.hideComponents(...componentsToShow);\n    }\n  }\n  /**\n   * Creates DataFilter instance based on condition collection.\n   *\n   * @private\n   * @param {ConditionCollection} conditionCollection Condition collection object.\n   * @returns {DataFilter}\n   */\n  _createDataFilter() {\n    let conditionCollection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.conditionCollection;\n    return new DataFilter(conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n  }\n  /**\n   * Returns indexes of passed components inside list of `dropdownMenu` items.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   * @returns {Array}\n   */\n  getIndexesOfComponents() {\n    const indexes = [];\n    if (!this.dropdownMenuPlugin) {\n      return indexes;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n      components[_key] = arguments[_key];\n    }\n    arrayEach(components, component => {\n      arrayEach(menu.menuItems, (item, index) => {\n        if (item.key === component.getMenuItemDescriptor().key) {\n          indexes.push(index);\n        }\n      });\n    });\n    return indexes;\n  }\n\n  /**\n   * Changes visibility of component.\n   *\n   * @private\n   * @param {boolean} visible Determine if components should be visible.\n   * @param {...BaseComponent} components List of components.\n   */\n  changeComponentsVisibility() {\n    let visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!this.dropdownMenuPlugin) {\n      return;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    const hotMenu = menu.hotMenu;\n    const hiddenRows = hotMenu.getPlugin('hiddenRows');\n    for (var _len2 = arguments.length, components = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      components[_key2 - 1] = arguments[_key2];\n    }\n    const indexes = this.getIndexesOfComponents(...components);\n    if (visible) {\n      hiddenRows.showRows(indexes);\n    } else {\n      hiddenRows.hideRows(indexes);\n    }\n    hotMenu.render();\n  }\n\n  /**\n   * Hides components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  hideComponents() {\n    for (var _len3 = arguments.length, components = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      components[_key3] = arguments[_key3];\n    }\n    this.changeComponentsVisibility(false, ...components);\n  }\n\n  /**\n   * Shows components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  showComponents() {\n    for (var _len4 = arguments.length, components = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      components[_key4] = arguments[_key4];\n    }\n    this.changeComponentsVisibility(true, ...components);\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    if (this.enabled) {\n      this.components.forEach((component, key) => {\n        if (component !== null) {\n          component.destroy();\n          this.components.set(key, null);\n        }\n      });\n      this.conditionCollection.destroy();\n      this.conditionUpdateObserver.destroy();\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    super.destroy();\n  }\n}\nfunction _onAfterChange2(changes) {\n  if (changes) {\n    arrayEach(changes, change => {\n      const [, prop] = change;\n      const columnIndex = this.hot.propToCol(prop);\n      if (this.conditionCollection.hasConditions(columnIndex)) {\n        this.updateValueComponentCondition(columnIndex);\n      }\n    });\n  }\n}\nfunction _onAfterDropdownMenuShow2() {\n  this.restoreComponents(Array.from(this.components.values()));\n}\nfunction _onAfterDropdownMenuHide2() {\n  this.components.get('filter_by_condition').getSelectElement().closeOptions();\n  this.components.get('filter_by_condition2').getSelectElement().closeOptions();\n}\nfunction _onAfterDropdownMenuDefaultOptions2(defaultOptions) {\n  defaultOptions.items.push({\n    name: SEPARATOR\n  });\n  this.components.forEach(component => {\n    defaultOptions.items.push(component.getMenuItemDescriptor());\n  });\n}\nfunction _onActionBarSubmit2(submitType) {\n  var _this$dropdownMenuPlu3;\n  if (submitType === 'accept') {\n    const selectedColumn = this.getSelectedColumn();\n    if (selectedColumn === null) {\n      var _this$dropdownMenuPlu2;\n      (_this$dropdownMenuPlu2 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu2 === void 0 || _this$dropdownMenuPlu2.close();\n      return;\n    }\n    const {\n      physicalIndex\n    } = selectedColumn;\n    const byConditionState1 = this.components.get('filter_by_condition').getState();\n    const byConditionState2 = this.components.get('filter_by_condition2').getState();\n    const byValueState = this.components.get('filter_by_value').getState();\n    const operation = this.getOperationBasedOnArguments(this.components.get('filter_operators').getActiveOperationId(), byConditionState1, byConditionState2, byValueState);\n    this.conditionUpdateObserver.groupChanges();\n    let columnStackPosition = this.conditionCollection.getColumnStackPosition(physicalIndex);\n    if (columnStackPosition === -1) {\n      columnStackPosition = undefined;\n    }\n    this.conditionCollection.removeConditions(physicalIndex);\n    if (byConditionState1.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byConditionState1, operation, columnStackPosition);\n      if (byConditionState2.command.key !== CONDITION_NONE) {\n        this.conditionCollection.addCondition(physicalIndex, byConditionState2, operation, columnStackPosition);\n      }\n    }\n    if (byValueState.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byValueState, operation, columnStackPosition);\n    }\n    this.conditionUpdateObserver.flush();\n    this.components.forEach(component => component.saveState(physicalIndex));\n    this.filtersRowsMap.clear();\n    this.filter();\n  }\n  (_this$dropdownMenuPlu3 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu3 === void 0 || _this$dropdownMenuPlu3.close();\n}\nfunction _onComponentChange2(component, command) {\n  this.updateDependentComponentsVisibility();\n  if (component.constructor === ConditionComponent && !command.inputsCount) {\n    this.setListeningDropdownMenu();\n  }\n}\nfunction _onSelectUIClosed2() {\n  this.setListeningDropdownMenu();\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  const physicalColumn = this.hot.toPhysicalColumn(col);\n  if (this.enabled && this.conditionCollection.hasConditions(physicalColumn)) {\n    addClass(TH, 'htFiltersActive');\n  } else {\n    removeClass(TH, 'htFiltersActive');\n  }\n}\nfunction _updateComponents2(conditionsState) {\n  var _this$dropdownMenuPlu4;\n  if (!((_this$dropdownMenuPlu4 = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu4 !== void 0 && _this$dropdownMenuPlu4.enabled)) {\n    return;\n  }\n  const {\n    editedConditionStack: {\n      conditions,\n      column\n    }\n  } = conditionsState;\n  const conditionsByValue = conditions.filter(condition => condition.name === CONDITION_BY_VALUE);\n  const conditionsWithoutByValue = conditions.filter(condition => condition.name !== CONDITION_BY_VALUE);\n  if (conditionsByValue.length >= 2 || conditionsWithoutByValue.length >= 3) {\n    warn(toSingleLine`The filter conditions have been applied properly, but couldn’t be displayed visually.\\x20\n        The overall amount of conditions exceed the capability of the dropdown menu.\\x20\n        For more details see the documentation.`);\n  } else {\n    const operationType = this.conditionCollection.getOperation(column);\n    this.components.get('filter_by_condition').updateState(conditionsWithoutByValue[0], column);\n    this.components.get('filter_by_condition2').updateState(conditionsWithoutByValue[1], column);\n    this.components.get('filter_operators').updateState(operationType, column);\n    this.components.get('filter_by_value').updateState(conditionsState);\n  }\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","privateMap","value","set","privateCollection","has","TypeError","_defineProperty","key","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","Number","_classPrivateFieldSet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorSet","_classPrivateFieldGet","_classApplyDescriptorGet","action","get","_classPrivateMethodGet","fn","BasePlugin","arrayEach","arrayMap","toSingleLine","warn","rangeEach","addClass","removeClass","isKey","SEPARATOR","constants","ConditionComponent","OperatorsComponent","ValueComponent","ActionBarComponent","ConditionCollection","DataFilter","ConditionUpdateObserver","createArrayAssertion","toEmptyString","unifyColumnValues","createMenuFocusController","CONDITION_NONE","CONDITION_BY_VALUE","OPERATION_AND","OPERATION_OR","OPERATION_OR_THEN_VARIABLE","TrimmingMap","PLUGIN_KEY","PLUGIN_PRIORITY","SHORTCUTS_GROUP","_menuFocusNavigator","WeakMap","_onAfterChange","WeakSet","_onAfterDropdownMenuShow","_onAfterDropdownMenuHide","_onAfterDropdownMenuDefaultOptions","_onActionBarSubmit","_onComponentChange","_onSelectUIClosed","_onAfterGetColHeader","_updateComponents","Filters","PLUGIN_DEPS","constructor","hotInstance","Map","hot","addHook","col","TH","_onAfterGetColHeader2","isEnabled","getSettings","enablePlugin","enabled","filtersRowsMap","rowIndexMapper","registerMap","pluginName","dropdownMenuPlugin","getPlugin","dropdownSettings","dropdownMenu","menuContainer","uiContainer","rootDocument","body","addConfirmationHooks","component","addLocalHook","_onActionBarSubmit2","command","_onComponentChange2","filterByConditionLabel","getTranslatedPhrase","FILTERS_DIVS_FILTER_BY_CONDITION","filterValueLabel","FILTERS_DIVS_FILTER_BY_VALUE","components","conditionComponent","id","name","addSeparator","_onSelectUIClosed2","conditionCollection","conditionUpdateObserver","physicalColumn","getDataMapAtColumn","conditionState","_updateComponents2","forEach","show","defaultOptions","_onAfterDropdownMenuDefaultOptions2","_onAfterDropdownMenuShow2","_onAfterDropdownMenuHide2","changes","_onAfterChange2","disablePlugin","mainMenu","menu","focusableItems","focus","menuNavigator","getNavigator","lastSelectedMenuItem","getLastMenuPage","setCurrentPage","toFirstItem","Array","from","map","_ref","getElements","flat","forwardToFocusNavigation","event","listen","preventDefault","keyCode","shiftKey","toPreviousItem","toNextItem","registerShortcuts","_this$dropdownMenuPlu","clearLocalHooks","destroy","unregisterMap","unregisterShortcuts","getShortcutManager","getContext","addShortcut","keys","stopPropagation","callback","selection","getSelected","clearConditions","filter","selectCells","group","removeShortcutsByGroup","addCondition","column","args","operationId","arguments","length","undefined","toPhysicalColumn","removeConditions","clean","navigableHeaders","dataFilter","_createDataFilter","needToFilter","isEmpty","visibleVisualRows","conditions","exportAllConditions","allowFiltering","runHooks","trimmedRows","batchExecution","clear","rowData","meta","visualRow","visibleVisualRowsAssertion","countSourceRows","row","push","physicalRow","setValueAtIndex","deselectCell","view","adjustElementsSize","render","isSelected","selectCell","getSelectedRangeLast","highlight","getSelectedColumn","_this$hot$getSelected","visualIndex","physicalIndex","visualColumn","toVisualColumn","data","getSourceDataAtCol","rowIndex","_this$hot$getDataAtCe","visualCol","type","instance","dateFormat","locale","getCellMeta","dataValue","getDataAtCell","toVisualRow","updateValueComponentCondition","columnIndex","dataAtCol","getDataAtCol","selectedValues","updateStatesAtColumn","restoreComponents","_this$getSelectedColu","isHidden","restoreState","updateDependentComponentsVisibility","getOperationBasedOnArguments","suggestedOperation","byConditionState1","byConditionState2","byValueState","operation","setListeningDropdownMenu","setListening","getState","componentsToShow","showOperators","showComponents","hideComponents","getIndexesOfComponents","indexes","_len","_key","menuItems","item","index","getMenuItemDescriptor","changeComponentsVisibility","visible","hotMenu","hiddenRows","_len2","_key2","showRows","hideRows","_len3","_key3","_len4","_key4","change","prop","propToCol","hasConditions","values","getSelectElement","closeOptions","items","submitType","_this$dropdownMenuPlu3","selectedColumn","_this$dropdownMenuPlu2","close","getActiveOperationId","groupChanges","columnStackPosition","getColumnStackPosition","flush","saveState","inputsCount","conditionsState","_this$dropdownMenuPlu4","editedConditionStack","conditionsByValue","condition","conditionsWithoutByValue","operationType","getOperation","updateState"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/filters/filters.mjs"],"sourcesContent":["import \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayMap } from \"../../helpers/array.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isKey } from \"../../helpers/unicode.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport * as constants from \"../../i18n/constants.mjs\";\nimport { ConditionComponent } from \"./component/condition.mjs\";\nimport { OperatorsComponent } from \"./component/operators.mjs\";\nimport { ValueComponent } from \"./component/value.mjs\";\nimport { ActionBarComponent } from \"./component/actionBar.mjs\";\nimport ConditionCollection from \"./conditionCollection.mjs\";\nimport DataFilter from \"./dataFilter.mjs\";\nimport ConditionUpdateObserver from \"./conditionUpdateObserver.mjs\";\nimport { createArrayAssertion, toEmptyString, unifyColumnValues } from \"./utils.mjs\";\nimport { createMenuFocusController } from \"./menu/focusController.mjs\";\nimport { CONDITION_NONE, CONDITION_BY_VALUE, OPERATION_AND, OPERATION_OR, OPERATION_OR_THEN_VARIABLE } from \"./constants.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nexport const PLUGIN_KEY = 'filters';\nexport const PLUGIN_PRIORITY = 250;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/**\n * @plugin Filters\n * @class Filters\n *\n * @description\n * The plugin allows filtering the table data either by the built-in component or with the API.\n *\n * See [the filtering demo](@/guides/columns/column-filter.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   dropdownMenu: true,\n *   filters: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   colHeaders={true}\n *   rowHeaders={true}\n *   dropdownMenu={true}\n *   filters={true}\n * />\n * ```\n * :::\n */\nvar _menuFocusNavigator = /*#__PURE__*/new WeakMap();\nvar _onAfterChange = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuShow = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuHide = /*#__PURE__*/new WeakSet();\nvar _onAfterDropdownMenuDefaultOptions = /*#__PURE__*/new WeakSet();\nvar _onActionBarSubmit = /*#__PURE__*/new WeakSet();\nvar _onComponentChange = /*#__PURE__*/new WeakSet();\nvar _onSelectUIClosed = /*#__PURE__*/new WeakSet();\nvar _onAfterGetColHeader = /*#__PURE__*/new WeakSet();\nvar _updateComponents = /*#__PURE__*/new WeakSet();\nexport class Filters extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:DropdownMenu', 'plugin:HiddenRows', 'cell-type:checkbox'];\n  }\n\n  /**\n   * Instance of {@link DropdownMenu}.\n   *\n   * @private\n   * @type {DropdownMenu}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n    // One listener for the enable/disable functionality\n    /**\n     * It updates the components state. The state is triggered by ConditionUpdateObserver, which\n     * reacts to any condition added to the condition collection. It may be added through the UI\n     * components or by API call.\n     *\n     * @param {object} conditionsState An object with the state generated by UI components.\n     */\n    _classPrivateMethodInitSpec(this, _updateComponents);\n    /**\n     * On after get column header listener.\n     *\n     * @param {number} col Visual column index.\n     * @param {HTMLTableCellElement} TH Header's TH element.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterGetColHeader);\n    /**\n     * On component SelectUI closed listener.\n     */\n    _classPrivateMethodInitSpec(this, _onSelectUIClosed);\n    /**\n     * On component change listener.\n     *\n     * @param {BaseComponent} component Component inheriting BaseComponent.\n     * @param {object} command Menu item object (command).\n     */\n    _classPrivateMethodInitSpec(this, _onComponentChange);\n    /**\n     * On action bar submit listener.\n     *\n     * @private\n     * @param {string} submitType The submit type.\n     */\n    _classPrivateMethodInitSpec(this, _onActionBarSubmit);\n    /**\n     * After dropdown menu default options listener.\n     *\n     * @param {object} defaultOptions ContextMenu default item options.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuDefaultOptions);\n    /**\n     * After dropdown menu hide listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuHide);\n    /**\n     * After dropdown menu show listener.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterDropdownMenuShow);\n    /**\n     * `afterChange` listener.\n     *\n     * @param {Array} changes Array of changes.\n     */\n    _classPrivateMethodInitSpec(this, _onAfterChange);\n    _defineProperty(this, \"dropdownMenuPlugin\", null);\n    /**\n     * Instance of {@link ConditionCollection}.\n     *\n     * @private\n     * @type {ConditionCollection}\n     */\n    _defineProperty(this, \"conditionCollection\", null);\n    /**\n     * Instance of {@link ConditionUpdateObserver}.\n     *\n     * @private\n     * @type {ConditionUpdateObserver}\n     */\n    _defineProperty(this, \"conditionUpdateObserver\", null);\n    /**\n     * Map, where key is component identifier and value represent `BaseComponent` element or it derivatives.\n     *\n     * @private\n     * @type {Map}\n     */\n    _defineProperty(this, \"components\", new Map([['filter_by_condition', null], ['filter_operators', null], ['filter_by_condition2', null], ['filter_by_value', null], ['filter_action_bar', null]]));\n    /**\n     * Map of skipped rows by plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n    _defineProperty(this, \"filtersRowsMap\", null);\n    /**\n     * Menu focus navigator allows switching the focus position through Tab and Shift Tab keys.\n     *\n     * @type {MenuFocusNavigator|undefined}\n     */\n    _classPrivateFieldInitSpec(this, _menuFocusNavigator, {\n      writable: true,\n      value: void 0\n    });\n    this.hot.addHook('afterGetColHeader', (col, TH) => _classPrivateMethodGet(this, _onAfterGetColHeader, _onAfterGetColHeader2).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Filters#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    /* eslint-disable no-unneeded-ternary */\n    return this.hot.getSettings()[PLUGIN_KEY] ? true : false;\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    this.filtersRowsMap = this.hot.rowIndexMapper.registerMap(this.pluginName, new TrimmingMap());\n    this.dropdownMenuPlugin = this.hot.getPlugin('dropdownMenu');\n    const dropdownSettings = this.hot.getSettings().dropdownMenu;\n    const menuContainer = dropdownSettings && dropdownSettings.uiContainer || this.hot.rootDocument.body;\n    const addConfirmationHooks = component => {\n      component.addLocalHook('accept', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'accept'));\n      component.addLocalHook('cancel', () => _classPrivateMethodGet(this, _onActionBarSubmit, _onActionBarSubmit2).call(this, 'cancel'));\n      component.addLocalHook('change', command => _classPrivateMethodGet(this, _onComponentChange, _onComponentChange2).call(this, component, command));\n      return component;\n    };\n    const filterByConditionLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_CONDITION)}:`;\n    const filterValueLabel = () => `${this.hot.getTranslatedPhrase(constants.FILTERS_DIVS_FILTER_BY_VALUE)}:`;\n    if (!this.components.get('filter_by_condition')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition',\n        name: filterByConditionLabel,\n        addSeparator: false,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_operators')) {\n      this.components.set('filter_operators', new OperatorsComponent(this.hot, {\n        id: 'filter_operators',\n        name: 'Operators'\n      }));\n    }\n    if (!this.components.get('filter_by_condition2')) {\n      const conditionComponent = new ConditionComponent(this.hot, {\n        id: 'filter_by_condition2',\n        name: '',\n        addSeparator: true,\n        menuContainer\n      });\n      conditionComponent.addLocalHook('afterClose', () => _classPrivateMethodGet(this, _onSelectUIClosed, _onSelectUIClosed2).call(this));\n      this.components.set('filter_by_condition2', addConfirmationHooks(conditionComponent));\n    }\n    if (!this.components.get('filter_by_value')) {\n      this.components.set('filter_by_value', addConfirmationHooks(new ValueComponent(this.hot, {\n        id: 'filter_by_value',\n        name: filterValueLabel\n      })));\n    }\n    if (!this.components.get('filter_action_bar')) {\n      this.components.set('filter_action_bar', addConfirmationHooks(new ActionBarComponent(this.hot, {\n        id: 'filter_action_bar',\n        name: 'Action bar'\n      })));\n    }\n    if (!this.conditionCollection) {\n      this.conditionCollection = new ConditionCollection(this.hot);\n    }\n    if (!this.conditionUpdateObserver) {\n      this.conditionUpdateObserver = new ConditionUpdateObserver(this.hot, this.conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n      this.conditionUpdateObserver.addLocalHook('update', conditionState => _classPrivateMethodGet(this, _updateComponents, _updateComponents2).call(this, conditionState));\n    }\n    this.components.forEach(component => component.show());\n    this.addHook('afterDropdownMenuDefaultOptions', defaultOptions => _classPrivateMethodGet(this, _onAfterDropdownMenuDefaultOptions, _onAfterDropdownMenuDefaultOptions2).call(this, defaultOptions));\n    this.addHook('afterDropdownMenuShow', () => _classPrivateMethodGet(this, _onAfterDropdownMenuShow, _onAfterDropdownMenuShow2).call(this));\n    this.addHook('afterDropdownMenuHide', () => _classPrivateMethodGet(this, _onAfterDropdownMenuHide, _onAfterDropdownMenuHide2).call(this));\n    this.addHook('afterChange', changes => _classPrivateMethodGet(this, _onAfterChange, _onAfterChange2).call(this, changes));\n\n    // Temp. solution (extending menu items bug in contextMenu/dropdownMenu)\n    if (this.hot.getSettings().dropdownMenu && this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.disablePlugin();\n      this.dropdownMenuPlugin.enablePlugin();\n    }\n    if (!_classPrivateFieldGet(this, _menuFocusNavigator) && this.dropdownMenuPlugin.enabled) {\n      const mainMenu = this.dropdownMenuPlugin.menu;\n      const focusableItems = [\n      // A fake menu item that once focused allows escaping from the focus navigation (using Tab keys)\n      // to the menu navigation using arrow keys.\n      {\n        focus: () => {\n          const menuNavigator = mainMenu.getNavigator();\n          const lastSelectedMenuItem = _classPrivateFieldGet(this, _menuFocusNavigator).getLastMenuPage();\n          mainMenu.focus();\n          if (lastSelectedMenuItem > 0) {\n            menuNavigator.setCurrentPage(lastSelectedMenuItem);\n          } else {\n            menuNavigator.toFirstItem();\n          }\n        }\n      }, ...Array.from(this.components).map(_ref => {\n        let [, component] = _ref;\n        return component.getElements();\n      }).flat()];\n      _classPrivateFieldSet(this, _menuFocusNavigator, createMenuFocusController(mainMenu, focusableItems));\n      const forwardToFocusNavigation = event => {\n        _classPrivateFieldGet(this, _menuFocusNavigator).listen();\n        event.preventDefault();\n        if (isKey(event.keyCode, 'TAB')) {\n          if (event.shiftKey) {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toPreviousItem();\n          } else {\n            _classPrivateFieldGet(this, _menuFocusNavigator).toNextItem();\n          }\n        }\n      };\n      this.components.get('filter_by_value').addLocalHook('listTabKeydown', forwardToFocusNavigation);\n      this.components.get('filter_by_condition').addLocalHook('selectTabKeydown', forwardToFocusNavigation);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    if (this.enabled) {\n      var _this$dropdownMenuPlu;\n      if ((_this$dropdownMenuPlu = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu !== void 0 && _this$dropdownMenuPlu.enabled) {\n        this.dropdownMenuPlugin.menu.clearLocalHooks();\n      }\n      this.components.forEach((component, key) => {\n        component.destroy();\n        this.components.set(key, null);\n      });\n      this.conditionCollection.destroy();\n      this.conditionCollection = null;\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Alt', 'A']],\n      stopPropagation: true,\n      callback: () => {\n        const selection = this.hot.getSelected();\n        this.clearConditions();\n        this.filter();\n        if (selection) {\n          this.hot.selectCells(selection);\n        }\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for clearing the filters.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /* eslint-disable jsdoc/require-description-complete-sentence */\n  /**\n   * @memberof Filters#\n   * @function addCondition\n   * @description\n   * Adds condition to the conditions collection at specified column index.\n   *\n   * Possible predefined conditions:\n   *  * `begins_with` - Begins with\n   *  * `between` - Between\n   *  * `by_value` - By value\n   *  * `contains` - Contains\n   *  * `date_after` - After a date\n   *  * `date_before` - Before a date\n   *  * `date_today` - Today\n   *  * `date_tomorrow` - Tomorrow\n   *  * `date_yesterday` - Yesterday\n   *  * `empty` - Empty\n   *  * `ends_with` - Ends with\n   *  * `eq` - Equal\n   *  * `gt` - Greater than\n   *  * `gte` - Greater than or equal\n   *  * `lt` - Less than\n   *  * `lte` - Less than or equal\n   *  * `none` - None (no filter)\n   *  * `not_between` - Not between\n   *  * `not_contains` - Not contains\n   *  * `not_empty` - Not empty\n   *  * `neq` - Not equal.\n   *\n   * Possible operations on collection of conditions:\n   *  * `conjunction` - [**Conjunction**](https://en.wikipedia.org/wiki/Logical_conjunction) on conditions collection (by default), i.e. for such operation: <br/> c1 AND c2 AND c3 AND c4 ... AND cn === TRUE, where c1 ... cn are conditions.\n   *  * `disjunction` - [**Disjunction**](https://en.wikipedia.org/wiki/Logical_disjunction) on conditions collection, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *  * `disjunctionWithExtraCondition` - **Disjunction** on first `n - 1`\\* conditions from collection with an extra requirement computed from the last condition, i.e. for such operation: <br/> c1 OR c2 OR c3 OR c4 ... OR cn-1 AND cn === TRUE, where c1, c2, c3, c4 ... cn are conditions.\n   *\n   * \\* when `n` is collection size; it's used i.e. for one operation introduced from UI (when choosing from filter's drop-down menu two conditions with OR operator between them, mixed with choosing values from the multiple choice select)\n   *\n   * **Note**: Mind that you cannot mix different types of operations (for instance, if you use `conjunction`, use it consequently for a particular column).\n   *\n   * @example\n   * ::: only-for javascript\n   * ```js\n   * const container = document.getElementById('example');\n   * const hot = new Handsontable(container, {\n   *   data: getData(),\n   *   filters: true\n   * });\n   *\n   * // access to filters plugin instance\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * ::: only-for react\n   * ```jsx\n   * const hotRef = useRef(null);\n   *\n   * ...\n   *\n   * <HotTable\n   *   ref={hotRef}\n   *   data={getData()}\n   *   filters={true}\n   * />\n   *\n   * // access to filters plugin instance\n   * const hot = hotRef.current.hotInstance;\n   * const filtersPlugin = hot.getPlugin('filters');\n   *\n   * // add filter \"Greater than\" 95 to column at index 1\n   * filtersPlugin.addCondition(1, 'gt', [95]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"By value\" to column at index 1\n   * // in this case all value's that don't match will be filtered.\n   * filtersPlugin.addCondition(1, 'by_value', [['ing', 'ed', 'as', 'on']]);\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" AND \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'conjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'conjunction');\n   * filtersPlugin.filter();\n   *\n   * // add filter \"Begins with\" with value \"de\" OR \"Not contains\" with value \"ing\"\n   * filtersPlugin.addCondition(1, 'begins_with', ['de'], 'disjunction');\n   * filtersPlugin.addCondition(1, 'not_contains', ['ing'], 'disjunction');\n   * filtersPlugin.filter();\n   * ```\n   * :::\n   *\n   * @param {number} column Visual column index.\n   * @param {string} name Condition short name.\n   * @param {Array} args Condition arguments.\n   * @param {string} [operationId=conjunction] `id` of operation which is performed on the column.\n   */\n  /* eslint-enable jsdoc/require-description-complete-sentence */\n  addCondition(column, name, args) {\n    let operationId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : OPERATION_AND;\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.addCondition(physicalColumn, {\n      command: {\n        key: name\n      },\n      args\n    }, operationId);\n  }\n\n  /**\n   * Removes conditions at specified column index.\n   *\n   * @param {number} column Visual column index.\n   */\n  removeConditions(column) {\n    const physicalColumn = this.hot.toPhysicalColumn(column);\n    this.conditionCollection.removeConditions(physicalColumn);\n  }\n\n  /**\n   * Clears all conditions previously added to the collection for the specified column index or, if the column index\n   * was not passed, clear the conditions for all columns.\n   *\n   * @param {number} [column] Visual column index.\n   */\n  clearConditions(column) {\n    if (column === undefined) {\n      this.conditionCollection.clean();\n    } else {\n      const physicalColumn = this.hot.toPhysicalColumn(column);\n      this.conditionCollection.removeConditions(physicalColumn);\n    }\n  }\n\n  /**\n   * Filters data based on added filter conditions.\n   *\n   * @fires Hooks#beforeFilter\n   * @fires Hooks#afterFilter\n   */\n  filter() {\n    const {\n      navigableHeaders\n    } = this.hot.getSettings();\n    const dataFilter = this._createDataFilter();\n    const needToFilter = !this.conditionCollection.isEmpty();\n    let visibleVisualRows = [];\n    const conditions = this.conditionCollection.exportAllConditions();\n    const allowFiltering = this.hot.runHooks('beforeFilter', conditions);\n    if (allowFiltering !== false) {\n      if (needToFilter) {\n        const trimmedRows = [];\n        this.hot.batchExecution(() => {\n          this.filtersRowsMap.clear();\n          visibleVisualRows = arrayMap(dataFilter.filter(), rowData => rowData.meta.visualRow);\n          const visibleVisualRowsAssertion = createArrayAssertion(visibleVisualRows);\n          rangeEach(this.hot.countSourceRows() - 1, row => {\n            if (!visibleVisualRowsAssertion(row)) {\n              trimmedRows.push(row);\n            }\n          });\n          arrayEach(trimmedRows, physicalRow => {\n            this.filtersRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n        if (!navigableHeaders && !visibleVisualRows.length) {\n          this.hot.deselectCell();\n        }\n      } else {\n        this.filtersRowsMap.clear();\n      }\n    }\n    this.hot.runHooks('afterFilter', conditions);\n    this.hot.view.adjustElementsSize(true);\n    this.hot.render();\n    if (this.hot.selection.isSelected()) {\n      this.hot.selectCell(navigableHeaders ? -1 : 0, this.hot.getSelectedRangeLast().highlight.col);\n    }\n  }\n\n  /**\n   * Gets last selected column index.\n   *\n   * @returns {{visualIndex: number, physicalIndex: number} | null} Returns `null` when a column is\n   * not selected. Otherwise, returns an object with `visualIndex` and `physicalIndex` properties containing\n   * the index of the column.\n   */\n  getSelectedColumn() {\n    var _this$hot$getSelected;\n    const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n    if (!highlight) {\n      return null;\n    }\n    return {\n      visualIndex: highlight.col,\n      physicalIndex: this.hot.toPhysicalColumn(highlight.col)\n    };\n  }\n\n  /**\n   * Returns handsontable source data with cell meta based on current selection.\n   *\n   * @param {number} [column] The physical column index. By default column index accept the value of the selected column.\n   * @returns {Array} Returns array of objects where keys as row index.\n   */\n  getDataMapAtColumn(column) {\n    const visualColumn = this.hot.toVisualColumn(column);\n    const data = [];\n    arrayEach(this.hot.getSourceDataAtCol(visualColumn), (value, rowIndex) => {\n      var _this$hot$getDataAtCe;\n      const {\n        row,\n        col,\n        visualCol,\n        visualRow,\n        type,\n        instance,\n        dateFormat,\n        locale\n      } = this.hot.getCellMeta(rowIndex, visualColumn);\n      const dataValue = (_this$hot$getDataAtCe = this.hot.getDataAtCell(this.hot.toVisualRow(rowIndex), visualColumn)) !== null && _this$hot$getDataAtCe !== void 0 ? _this$hot$getDataAtCe : value;\n      data.push({\n        meta: {\n          row,\n          col,\n          visualCol,\n          visualRow,\n          type,\n          instance,\n          dateFormat,\n          locale\n        },\n        value: toEmptyString(dataValue)\n      });\n    });\n    return data;\n  }\n  /**\n   * Update the condition of ValueComponent, based on the handled changes.\n   *\n   * @private\n   * @param {number} columnIndex Column index of handled ValueComponent condition.\n   */\n  updateValueComponentCondition(columnIndex) {\n    const dataAtCol = this.hot.getDataAtCol(columnIndex);\n    const selectedValues = unifyColumnValues(dataAtCol);\n    this.conditionUpdateObserver.updateStatesAtColumn(columnIndex, selectedValues);\n  }\n\n  /**\n   * Restores components to its saved state.\n   *\n   * @private\n   * @param {Array} components List of components.\n   */\n  restoreComponents(components) {\n    var _this$getSelectedColu;\n    const physicalIndex = (_this$getSelectedColu = this.getSelectedColumn()) === null || _this$getSelectedColu === void 0 ? void 0 : _this$getSelectedColu.physicalIndex;\n    components.forEach(component => {\n      if (component.isHidden()) {\n        return;\n      }\n      component.restoreState(physicalIndex);\n    });\n    this.updateDependentComponentsVisibility();\n  }\n  /**\n   * Get an operation, based on the number and types of arguments (where arguments are states of components).\n   *\n   * @param {string} suggestedOperation Operation which was chosen by user from UI.\n   * @param {object} byConditionState1 State of first condition component.\n   * @param {object} byConditionState2 State of second condition component.\n   * @param {object} byValueState State of value component.\n   * @private\n   * @returns {string}\n   */\n  getOperationBasedOnArguments(suggestedOperation, byConditionState1, byConditionState2, byValueState) {\n    let operation = suggestedOperation;\n    if (operation === OPERATION_OR && byConditionState1.command.key !== CONDITION_NONE && byConditionState2.command.key !== CONDITION_NONE && byValueState.command.key !== CONDITION_NONE) {\n      operation = OPERATION_OR_THEN_VARIABLE;\n    } else if (byValueState.command.key !== CONDITION_NONE) {\n      if (byConditionState1.command.key === CONDITION_NONE || byConditionState2.command.key === CONDITION_NONE) {\n        operation = OPERATION_AND;\n      }\n    }\n    return operation;\n  }\n  /**\n   * Listen to the keyboard input on document body and forward events to instance of Handsontable\n   * created by DropdownMenu plugin.\n   *\n   * @private\n   */\n  setListeningDropdownMenu() {\n    if (this.dropdownMenuPlugin) {\n      this.dropdownMenuPlugin.setListening();\n    }\n  }\n\n  /**\n   * Updates visibility of some of the components, based on the state of the parent component.\n   *\n   * @private\n   */\n  updateDependentComponentsVisibility() {\n    const component = this.components.get('filter_by_condition');\n    const {\n      command\n    } = component.getState();\n    const componentsToShow = [this.components.get('filter_by_condition2'), this.components.get('filter_operators')];\n    if (command.showOperators) {\n      this.showComponents(...componentsToShow);\n    } else {\n      this.hideComponents(...componentsToShow);\n    }\n  }\n  /**\n   * Creates DataFilter instance based on condition collection.\n   *\n   * @private\n   * @param {ConditionCollection} conditionCollection Condition collection object.\n   * @returns {DataFilter}\n   */\n  _createDataFilter() {\n    let conditionCollection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.conditionCollection;\n    return new DataFilter(conditionCollection, physicalColumn => this.getDataMapAtColumn(physicalColumn));\n  }\n  /**\n   * Returns indexes of passed components inside list of `dropdownMenu` items.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   * @returns {Array}\n   */\n  getIndexesOfComponents() {\n    const indexes = [];\n    if (!this.dropdownMenuPlugin) {\n      return indexes;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n      components[_key] = arguments[_key];\n    }\n    arrayEach(components, component => {\n      arrayEach(menu.menuItems, (item, index) => {\n        if (item.key === component.getMenuItemDescriptor().key) {\n          indexes.push(index);\n        }\n      });\n    });\n    return indexes;\n  }\n\n  /**\n   * Changes visibility of component.\n   *\n   * @private\n   * @param {boolean} visible Determine if components should be visible.\n   * @param {...BaseComponent} components List of components.\n   */\n  changeComponentsVisibility() {\n    let visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!this.dropdownMenuPlugin) {\n      return;\n    }\n    const menu = this.dropdownMenuPlugin.menu;\n    const hotMenu = menu.hotMenu;\n    const hiddenRows = hotMenu.getPlugin('hiddenRows');\n    for (var _len2 = arguments.length, components = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      components[_key2 - 1] = arguments[_key2];\n    }\n    const indexes = this.getIndexesOfComponents(...components);\n    if (visible) {\n      hiddenRows.showRows(indexes);\n    } else {\n      hiddenRows.hideRows(indexes);\n    }\n    hotMenu.render();\n  }\n\n  /**\n   * Hides components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  hideComponents() {\n    for (var _len3 = arguments.length, components = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      components[_key3] = arguments[_key3];\n    }\n    this.changeComponentsVisibility(false, ...components);\n  }\n\n  /**\n   * Shows components of filters `dropdownMenu`.\n   *\n   * @private\n   * @param {...BaseComponent} components List of components.\n   */\n  showComponents() {\n    for (var _len4 = arguments.length, components = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      components[_key4] = arguments[_key4];\n    }\n    this.changeComponentsVisibility(true, ...components);\n  }\n\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    if (this.enabled) {\n      this.components.forEach((component, key) => {\n        if (component !== null) {\n          component.destroy();\n          this.components.set(key, null);\n        }\n      });\n      this.conditionCollection.destroy();\n      this.conditionUpdateObserver.destroy();\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n    }\n    super.destroy();\n  }\n}\nfunction _onAfterChange2(changes) {\n  if (changes) {\n    arrayEach(changes, change => {\n      const [, prop] = change;\n      const columnIndex = this.hot.propToCol(prop);\n      if (this.conditionCollection.hasConditions(columnIndex)) {\n        this.updateValueComponentCondition(columnIndex);\n      }\n    });\n  }\n}\nfunction _onAfterDropdownMenuShow2() {\n  this.restoreComponents(Array.from(this.components.values()));\n}\nfunction _onAfterDropdownMenuHide2() {\n  this.components.get('filter_by_condition').getSelectElement().closeOptions();\n  this.components.get('filter_by_condition2').getSelectElement().closeOptions();\n}\nfunction _onAfterDropdownMenuDefaultOptions2(defaultOptions) {\n  defaultOptions.items.push({\n    name: SEPARATOR\n  });\n  this.components.forEach(component => {\n    defaultOptions.items.push(component.getMenuItemDescriptor());\n  });\n}\nfunction _onActionBarSubmit2(submitType) {\n  var _this$dropdownMenuPlu3;\n  if (submitType === 'accept') {\n    const selectedColumn = this.getSelectedColumn();\n    if (selectedColumn === null) {\n      var _this$dropdownMenuPlu2;\n      (_this$dropdownMenuPlu2 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu2 === void 0 || _this$dropdownMenuPlu2.close();\n      return;\n    }\n    const {\n      physicalIndex\n    } = selectedColumn;\n    const byConditionState1 = this.components.get('filter_by_condition').getState();\n    const byConditionState2 = this.components.get('filter_by_condition2').getState();\n    const byValueState = this.components.get('filter_by_value').getState();\n    const operation = this.getOperationBasedOnArguments(this.components.get('filter_operators').getActiveOperationId(), byConditionState1, byConditionState2, byValueState);\n    this.conditionUpdateObserver.groupChanges();\n    let columnStackPosition = this.conditionCollection.getColumnStackPosition(physicalIndex);\n    if (columnStackPosition === -1) {\n      columnStackPosition = undefined;\n    }\n    this.conditionCollection.removeConditions(physicalIndex);\n    if (byConditionState1.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byConditionState1, operation, columnStackPosition);\n      if (byConditionState2.command.key !== CONDITION_NONE) {\n        this.conditionCollection.addCondition(physicalIndex, byConditionState2, operation, columnStackPosition);\n      }\n    }\n    if (byValueState.command.key !== CONDITION_NONE) {\n      this.conditionCollection.addCondition(physicalIndex, byValueState, operation, columnStackPosition);\n    }\n    this.conditionUpdateObserver.flush();\n    this.components.forEach(component => component.saveState(physicalIndex));\n    this.filtersRowsMap.clear();\n    this.filter();\n  }\n  (_this$dropdownMenuPlu3 = this.dropdownMenuPlugin) === null || _this$dropdownMenuPlu3 === void 0 || _this$dropdownMenuPlu3.close();\n}\nfunction _onComponentChange2(component, command) {\n  this.updateDependentComponentsVisibility();\n  if (component.constructor === ConditionComponent && !command.inputsCount) {\n    this.setListeningDropdownMenu();\n  }\n}\nfunction _onSelectUIClosed2() {\n  this.setListeningDropdownMenu();\n}\nfunction _onAfterGetColHeader2(col, TH) {\n  const physicalColumn = this.hot.toPhysicalColumn(col);\n  if (this.enabled && this.conditionCollection.hasConditions(physicalColumn)) {\n    addClass(TH, 'htFiltersActive');\n  } else {\n    removeClass(TH, 'htFiltersActive');\n  }\n}\nfunction _updateComponents2(conditionsState) {\n  var _this$dropdownMenuPlu4;\n  if (!((_this$dropdownMenuPlu4 = this.dropdownMenuPlugin) !== null && _this$dropdownMenuPlu4 !== void 0 && _this$dropdownMenuPlu4.enabled)) {\n    return;\n  }\n  const {\n    editedConditionStack: {\n      conditions,\n      column\n    }\n  } = conditionsState;\n  const conditionsByValue = conditions.filter(condition => condition.name === CONDITION_BY_VALUE);\n  const conditionsWithoutByValue = conditions.filter(condition => condition.name !== CONDITION_BY_VALUE);\n  if (conditionsByValue.length >= 2 || conditionsWithoutByValue.length >= 3) {\n    warn(toSingleLine`The filter conditions have been applied properly, but couldn’t be displayed visually.\\x20\n        The overall amount of conditions exceed the capability of the dropdown menu.\\x20\n        For more details see the documentation.`);\n  } else {\n    const operationType = this.conditionCollection.getOperation(column);\n    this.components.get('filter_by_condition').updateState(conditionsWithoutByValue[0], column);\n    this.components.get('filter_by_condition2').updateState(conditionsWithoutByValue[1], column);\n    this.components.get('filter_operators').updateState(operationType, column);\n    this.components.get('filter_by_value').updateState(conditionsState);\n  }\n}"],"mappings":"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AC1B,KAAK,CAAC9B,aAAa,EAAE;EACvB;;EAEA;AACF;AACA;AACA;AACA;EACEyB,iBAAiB,GAAG;IAClB,IAAI,CAAC7E,GAAG,CAACmF,kBAAkB,EAAE,CAACC,UAAU,CAAC,MAAM,CAAC,CAACC,WAAW,CAAC;MAC3DC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;MACpBC,eAAe,EAAE,IAAI;MACrBC,QAAQ,EAAE,MAAM;QACd,MAAMC,SAAS,GAAG,IAAI,CAACzF,GAAG,CAAC0F,WAAW,EAAE;QACxC,IAAI,CAACC,eAAe,EAAE;QACtB,IAAI,CAACC,MAAM,EAAE;QACb,IAAIH,SAAS,EAAE;UACb,IAAI,CAACzF,GAAG,CAAC6F,WAAW,CAACJ,SAAS,CAAC;QACjC;MACF,CAAC;MACDK,KAAK,EAAEhH;IACT,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEoG,mBAAmB,GAAG;IACpB,IAAI,CAAClF,GAAG,CAACmF,kBAAkB,EAAE,CAACC,UAAU,CAAC,MAAM,CAAC,CAACW,sBAAsB,CAACjH,eAAe,CAAC;EAC1F;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}