{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/button\";\nfunction CuentasEfectivosEditComponent_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-option\", 33);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var monedas_r2 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"value\", monedas_r2.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", monedas_r2.codigo, \" \");\n  }\n}\nvar CuentasEfectivosEditComponent = /** @class */function () {\n  function CuentasEfectivosEditComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr, datacuentasefectivoEdit) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.datacuentasefectivoEdit = datacuentasefectivoEdit;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.numLibrBanco = [];\n    this.cuentas_bancarias = [];\n    this.userLogueado = [];\n    this.moneda = [];\n    this.cuentas_efectivas_edit = [];\n    this.inputValue = null;\n    this.ventana = \"cuentas_efectivo-create\";\n    this.detalle = \"cuentas_efectivo-detalle\";\n    this.tipo = \"transaccion-cuentas_efectivo-POST\";\n    this.cuentas_efectivas_edit = datacuentasefectivoEdit.datacuentasefectivoEdit;\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  CuentasEfectivosEditComponent.prototype.ngOnInit = function () {\n    this.getMoneda();\n  };\n  CuentasEfectivosEditComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.cuentas_efectivas_edit.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      balance: [this.dataform.balance, Validators.compose([Validators.required])],\n      codmoneda: [this.dataform.codmoneda],\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\n      tipo_movimiento: [this.dataform.tipo_movimiento],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  CuentasEfectivosEditComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:- /fondos/mant/fncuenta/\";\n    return this.api.update(\"/fondos/mant/fncuenta/\" + this.userConn + \"/\" + this.cuentas_efectivas_edit.id, data).subscribe({\n      next: function (datav) {\n        _this.numLibrBanco = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  CuentasEfectivosEditComponent.prototype.getMoneda = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET -/fondos/mant/fncuenta/\";\n    return this.api.getAll('/seg_adm/mant/admoneda/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.moneda = datav;\n        //console.log( this.moneda);\n      },\n\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  CuentasEfectivosEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  CuentasEfectivosEditComponent.Éµfac = function CuentasEfectivosEditComponent_Factory(t) {\n    return new (t || CuentasEfectivosEditComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(MAT_DIALOG_DATA));\n  };\n  CuentasEfectivosEditComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: CuentasEfectivosEditComponent,\n    selectors: [[\"app-cuentas-efectivos-edit\"]],\n    decls: 56,\n    vars: 11,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-9\"], [\"appearance\", \"outline\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"0.01\", \"matInput\", \"\", \"formControlName\", \"balance\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-3\"], [\"formControlName\", \"codmoneda\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"accent\"], [\"matInput\", \"\", \"formControlName\", \"fecha\", 3, \"ngModel\", \"matDatepicker\", \"ngModelChange\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"color\", \"primary\"], [\"picker2\", \"\"], [1, \"row\"], [1, \"col\"], [\"formControlName\", \"tipo_movimiento\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"INGRESO\"], [\"value\", \"EGRESO\"], [\"value\", \"TRASPASO\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [3, \"value\"]],\n    template: function CuentasEfectivosEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Editar Numeraci\\u00F3n de Libros de Bancos \");\n        i0.ÉµÉµelementStart(4, \"strong\");\n        i0.ÉµÉµtext(5);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 3);\n        i0.ÉµÉµtext(7, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function CuentasEfectivosEditComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"mat-form-field\", 9)(14, \"mat-label\");\n        i0.ÉµÉµtext(15, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(16, \"input\", 10);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivosEditComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.cuentas_efectivas_edit.descripcion = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(17, \"div\", 7)(18, \"div\", 11)(19, \"mat-form-field\", 12)(20, \"mat-label\");\n        i0.ÉµÉµtext(21, \"Balance Apertura\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(22, \"input\", 13);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivosEditComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.cuentas_efectivas_edit.balance = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(23, \"div\", 14)(24, \"mat-form-field\", 12)(25, \"mat-select\", 15);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivosEditComponent_Template_mat_select_ngModelChange_25_listener($event) {\n          return ctx.cuentas_efectivas_edit.codmoneda = $event;\n        });\n        i0.ÉµÉµtemplate(26, CuentasEfectivosEditComponent_mat_option_26_Template, 2, 2, \"mat-option\", 16);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(27, \"div\", 7)(28, \"div\", 8)(29, \"mat-form-field\", 17)(30, \"mat-label\");\n        i0.ÉµÉµtext(31, \"Fecha Balance\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(32, \"input\", 18);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivosEditComponent_Template_input_ngModelChange_32_listener($event) {\n          return ctx.cuentas_efectivas_edit.fecha = $event;\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(33, \"mat-datepicker-toggle\", 19)(34, \"mat-datepicker\", 20, 21);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(36, \"div\", 22)(37, \"div\", 23)(38, \"mat-form-field\", 12)(39, \"mat-label\");\n        i0.ÉµÉµtext(40, \"Tipo de Movimiento\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(41, \"mat-select\", 24);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivosEditComponent_Template_mat_select_ngModelChange_41_listener($event) {\n          return ctx.cuentas_efectivas_edit.tipo_movimiento = $event;\n        });\n        i0.ÉµÉµelementStart(42, \"mat-option\", 25);\n        i0.ÉµÉµtext(43, \"INGRESO\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(44, \"mat-option\", 26);\n        i0.ÉµÉµtext(45, \"EGRESO\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(46, \"mat-option\", 27);\n        i0.ÉµÉµtext(47, \"TRASPASO \");\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(48, \"div\", 28)(49, \"a\", 29);\n        i0.ÉµÉµlistener(\"click\", function CuentasEfectivosEditComponent_Template_a_click_49_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(50, \"i\", 30);\n        i0.ÉµÉµtext(51, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(52, \"\\u00A0 \");\n        i0.ÉµÉµelementStart(53, \"button\", 31);\n        i0.ÉµÉµelement(54, \"i\", 32);\n        i0.ÉµÉµtext(55, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        var _r1 = i0.ÉµÉµreference(35);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµtextInterpolate(ctx.cuentas_efectivas_edit.id);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cuentas_efectivas_edit.descripcion);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cuentas_efectivas_edit.balance);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cuentas_efectivas_edit.codmoneda);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.moneda);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cuentas_efectivas_edit.fecha)(\"matDatepicker\", _r1);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"for\", _r1);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cuentas_efectivas_edit.tipo_movimiento);\n        i0.ÉµÉµadvance(12);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i10.MatSelect, i11.MatOption, i12.MatInput, i13.MatDatepicker, i13.MatDatepickerInput, i13.MatDatepickerToggle, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i14.MatAnchor, i14.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 10px !important;\\n  padding-bottom: 0px !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/fondos/cuentas-efectivo/cuentas-efectivos-edit/cuentas-efectivos-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2ZvbmRvcy9jdWVudGFzLWVmZWN0aXZvL2N1ZW50YXMtZWZlY3Rpdm9zLWVkaXQvY3VlbnRhcy1lZmVjdGl2b3MtZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSw0QkFBQTtFQUNDLDhCQUFBO0FBQ0wiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLm1hdC1tZGMtdGV4dC1maWVsZC13cmFwcGVyOm5vdCgubWRjLXRleHQtZmllbGQtLW91dGxpbmVkKSAubWF0LW1kYy1mb3JtLWZpZWxkLWluZml4IHtcbiAgcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return CuentasEfectivosEditComponent;\n}();\nexport { CuentasEfectivosEditComponent };","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","i0","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","datacuentasefectivoEdit","Date","cuentas_efectivas_edit","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","CuentasEfectivosEditComponent","getMoneda","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","compose","required","descripcion","dataform","balance","codmoneda","fecha","transform","tipo_movimiento","horareg","fechareg","fecha_actual","usuarioreg","data","value","errorMessage","update","subscribe","next","datav","_this","numLibrBanco","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","getAll","moneda","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\cuentas-efectivo\\cuentas-efectivos-edit\\cuentas-efectivos-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\cuentas-efectivo\\cuentas-efectivos-edit\\cuentas-efectivos-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cuentas-efectivos-edit',\n  templateUrl: './cuentas-efectivos-edit.component.html',\n  styleUrls: ['./cuentas-efectivos-edit.component.scss']\n})\nexport class CuentasEfectivosEditComponent implements OnInit {\n  \n  FormularioData:FormGroup;\n  fecha_actual = new Date();\n  hora_actual = new Date();\n  dataform: any = '';\n  userConn:any;\n  numLibrBanco:any=[];\n  cuentas_bancarias:any=[];\n  userLogueado: any = [];\n  moneda: any = [];\n  cuentas_efectivas_edit: any = [];\n  inputValue: number | null = null;\n\n  public ventana=\"cuentas_efectivo-create\"\n  public detalle=\"cuentas_efectivo-detalle\";\n  public tipo=\"transaccion-cuentas_efectivo-POST\";\n\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\n    private api:ApiService, public dialogRef: MatDialogRef<CuentasEfectivosEditComponent>, public _snackBar: MatSnackBar,\n    public log_module: LogService, private toastr: ToastrService, @Inject(MAT_DIALOG_DATA) public datacuentasefectivoEdit: any) {\n    \n    this.cuentas_efectivas_edit = datacuentasefectivoEdit.datacuentasefectivoEdit;\n\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    this.FormularioData = this.createForm();\n  } \n\n  ngOnInit() {\n    this.getMoneda();\n  }\n\n  createForm(): FormGroup{\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      id: [this.cuentas_efectivas_edit.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      balance: [this.dataform.balance,Validators.compose([Validators.required])],\n      codmoneda: [this.dataform.codmoneda],\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\n      tipo_movimiento: [this.dataform.tipo_movimiento],\n\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:- /fondos/mant/fncuenta/\";\n    \n    return this.api.update(\"/fondos/mant/fncuenta/\"+this.userConn+\"/\"+this.cuentas_efectivas_edit.id , data)\n      .subscribe({\n        next: (datav) => {\n          this.numLibrBanco = datav;\n\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\n          this.onNoClick();\n          this.spinner.show();\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\n\n          location.reload();\n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n          this.toastr.error('! NO SE GUARDO !');\n        },\n        complete: () => { }\n      })\n  }\n\n  getMoneda(){\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET -/fondos/mant/fncuenta/\";\n    return this.api.getAll('/seg_adm/mant/admoneda/'+this.userConn)\n      .subscribe({\n        next: (datav) => {\n          this.moneda = datav;\n          //console.log( this.moneda);\n        },\n        error: (err: any) => { \n          console.log(err, errorMessage);\n        },\n        complete: () => { }\n      })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Editar NumeraciÃ³n de Libros de Bancos <strong>{{ cuentas_efectivas_edit.id }}</strong></h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>DescripciÃ³n </mat-label>\n              <input matInput type=\"text\" formControlName=\"descripcion\" [(ngModel)]=\"cuentas_efectivas_edit.descripcion\"\n                maxlength=\"30\" required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md-9\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Balance Apertura</mat-label>\n              <input type=\"number\" min=\"0\" step=\"0.01\" matInput formControlName=\"balance\"\n                [(ngModel)]=\"cuentas_efectivas_edit.balance\" required>\n            </mat-form-field>\n\n          </div>\n          <div class=\"col-md-3\">\n            <mat-form-field appearance=\"outline\">\n              <!-- <mat-label>Balance Apertura</mat-label> -->\n              <mat-select formControlName=\"codmoneda\" [(ngModel)]=\"cuentas_efectivas_edit.codmoneda\">\n                <mat-option *ngFor=\"let monedas of moneda\" [value]=\"monedas.codigo\">\n                  {{ monedas.codigo }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row  mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field color=\"accent\">\n              <mat-label>Fecha Balance</mat-label>\n              <input matInput formControlName=\"fecha\" [(ngModel)]=\"cuentas_efectivas_edit.fecha\"\n                [matDatepicker]=\"picker2\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n              <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Tipo de Movimiento</mat-label>\n              <mat-select formControlName=\"tipo_movimiento\" [(ngModel)]=\"cuentas_efectivas_edit.tipo_movimiento\">\n                <mat-option value=\"INGRESO\">INGRESO</mat-option>\n                <mat-option value=\"EGRESO\">EGRESO</mat-option>\n                <mat-option value=\"TRASPASO\">TRASPASO </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>&nbsp;\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}