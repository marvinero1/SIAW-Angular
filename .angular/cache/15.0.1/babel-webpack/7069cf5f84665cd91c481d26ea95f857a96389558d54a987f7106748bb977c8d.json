{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/button\";\nfunction CuentasEfectivoCreateComponent_mat_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-option\", 34);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var monedas_r2 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"value\", monedas_r2.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", monedas_r2.codigo, \" \");\n  }\n}\nvar CuentasEfectivoCreateComponent = /** @class */function () {\n  function CuentasEfectivoCreateComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.numLibrBanco = [];\n    this.cuentas_bancarias = [];\n    this.userLogueado = [];\n    this.moneda = [];\n    this.inputValue = null;\n    this.ventana = \"cuentas_efectivo-create\";\n    this.detalle = \"cuentas_efectivo-detalle\";\n    this.tipo = \"transaccion-cuentas_efectivo-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  CuentasEfectivoCreateComponent.prototype.ngOnInit = function () {\n    this.getMoneda();\n  };\n  CuentasEfectivoCreateComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      balance: [this.dataform.balance, Validators.compose([Validators.required])],\n      codmoneda: [this.dataform.codmoneda],\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\n      tipo_movimiento: [this.dataform.tipo_movimiento],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  CuentasEfectivoCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:- /fondos/mant/fncuenta/\";\n    return this.api.create(\"/fondos/mant/fncuenta/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.numLibrBanco = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  CuentasEfectivoCreateComponent.prototype.getMoneda = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET -/fondos/mant/fncuenta/\";\n    return this.api.getAll('/seg_adm/mant/admoneda/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.moneda = datav;\n        //console.log( this.moneda);\n      },\n\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  CuentasEfectivoCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  CuentasEfectivoCreateComponent.Éµfac = function CuentasEfectivoCreateComponent_Factory(t) {\n    return new (t || CuentasEfectivoCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService));\n  };\n  CuentasEfectivoCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: CuentasEfectivoCreateComponent,\n    selectors: [[\"app-cuentas-efectivo-create\"]],\n    decls: 59,\n    vars: 6,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"id\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\"], [1, \"col-md-9\"], [\"appearance\", \"outline\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"0.01\", \"matInput\", \"\", \"formControlName\", \"balance\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-3\"], [\"formControlName\", \"codmoneda\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"accent\"], [\"matInput\", \"\", \"formControlName\", \"fecha\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"color\", \"primary\"], [\"picker2\", \"\"], [1, \"row\"], [1, \"col\"], [\"formControlName\", \"tipo_movimiento\"], [\"value\", \"INGRESO\"], [\"value\", \"EGRESO\"], [\"value\", \"TRASPASO\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [3, \"value\"]],\n    template: function CuentasEfectivoCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Numeraci\\u00F3n de Libros de Bancos\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function CuentasEfectivoCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"ID \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(14, \"input\", 10);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"mat-form-field\", 9)(17, \"mat-label\");\n        i0.ÉµÉµtext(18, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"input\", 11);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(20, \"div\", 7)(21, \"div\", 12)(22, \"mat-form-field\", 13)(23, \"mat-label\");\n        i0.ÉµÉµtext(24, \"Balance Apertura\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(25, \"input\", 14);\n        i0.ÉµÉµlistener(\"ngModelChange\", function CuentasEfectivoCreateComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(26, \"div\", 15)(27, \"mat-form-field\", 13)(28, \"mat-select\", 16);\n        i0.ÉµÉµtemplate(29, CuentasEfectivoCreateComponent_mat_option_29_Template, 2, 2, \"mat-option\", 17);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(30, \"div\", 7)(31, \"div\", 8)(32, \"mat-form-field\", 18)(33, \"mat-label\");\n        i0.ÉµÉµtext(34, \"Fecha Balance\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(35, \"input\", 19)(36, \"mat-datepicker-toggle\", 20)(37, \"mat-datepicker\", 21, 22);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(39, \"div\", 23)(40, \"div\", 24)(41, \"mat-form-field\", 13)(42, \"mat-label\");\n        i0.ÉµÉµtext(43, \"Tipo de Movimiento\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(44, \"mat-select\", 25)(45, \"mat-option\", 26);\n        i0.ÉµÉµtext(46, \"INGRESO\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(47, \"mat-option\", 27);\n        i0.ÉµÉµtext(48, \"EGRESO\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(49, \"mat-option\", 28);\n        i0.ÉµÉµtext(50, \"TRASPASO \");\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(51, \"div\", 29)(52, \"a\", 30);\n        i0.ÉµÉµlistener(\"click\", function CuentasEfectivoCreateComponent_Template_a_click_52_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(53, \"i\", 31);\n        i0.ÉµÉµtext(54, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(55, \"\\u00A0 \");\n        i0.ÉµÉµelementStart(56, \"button\", 32);\n        i0.ÉµÉµelement(57, \"i\", 33);\n        i0.ÉµÉµtext(58, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        var _r1 = i0.ÉµÉµreference(38);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(17);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.moneda);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"matDatepicker\", _r1);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"for\", _r1);\n        i0.ÉµÉµadvance(20);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i9.MatSuffix, i10.MatSelect, i11.MatOption, i12.MatInput, i13.MatDatepicker, i13.MatDatepickerInput, i13.MatDatepickerToggle, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i14.MatAnchor, i14.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 10px !important;\\n  padding-bottom: 0px !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/fondos/cuentas-efectivo/cuentas-efectivo-create/cuentas-efectivo-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2ZvbmRvcy9jdWVudGFzLWVmZWN0aXZvL2N1ZW50YXMtZWZlY3Rpdm8tY3JlYXRlL2N1ZW50YXMtZWZlY3Rpdm8tY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLDRCQUFBO0VBQ0MsOEJBQUE7QUFDTCIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLWZvcm0tZmllbGQge1xuICB3aWR0aDogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWRpYWxvZy1hY3Rpb25zIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4ubWF0LW1kYy10ZXh0LWZpZWxkLXdyYXBwZXI6bm90KC5tZGMtdGV4dC1maWVsZC0tb3V0bGluZWQpIC5tYXQtbWRjLWZvcm0tZmllbGQtaW5maXgge1xuICBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return CuentasEfectivoCreateComponent;\n}();\nexport { CuentasEfectivoCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","i0","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","Date","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","CuentasEfectivoCreateComponent","getMoneda","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","dataform","compose","required","descripcion","balance","codmoneda","fecha","transform","tipo_movimiento","horareg","fechareg","fecha_actual","usuarioreg","data","value","errorMessage","create","subscribe","next","datav","_this","numLibrBanco","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","getAll","moneda","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\cuentas-efectivo\\cuentas-efectivo-create\\cuentas-efectivo-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\cuentas-efectivo\\cuentas-efectivo-create\\cuentas-efectivo-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cuentas-efectivo-create',\n  templateUrl: './cuentas-efectivo-create.component.html',\n  styleUrls: ['./cuentas-efectivo-create.component.scss']\n})\nexport class CuentasEfectivoCreateComponent implements OnInit {\n\n  FormularioData:FormGroup;\n  fecha_actual = new Date();\n  hora_actual = new Date();\n  dataform: any = '';\n  userConn:any;\n  numLibrBanco:any=[];\n  cuentas_bancarias:any=[];\n  userLogueado: any = [];\n  moneda: any = [];\n  inputValue: number | null = null;\n\n  public ventana=\"cuentas_efectivo-create\"\n  public detalle=\"cuentas_efectivo-detalle\";\n  public tipo=\"transaccion-cuentas_efectivo-POST\";\n\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\n    private api:ApiService, public dialogRef: MatDialogRef<CuentasEfectivoCreateComponent>, public _snackBar: MatSnackBar,\n    public log_module: LogService, private toastr: ToastrService) {\n    \n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    this.FormularioData = this.createForm();\n    \n  } \n\n  ngOnInit() {\n    this.getMoneda();\n  }\n\n  createForm(): FormGroup{\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      balance: [this.dataform.balance,Validators.compose([Validators.required])],\n      codmoneda: [this.dataform.codmoneda],\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\n      tipo_movimiento: [this.dataform.tipo_movimiento],\n\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:- /fondos/mant/fncuenta/\";\n    \n    return this.api.create(\"/fondos/mant/fncuenta/\"+this.userConn, data)\n      .subscribe({\n        next: (datav) => {\n          this.numLibrBanco = datav;\n\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\n          this.onNoClick();\n          this.spinner.show();\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\n\n          location.reload();\n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n          this.toastr.error('! NO SE GUARDO !');\n        },\n        complete: () => { }\n      })\n  }\n\n  getMoneda(){\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET -/fondos/mant/fncuenta/\";\n    return this.api.getAll('/seg_adm/mant/admoneda/'+this.userConn)\n      .subscribe({\n        next: (datav) => {\n          this.moneda = datav;\n          //console.log( this.moneda);\n        },\n        error: (err: any) => { \n          console.log(err, errorMessage);\n        },\n        complete: () => { }\n      })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Crear NumeraciÃ³n de Libros de Bancos</h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>ID </mat-label>\n              <input matInput type=\"text\" formControlName=\"id\" required>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>DescripciÃ³n </mat-label>\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"30\" required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md-9\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Balance Apertura</mat-label>\n              <input type=\"number\" min=\"0\" step=\"0.01\" matInput formControlName=\"balance\" [(ngModel)]=\"inputValue\"\n                required>\n            </mat-form-field>\n\n          </div>\n          <div class=\"col-md-3\">\n            <mat-form-field appearance=\"outline\">\n              <!-- <mat-label>Balance Apertura</mat-label> -->\n              <mat-select formControlName=\"codmoneda\">\n                <mat-option *ngFor=\"let monedas of moneda\" [value]=\"monedas.codigo\">\n                  {{ monedas.codigo }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row  mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field color=\"accent\">\n              <mat-label>Fecha Balance</mat-label>\n              <input matInput formControlName=\"fecha\" [matDatepicker]=\"picker2\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n              <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Tipo de Movimiento</mat-label>\n              <mat-select formControlName=\"tipo_movimiento\">\n                <mat-option value=\"INGRESO\">INGRESO</mat-option>\n                <mat-option value=\"EGRESO\">EGRESO</mat-option>\n                <mat-option value=\"TRASPASO\">TRASPASO </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>&nbsp;\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}