{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/log-service.service\";\nimport * as i5 from \"@services/api.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/material/snack-bar\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nvar UnidadnegocioCreateComponent = /** @class */function () {\n  function UnidadnegocioCreateComponent(_formBuilder, datePipe, spinner, log_module, api, dialogRef, _snackBar, toastr) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.log_module = log_module;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.toastr = toastr;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.dpto = [];\n    this.ventana = \"unidadnegocio-create\";\n    this.detalle = \"unidadnegocio-create\";\n    this.tipo = \"transaccion-unidadnegocio-POST\";\n    this.FormularioData = this.createForm();\n  }\n  UnidadnegocioCreateComponent.prototype.ngOnInit = function () {};\n  UnidadnegocioCreateComponent.prototype.createForm = function () {\n    this.usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.dataform.codigo, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [this.usuario_logueado]\n    });\n  };\n  UnidadnegocioCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var user_conn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:- /adunidad\";\n    return this.api.create(\"/seg_adm/mant/adunidad/\" + user_conn, data).subscribe({\n      next: function (datav) {\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.dpto = datav;\n        console.log('data', datav);\n        _this.toastr.success('! SE GUARDO EXITOSAMENTE !');\n        _this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\n          duration: 3000,\n          panelClass: ['coorporativo-snackbar', 'login-snackbar']\n        });\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  UnidadnegocioCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  UnidadnegocioCreateComponent.ɵfac = function UnidadnegocioCreateComponent_Factory(t) {\n    return new (t || UnidadnegocioCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.LogService), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i6.MatDialogRef), i0.ɵɵdirectiveInject(i7.MatSnackBar), i0.ɵɵdirectiveInject(i8.ToastrService));\n  };\n  UnidadnegocioCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnidadnegocioCreateComponent,\n    selectors: [[\"app-unidadnegocio-create\"]],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"codigo\", \"maxlength\", \"3\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"]],\n    template: function UnidadnegocioCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Crear Unidad de Negocio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Los campos (*) son obligatorios\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function UnidadnegocioCreateComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitData();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-form-field\", 8)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Codigo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"mat-form-field\", 8)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 11)(20, \"button\", 12);\n        i0.ɵɵelement(21, \"i\", 13);\n        i0.ɵɵtext(22, \" Guardar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function UnidadnegocioCreateComponent_Template_button_click_23_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵelement(24, \"i\", 15);\n        i0.ɵɵtext(25, \" Atras\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormularioData);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i10.MatInput, i6.MatDialogTitle, i6.MatDialogContent, i6.MatDialogActions, i11.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/administracion/unidadnegocio/unidadnegocio-create/unidadnegocio-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2FkbWluaXN0cmFjaW9uL3VuaWRhZG5lZ29jaW8vdW5pZGFkbmVnb2Npby1jcmVhdGUvdW5pZGFkbmVnb2Npby1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return UnidadnegocioCreateComponent;\n}();\nexport { UnidadnegocioCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","_formBuilder","datePipe","spinner","log_module","api","dialogRef","_snackBar","toastr","Date","FormularioData","createForm","UnidadnegocioCreateComponent","usuario_logueado","localStorage","getItem","undefined","JSON","parse","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","dataform","compose","required","descripcion","fechareg","transform","fecha_actual","horareg","usuarioreg","user_conn","data","value","errorMessage","create","subscribe","next","datav","_this","guardarLog","ventana","detalle","tipo","dpto","console","log","success","open","duration","panelClass","location","reload","error","err","complete","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\unidadnegocio\\unidadnegocio-create\\unidadnegocio-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\unidadnegocio\\unidadnegocio-create\\unidadnegocio-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-unidadnegocio-create',\r\n  templateUrl: './unidadnegocio-create.component.html',\r\n  styleUrls: ['./unidadnegocio-create.component.scss']\r\n})\r\nexport class UnidadnegocioCreateComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform:any='';\r\n  dpto:any=[];\r\n  usuario_logueado;\r\n\r\n  public ventana=\"unidadnegocio-create\"\r\n\tpublic detalle=\"unidadnegocio-create\";\r\n\tpublic tipo=\"transaccion-unidadnegocio-POST\";\r\n\r\n  constructor(private _formBuilder: FormBuilder,  private datePipe: DatePipe,  private spinner: NgxSpinnerService, public log_module:LogService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<UnidadnegocioCreateComponent>, public _snackBar: MatSnackBar,\r\n    private toastr: ToastrService,){\r\n    this.FormularioData = this.createForm();\r\n  }\r\n\r\n  \r\n  ngOnInit(){\r\n  }\r\n\r\n  createForm(): FormGroup {\r\n    this.usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.dataform.codigo,Validators.compose([Validators.required])],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      horareg: [hora_actual_complete],\r\n      usuarioreg: [this.usuario_logueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let user_conn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\"+\"Ruta:- /adunidad\";\r\n    return this.api.create(\"/seg_adm/mant/adunidad/\"+user_conn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.log_module.guardarLog(this.ventana,this.detalle,this.tipo);\r\n          this.dpto = datav;\r\n          console.log('data', datav);\r\n          this.toastr.success('! SE GUARDO EXITOSAMENTE !');\r\n\r\n          this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\r\n            duration: 3000,\r\n            panelClass: ['coorporativo-snackbar', 'login-snackbar'],\r\n          });\r\n          \r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n    }\r\n\r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"p-2\">\r\n  <h1 mat-dialog-title>Crear Unidad de Negocio</h1>\r\n  <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <div class=\"container\">\r\n    <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n            <mat-label>Codigo</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"codigo\" maxlength=\"3\" required>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md\">\r\n          <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n            <mat-label>Descripcion</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"30\" required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i class=\"fa fa-save\"></i> Guardar</button>\r\n      </div>\r\n    </form>\r\n\r\n    <button mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</button>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}