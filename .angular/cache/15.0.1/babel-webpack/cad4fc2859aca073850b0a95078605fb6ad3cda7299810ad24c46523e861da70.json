{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@services/api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@services/log-service.service\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nvar NumpedidomercaderiaEditComponent = /** @class */function () {\n  function NumpedidomercaderiaEditComponent(_formBuilder, dialogRef, dataMercaderiaEdit, api, datePipe, _snackBar, log_module) {\n    this._formBuilder = _formBuilder;\n    this.dialogRef = dialogRef;\n    this.dataMercaderiaEdit = dataMercaderiaEdit;\n    this.api = api;\n    this.datePipe = datePipe;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.numntipopedmercaderia = [];\n    this.dataform = '';\n    this.num_pedidos_mercaderia = [];\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.ventana = \"nts-movpedmerca-edit\";\n    this.detalle = \"nts-movpedmerca\";\n    this.tipo = \"nts-movpedmerca-UPDATE\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioDataEdit = this.createForm();\n  }\n  NumpedidomercaderiaEditComponent.prototype.ngOnInit = function () {\n    this.numntipopedmercaderia = this.dataMercaderiaEdit.dataMercaderiaEdit;\n    console.log(this.dataMercaderiaEdit.dataMercaderiaEdit.id);\n  };\n  NumpedidomercaderiaEditComponent.prototype.createForm = function () {\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataMercaderiaEdit.dataMercaderiaEdit.id],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      nroactual: [this.dataform.nroactual],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [this.usuarioLogueado]\n    });\n  };\n  NumpedidomercaderiaEditComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioDataEdit.value;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:--  /inventario/mant/intipopedido POST\";\n    return this.api.update('/inventario/mant/intipopedido/' + this.userConn + \"/\" + this.dataMercaderiaEdit.dataMercaderiaEdit.id, data).subscribe({\n      next: function (datav) {\n        _this.num_pedidos_mercaderia = datav;\n        _this._snackBar.open('Se ha editado correctamente!', 'Ok', {\n          duration: 3000,\n          panelClass: ['coorporativo-snackbar', 'login-snackbar']\n        });\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  NumpedidomercaderiaEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  NumpedidomercaderiaEditComponent.ɵfac = function NumpedidomercaderiaEditComponent_Factory(t) {\n    return new (t || NumpedidomercaderiaEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.LogService));\n  };\n  NumpedidomercaderiaEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NumpedidomercaderiaEditComponent,\n    selectors: [[\"app-numpedidomercaderia-edit\"]],\n    decls: 27,\n    vars: 5,\n    consts: [[1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"descripcion\", \"maxlength\", \"50\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col\"], [\"appearance\", \"outline\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"nroactual\", \"min\", \"0\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function NumpedidomercaderiaEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Los campos (*) son obligatorios\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function NumpedidomercaderiaEditComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitData();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-form-field\", 8)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Descripcion \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function NumpedidomercaderiaEditComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.numntipopedmercaderia.descripcion = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 10)(16, \"mat-form-field\", 11)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Numero Actual\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function NumpedidomercaderiaEditComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.numntipopedmercaderia.nroactual = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 13)(21, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function NumpedidomercaderiaEditComponent_Template_a_click_21_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵelement(22, \"i\", 15);\n        i0.ɵɵtext(23, \" Atras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 16);\n        i0.ɵɵelement(25, \"i\", 17);\n        i0.ɵɵtext(26, \" Guardar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Editar Numeraci\\u00F3n Tipos de Pedidos de Mercaderia: \", ctx.numntipopedmercaderia.codigo, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormularioDataEdit);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.numntipopedmercaderia.descripcion);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.numntipopedmercaderia.nroactual);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.FormularioDataEdit.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i7.MatFormField, i7.MatLabel, i8.MatInput, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i9.MatAnchor, i9.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/inventario/numpedidomercaderia/numpedidomercaderia-edit/numpedidomercaderia-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2ludmVudGFyaW8vbnVtcGVkaWRvbWVyY2FkZXJpYS9udW1wZWRpZG9tZXJjYWRlcmlhLWVkaXQvbnVtcGVkaWRvbWVyY2FkZXJpYS1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLWZvcm0tZmllbGQge1xuICB3aWR0aDogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWRpYWxvZy1hY3Rpb25zIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return NumpedidomercaderiaEditComponent;\n}();\nexport { NumpedidomercaderiaEditComponent };","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAsB,0BAA0B;;;;;;;;;;;AAKxE;EAsBE,0CAAoBC,YAAyB,EAASC,SAAyD,EAC7EC,kBAAuB,EAAUC,GAAc,EAAUC,QAAkB,EACpGC,SAAsB,EAASC,UAAsB;IAF1C,iBAAY,GAAZN,YAAY;IAAsB,cAAS,GAATC,SAAS;IAC7B,uBAAkB,GAAlBC,kBAAkB;IAAe,QAAG,GAAHC,GAAG;IAAqB,aAAQ,GAARC,QAAQ;IAC1F,cAAS,GAATC,SAAS;IAAsB,eAAU,GAAVC,UAAU;IAjB3C,0BAAqB,GAAK,EAAE;IAGnC,aAAQ,GAAK,EAAE;IAGf,2BAAsB,GAAC,EAAE;IAEzB,iBAAY,GAAG,IAAIC,IAAI,EAAE;IACzB,gBAAW,GAAG,IAAIA,IAAI,EAAE;IAEjB,YAAO,GAAC,sBAAsB;IAC9B,YAAO,GAAC,iBAAiB;IACzB,SAAI,GAAC,wBAAwB;IAMlC,IAAI,CAACC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAKC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI;IACtH,IAAI,CAACI,eAAe,GAAGL,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAKC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,IAAI;IAE3I,IAAI,CAACK,kBAAkB,GAAG,IAAI,CAACC,UAAU,EAAE;EAC7C;EAEAC,mDAAQ,GAAR;IACE,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAAChB,kBAAkB,CAACA,kBAAkB;IACvEiB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,kBAAkB,CAACA,kBAAkB,CAACmB,EAAE,CAAC;EAC5D,CAAC;EAEDJ,qDAAU,GAAV;IACE,IAAIK,IAAI,GAAG,IAAI,CAACC,WAAW,CAACC,QAAQ,EAAE;IACtC,IAAIC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE;IAC1C,IAAIC,oBAAoB,GAAGL,IAAI,GAAG,GAAG,GAAGG,MAAM;IAE9C,OAAO,IAAI,CAACzB,YAAY,CAAC4B,KAAK,CAAC;MAC7BP,EAAE,EAAC,CAAC,IAAI,CAACnB,kBAAkB,CAACA,kBAAkB,CAACmB,EAAE,CAAC;MAClDQ,WAAW,EAAE,CAAC,IAAI,CAACC,QAAQ,CAACD,WAAW,EAAE/B,UAAU,CAACiC,OAAO,CAAC,CAACjC,UAAU,CAACkC,QAAQ,CAAC,CAAC,CAAC;MACnFC,SAAS,EAAE,CAAC,IAAI,CAACH,QAAQ,CAACG,SAAS,CAAC;MACpCC,QAAQ,EAAE,CAAC,IAAI,CAAC9B,QAAQ,CAAC+B,SAAS,CAAC,IAAI,CAACC,YAAY,EAAC,YAAY,CAAC,CAAC;MACnEC,OAAO,EAAE,CAACV,oBAAoB,CAAC;MAC/BW,UAAU,EAAE,CAAC,IAAI,CAACxB,eAAe;KAClC,CAAC;EACJ,CAAC;EAEDG,qDAAU,GAAV;IAAA;IACE,IAAIsB,IAAI,GAAG,IAAI,CAACxB,kBAAkB,CAACyB,KAAK;IAExC,IAAIC,YAAY,GAAG,4DAA4D,GAAC,6CAA6C;IAC7H,OAAO,IAAI,CAACtC,GAAG,CAACuC,MAAM,CAAC,gCAAgC,GAAC,IAAI,CAAClC,QAAQ,GAAC,GAAG,GAAC,IAAI,CAACN,kBAAkB,CAACA,kBAAkB,CAACmB,EAAE,EAAEkB,IAAI,CAAC,CAC3HI,SAAS,CAAC;MACTC,IAAI,EAAE,UAACC,KAAK;QACVC,KAAI,CAACC,sBAAsB,GAAGF,KAAK;QAEnCC,KAAI,CAACzC,SAAS,CAAC2C,IAAI,CAAC,8BAA8B,EAAE,IAAI,EAAE;UACxDC,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,CAAC,uBAAuB,EAAE,gBAAgB;SACvD,CAAC;QACFC,QAAQ,CAACC,MAAM,EAAE;MACnB,CAAC;MAEDC,KAAK,EAAE,UAACC,GAAQ;QACdnC,OAAO,CAACC,GAAG,CAACkC,GAAG,EAAEb,YAAY,CAAC;MAChC,CAAC;MACDc,QAAQ,EAAE,aAAQ;KACnB,CAAC;EACN,CAAC;EAEDtC,oDAAS,GAAT;IACE,IAAI,CAAChB,SAAS,CAACuD,KAAK,EAAE;EACxB,CAAC;;qBAxEUvC,gCAAgC,oGAkBjClB,eAAe;EAAA;;UAlBdkB,gCAAgC;IAAAwC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCb7CC,8BAAiB;QACMA,YAAoF;QAAAA,iBAAK;QAC9GA,8BAAoD;QAAAA,+CAA+B;QAAAA,iBAAM;QAG3FA,8BAAwB;QAEwCA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QACnFD,8BAAsB;QAGLA,6BAAY;QAAAA,iBAAY;QACnCA,iCAC0B;QADgCA;UAAA;QAAA,EAA+C;QAAzGA,iBAC0B;QAIhCA,+BAAsB;QAGLA,8BAAa;QAAAA,iBAAY;QACpCA,kCACU;QADgDA;UAAA;QAAA,EAA6C;QAAvGA,iBACU;QAKhBA,gCAAmD;QACnCA;UAAA,OAASC,eAAW;QAAA,EAAC;QAACD,yBAAgC;QAACA,uBAAK;QAAAA,iBAAI;QAE9EA,mCAA+F;QAAAA,yBACpE;QAACA,yBAAO;QAAAA,iBAAS;;;QA9B7BA,eAAoF;QAApFA,sHAAoF;QAM5EA,eAAgC;QAAhCA,kDAAgC;QAKOA,eAA+C;QAA/CA,+DAA+C;QAS/CA,eAA6C;QAA7CA,6DAA6C;QASjEA,eAAsC;QAAtCA,wDAAsC;;;;;;yCD9BxF;CAuFC,EA/ED;SAKa7C,gCAAgC","names":["Validators","MAT_DIALOG_DATA","_formBuilder","dialogRef","dataMercaderiaEdit","api","datePipe","_snackBar","log_module","Date","userConn","localStorage","getItem","undefined","JSON","parse","usuarioLogueado","FormularioDataEdit","createForm","NumpedidomercaderiaEditComponent","numntipopedmercaderia","console","log","id","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","descripcion","dataform","compose","required","nroactual","fechareg","transform","fecha_actual","horareg","usuarioreg","data","value","errorMessage","update","subscribe","next","datav","_this","num_pedidos_mercaderia","open","duration","panelClass","location","reload","error","err","complete","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\inventario\\numpedidomercaderia\\numpedidomercaderia-edit\\numpedidomercaderia-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\inventario\\numpedidomercaderia\\numpedidomercaderia-edit\\numpedidomercaderia-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\n\r\n@Component({\r\n  selector: 'app-numpedidomercaderia-edit',\r\n  templateUrl: './numpedidomercaderia-edit.component.html',\r\n  styleUrls: ['./numpedidomercaderia-edit.component.scss']\r\n})\r\nexport class NumpedidomercaderiaEditComponent implements OnInit {\r\n\r\n  public numntipopedmercaderia:any=[];\r\n\r\n  FormularioDataEdit:FormGroup;\r\n  dataform:any='';\r\n  userConn:any;\r\n  usuarioLogueado:any;\r\n  num_pedidos_mercaderia=[];\r\n\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n\r\n  public ventana=\"nts-movpedmerca-edit\"\r\n  public detalle=\"nts-movpedmerca\";\r\n  public tipo=\"nts-movpedmerca-UPDATE\";\r\n  \r\n  constructor(private _formBuilder: FormBuilder, public dialogRef: MatDialogRef<NumpedidomercaderiaEditComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public dataMercaderiaEdit: any, private api:ApiService, private datePipe: DatePipe, \r\n    public _snackBar: MatSnackBar, public log_module: LogService) {\r\n    \r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    this.FormularioDataEdit = this.createForm();\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.numntipopedmercaderia = this.dataMercaderiaEdit.dataMercaderiaEdit;   \r\n    console.log(this.dataMercaderiaEdit.dataMercaderiaEdit.id);  \r\n  }\r\n\r\n  createForm(): FormGroup {\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      id:[this.dataMercaderiaEdit.dataMercaderiaEdit.id],\r\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\r\n      nroactual: [this.dataform.nroactual],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      horareg: [hora_actual_complete],\r\n      usuarioreg: [this.usuarioLogueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let data = this.FormularioDataEdit.value;\r\n    \r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\"+\"Ruta:--  /inventario/mant/intipopedido POST\";\r\n    return this.api.update('/inventario/mant/intipopedido/'+this.userConn+\"/\"+this.dataMercaderiaEdit.dataMercaderiaEdit.id, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.num_pedidos_mercaderia = datav;\r\n\r\n          this._snackBar.open('Se ha editado correctamente!', 'Ok', {\r\n            duration: 3000,\r\n            panelClass: ['coorporativo-snackbar', 'login-snackbar'],\r\n          });\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"p-2\">\r\n  <h1 mat-dialog-title>Editar Numeración Tipos de Pedidos de Mercaderia: {{ numntipopedmercaderia.codigo }}</h1>\r\n  <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n  <div class=\"container\">\r\n    <form class=\"example-form\" [formGroup]=\"FormularioDataEdit\" (ngSubmit)=\"submitData()\">\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Descripcion </mat-label>\r\n            <input type=\"text\" matInput formControlName=\"descripcion\" [(ngModel)]=\"numntipopedmercaderia.descripcion\"\r\n              maxlength=\"50\" required>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Numero Actual</mat-label>\r\n            <input type=\"number\" matInput formControlName=\"nroactual\" [(ngModel)]=\"numntipopedmercaderia.nroactual\"\r\n              min=\"0\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n        <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\r\n\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioDataEdit.valid\" type=\"submit\"><i\r\n            class=\"fa fa-save\"></i> Guardar</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}