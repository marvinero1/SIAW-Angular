{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nvar TiposCreditoEditComponent = /** @class */function () {\n  function TiposCreditoEditComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr, dataCreditoEdit) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.dataCreditoEdit = dataCreditoEdit;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.rubro = [];\n    this.moneda = [];\n    this.empresa = [];\n    this.credito_edit = [];\n    this.credito_edit_codigo = [];\n    this.credito_edit_duracion = [];\n    this.userLogueado = [];\n    this.array_copy = [];\n    this.inputValue = null;\n    this.ventana = \"tipos-credito-edit\";\n    this.detalle = \"tipos-credito-detalle\";\n    this.tipo = \"transaccion-tipos-credito-UPDATE\";\n    this.FormularioData = this.createForm();\n    this.credito_edit = this.dataCreditoEdit.dataCreditoEdit;\n    this.credito_edit_codigo = this.dataCreditoEdit.dataCreditoEdit.codigo;\n    this.credito_edit_duracion = this.dataCreditoEdit.dataCreditoEdit.duracion;\n    console.log(this.credito_edit);\n  }\n  TiposCreditoEditComponent.prototype.ngOnInit = function () {\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n  };\n  TiposCreditoEditComponent.prototype.createForm = function () {\n    this.credito_edit_codigo = this.dataCreditoEdit.dataCreditoEdit.codigo;\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: this.credito_edit_codigo,\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      es_fijo: [this.dataform.es_fijo],\n      duracion: [this.dataform.duracion, Validators.compose([Validators.required])],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  TiposCreditoEditComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:- /venta/mant/verubro/\";\n    return this.api.update(\"/venta/mant/vetipocredito/\" + this.userConn + \"/\" + this.credito_edit.codigo, data).subscribe({\n      next: function (datav) {\n        _this.rubro = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  TiposCreditoEditComponent.prototype.onInputChange = function (value) {\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.credito_edit.duracion = null;\n    }\n  };\n  TiposCreditoEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  TiposCreditoEditComponent.Éµfac = function TiposCreditoEditComponent_Factory(t) {\n    return new (t || TiposCreditoEditComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(MAT_DIALOG_DATA));\n  };\n  TiposCreditoEditComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: TiposCreditoEditComponent,\n    selectors: [[\"app-tipos-credito-edit\"]],\n    decls: 39,\n    vars: 6,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"disabled\", \"true\", 3, \"ngModel\", \"ngModelChange\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"descripcion\", \"maxlength\", \"50\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"duracion\", \"min\", \"0\", \"step\", \"1\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"type\", \"checkbox\", \"formControlName\", \"es_fijo\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function TiposCreditoEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Tipos de Credito\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"mat-form-field\", 8)(11, \"mat-label\");\n        i0.ÉµÉµtext(12, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(13, \"input\", 9);\n        i0.ÉµÉµlistener(\"ngModelChange\", function TiposCreditoEditComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.credito_edit_codigo = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(14, \"form\", 10);\n        i0.ÉµÉµlistener(\"ngSubmit\", function TiposCreditoEditComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(15, \"div\", 11)(16, \"div\", 7)(17, \"mat-form-field\", 12)(18, \"mat-label\");\n        i0.ÉµÉµtext(19, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(20, \"input\", 13);\n        i0.ÉµÉµlistener(\"ngModelChange\", function TiposCreditoEditComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.credito_edit.descripcion = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(21, \"div\", 7)(22, \"mat-form-field\", 12)(23, \"mat-label\");\n        i0.ÉµÉµtext(24, \"Duraci\\u00F3n Dias\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(25, \"input\", 14);\n        i0.ÉµÉµlistener(\"ngModelChange\", function TiposCreditoEditComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.credito_edit.duracion = $event;\n        })(\"input\", function TiposCreditoEditComponent_Template_input_input_25_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(26, \"div\", 6)(27, \"div\", 7)(28, \"input\", 15);\n        i0.ÉµÉµlistener(\"ngModelChange\", function TiposCreditoEditComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.credito_edit.es_fijo = $event;\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(29, \"\\u00A0\\u00A0 \");\n        i0.ÉµÉµelementStart(30, \"mat-label\");\n        i0.ÉµÉµtext(31, \"Es credito Fijo \");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(32, \"div\", 16)(33, \"a\", 17);\n        i0.ÉµÉµlistener(\"click\", function TiposCreditoEditComponent_Template_a_click_33_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(34, \"i\", 18);\n        i0.ÉµÉµtext(35, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(36, \"button\", 19);\n        i0.ÉµÉµelement(37, \"i\", 20);\n        i0.ÉµÉµtext(38, \" Guardar \");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(13);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.credito_edit_codigo);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.credito_edit.descripcion);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.credito_edit.duracion);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.credito_edit.es_fijo);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i9.MatFormField, i9.MatLabel, i10.MatInput, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i11.MatAnchor, i11.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/ventas/tipos-credito/tipos-credito-edit/tipos-credito-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL3ZlbnRhcy90aXBvcy1jcmVkaXRvL3RpcG9zLWNyZWRpdG8tZWRpdC90aXBvcy1jcmVkaXRvLWVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return TiposCreditoEditComponent;\n}();\nexport { TiposCreditoEditComponent };","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAsB,0BAA0B;;;;;;;;;;;;;AAOxE;EA0BE,mCAAoBC,YAAyB,EAAUC,QAAkB,EAAUC,OAA0B,EACnGC,GAAc,EAASC,SAAkD,EAASC,SAAsB,EACzGC,UAAqB,EAAUC,MAAqB,EAAkCC,eAAoB;IAF/F,iBAAY,GAAZR,YAAY;IAAuB,aAAQ,GAARC,QAAQ;IAAoB,YAAO,GAAPC,OAAO;IAChF,QAAG,GAAHC,GAAG;IAAoB,cAAS,GAATC,SAAS;IAAkD,cAAS,GAATC,SAAS;IAC5F,eAAU,GAAVC,UAAU;IAAqB,WAAM,GAANC,MAAM;IAAiD,oBAAe,GAAfC,eAAe;IApB9G,iBAAY,GAAG,IAAIC,IAAI,EAAE;IACzB,gBAAW,GAAG,IAAIA,IAAI,EAAE;IACxB,aAAQ,GAAK,EAAE;IACf,UAAK,GAAK,EAAE;IACZ,WAAM,GAAK,EAAE;IACb,YAAO,GAAQ,EAAE;IACjB,iBAAY,GAAQ,EAAE;IAEtB,wBAAmB,GAAQ,EAAE;IAC7B,0BAAqB,GAAQ,EAAE;IAC/B,iBAAY,GAAQ,EAAE;IACtB,eAAU,GAAQ,EAAE;IACpB,eAAU,GAAkB,IAAI;IAEzB,YAAO,GAAC,oBAAoB;IAC5B,YAAO,GAAC,uBAAuB;IAC/B,SAAI,GAAC,kCAAkC;IAM5C,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,UAAU,EAAE;IAEvC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,eAAe,CAACA,eAAe;IACxD,IAAI,CAACK,mBAAmB,GAAG,IAAI,CAACL,eAAe,CAACA,eAAe,CAACM,MAAM;IACtE,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACP,eAAe,CAACA,eAAe,CAACQ,QAAQ;IAC1EC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAAC;EAChC;EAEAO,4CAAQ,GAAR;IACE,IAAI,CAACC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAKC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI;IACtH,IAAI,CAACI,YAAY,GAAGL,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAKC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,IAAI;EAC1I,CAAC;EAEDH,8CAAU,GAAV;IACE,IAAI,CAACN,mBAAmB,GAAG,IAAI,CAACL,eAAe,CAACA,eAAe,CAACM,MAAM;IAEtE,IAAIa,gBAAgB,GAAGN,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAKC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,IAAI;IAE3I,IAAIM,IAAI,GAAG,IAAI,CAACC,WAAW,CAACC,QAAQ,EAAE;IACtC,IAAIC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE;IAC1C,IAAIC,oBAAoB,GAAGL,IAAI,GAAG,GAAG,GAAGG,MAAM;IAE9C,OAAO,IAAI,CAAC/B,YAAY,CAACkC,KAAK,CAAC;MAC7BpB,MAAM,EAAE,IAAI,CAACD,mBAAmB;MAChCsB,WAAW,EAAE,CAAC,IAAI,CAACC,QAAQ,CAACD,WAAW,EAAErC,UAAU,CAACuC,OAAO,CAAC,CAACvC,UAAU,CAACwC,QAAQ,CAAC,CAAC,CAAC;MACnFC,OAAO,EAAE,CAAC,IAAI,CAACH,QAAQ,CAACG,OAAO,CAAC;MAChCvB,QAAQ,EAAE,CAAC,IAAI,CAACoB,QAAQ,CAACpB,QAAQ,EAAElB,UAAU,CAACuC,OAAO,CAAC,CAACvC,UAAU,CAACwC,QAAQ,CAAC,CAAC,CAAC;MAE7EE,QAAQ,EAAE,CAAC,IAAI,CAACvC,QAAQ,CAACwC,SAAS,CAAC,IAAI,CAACC,YAAY,EAAC,YAAY,CAAC,CAAC;MACnEC,OAAO,EAAE,CAACV,oBAAoB,CAAC;MAC/BW,UAAU,EAAE,CAACjB,gBAAgB;KAC9B,CAAC;EACJ,CAAC;EAEDR,8CAAU,GAAV;IAAA;IACE,IAAI0B,IAAI,GAAG,IAAI,CAACnC,cAAc,CAACoC,KAAK;IACpC,IAAIC,YAAY,GAAG,8CAA8C,GAAC,6BAA6B;IAE/F,OAAO,IAAI,CAAC5C,GAAG,CAAC6C,MAAM,CAAC,4BAA4B,GAAC,IAAI,CAAC5B,QAAQ,GAAC,GAAG,GAAC,IAAI,CAACR,YAAY,CAACE,MAAM,EAAE+B,IAAI,CAAC,CAClGI,SAAS,CAAC;MACTC,IAAI,EAAE,UAACC,KAAK;QACVC,KAAI,CAACC,KAAK,GAAGF,KAAK;QAClBC,KAAI,CAAC9C,UAAU,CAACgD,UAAU,CAACF,KAAI,CAACG,OAAO,EAAEH,KAAI,CAACI,OAAO,EAAEJ,KAAI,CAACK,IAAI,CAAC;QAEjEL,KAAI,CAACM,SAAS,EAAE;QAChBN,KAAI,CAAClD,OAAO,CAACyD,IAAI,EAAE;QACnBP,KAAI,CAAC7C,MAAM,CAACqD,OAAO,CAAC,wBAAwB,CAAC;QAE7CC,QAAQ,CAACC,MAAM,EAAE;MACnB,CAAC;MAEDC,KAAK,EAAE,UAACC,GAAG;QACT/C,OAAO,CAACC,GAAG,CAAC8C,GAAG,EAAEjB,YAAY,CAAC;QAC9BK,KAAI,CAAC7C,MAAM,CAACwD,KAAK,CAAC,kBAAkB,CAAC;MACvC,CAAC;MACDE,QAAQ,EAAE,aAAQ;KACnB,CAAC;EACN,CAAC;EAED9C,iDAAa,GAAb,UAAc2B,KAAa;IACzB,IAAMoB,WAAW,GAAGC,UAAU,CAACrB,KAAK,CAAC;IAErC,IAAI,CAACsB,KAAK,CAACF,WAAW,CAAC,IAAIG,MAAM,CAACC,SAAS,CAACJ,WAAW,CAAC,EAAE;MACxD,IAAI,CAACK,UAAU,GAAGL,WAAW;KAC9B,MAAI;MACH,IAAI,CAACtD,YAAY,CAACI,QAAQ,GAAG,IAAI;;EAErC,CAAC;EAEDG,6CAAS,GAAT;IACE,IAAI,CAACf,SAAS,CAACoE,KAAK,EAAE;EACxB,CAAC;;qBAhGUrD,yBAAyB,2UAuBmCpB,eAAe;EAAA;;UAvB3EoB,yBAAyB;IAAAsD;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCftCC,8BAAwC;QAEfA,sCAAsB;QAAAA,iBAAK;QAChDA,8BAAoD;QAAAA,+CAA+B;QAAAA,iBAAM;QAG3FA,8BAAwB;QAKHA,6BAAO;QAAAA,iBAAY;QAC9BA,iCAA8E;QAAlDA;UAAA;QAAA,EAAiC;QAA7DA,iBAA8E;QAKpFA,iCAAkF;QAA1BA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QAC/ED,gCAAiB;QAGAA,kCAAY;QAAAA,iBAAY;QACnCA,kCACkD;QAAhDA;UAAA;QAAA,EAAsC;QADxCA,iBACkD;QAGtDA,+BAAoB;QAELA,mCAAa;QAAAA,iBAAY;QACpCA,kCACiE;QADnCA;UAAA;QAAA,EAAmC;UAAA,OAC7CC,sCAAkC;QAAA,EADW;QAAjED,iBACiE;QAIvEA,+BAAsB;QAE+BA;UAAA;QAAA,EAAkC;QAAnFA,iBAAoF;QAAAA,8BACpF;QAAAA,kCAAW;QAAAA,iCAAgB;QAAAA,iBAAY;QAI3CA,gCAAmD;QACnCA;UAAA,OAASC,eAAW;QAAA,EAAC;QAACD,yBAAgC;QAACA,uBAAK;QAAAA,iBAAI;QAC9EA,mCAA2F;QAAAA,yBAChE;QAACA,0BAC5B;QAAAA,iBAAS;;;QAjCqBA,gBAAiC;QAAjCA,iDAAiC;QAKxCA,eAA4B;QAA5BA,8CAA4B;QAM7CA,eAAsC;QAAtCA,sDAAsC;QAMVA,eAAmC;QAAnCA,mDAAmC;QAOlBA,eAAkC;QAAlCA,kDAAkC;QAO3CA,eAAkC;QAAlCA,oDAAkC;;;;;;kCD3CtF;CAgHC,EAtGD;SAKa3D,yBAAyB","names":["Validators","MAT_DIALOG_DATA","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","dataCreditoEdit","Date","FormularioData","createForm","credito_edit","credito_edit_codigo","codigo","credito_edit_duracion","duracion","console","log","TiposCreditoEditComponent","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","descripcion","dataform","compose","required","es_fijo","fechareg","transform","fecha_actual","horareg","usuarioreg","data","value","errorMessage","update","subscribe","next","datav","_this","rubro","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","complete","parsedValue","parseFloat","isNaN","Number","isInteger","inputValue","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\ventas\\tipos-credito\\tipos-credito-edit\\tipos-credito-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\ventas\\tipos-credito\\tipos-credito-edit\\tipos-credito-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-tipos-credito-edit',\n  templateUrl: './tipos-credito-edit.component.html',\n  styleUrls: ['./tipos-credito-edit.component.scss']\n})\nexport class TiposCreditoEditComponent implements OnInit {\n  \n  FormularioData: FormGroup;\n  fecha_actual = new Date();\n  hora_actual = new Date();\n  dataform:any='';\n  rubro:any=[];\n  moneda:any=[];\n  empresa: any = [];\n  credito_edit: any = [];\n  userConn: any;\n  credito_edit_codigo: any = [];\n  credito_edit_duracion: any = []\n  userLogueado: any = [];\n  array_copy: any = [];\n  inputValue: number | null = null;\n  \n  public ventana=\"tipos-credito-edit\"\n  public detalle=\"tipos-credito-detalle\";\n  public tipo=\"transaccion-tipos-credito-UPDATE\";\n  \n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\n    private api:ApiService, public dialogRef: MatDialogRef<TiposCreditoEditComponent>, public _snackBar: MatSnackBar,\n    public log_module:LogService, private toastr: ToastrService, @Inject(MAT_DIALOG_DATA) public dataCreditoEdit: any){\n\n    this.FormularioData = this.createForm();\n\n    this.credito_edit = this.dataCreditoEdit.dataCreditoEdit;\n    this.credito_edit_codigo = this.dataCreditoEdit.dataCreditoEdit.codigo;\n    this.credito_edit_duracion = this.dataCreditoEdit.dataCreditoEdit.duracion;\n    console.log(this.credito_edit);\n  } \n\n  ngOnInit(): void {\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n  }\n\n  createForm(): FormGroup{\n    this.credito_edit_codigo = this.dataCreditoEdit.dataCreditoEdit.codigo;\n\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n   \n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      codigo: this.credito_edit_codigo,\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      es_fijo: [this.dataform.es_fijo],\n      duracion: [this.dataform.duracion, Validators.compose([Validators.required])],\n\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      horareg: [hora_actual_complete],\n      usuarioreg: [usuario_logueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:- /venta/mant/verubro/\";\n    \n    return this.api.update(\"/venta/mant/vetipocredito/\"+this.userConn+\"/\"+this.credito_edit.codigo, data)\n      .subscribe({\n        next: (datav) => {\n          this.rubro = datav;\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\n          \n          this.onNoClick();\n          this.spinner.show();\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\n\n          location.reload();      \n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n          this.toastr.error('! NO SE GUARDO !');\n        },\n        complete: () => { }\n      })\n  }\n  \n  onInputChange(value: string){\n    const parsedValue = parseFloat(value);\n\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    }else{\n      this.credito_edit.duracion = null;\n    }\n  }\n  \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Crear Tipos de Credito</h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <div class=\"row mb-2\">\n        <div class=\"col-md\">\n          <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n            <mat-label>CÃ³digo </mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"credito_edit_codigo\" disabled=\"true\">\n          </mat-form-field>\n        </div>\n      </div>\n\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n        <div class=\"row\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n              <mat-label>DescripciÃ³n </mat-label>\n              <input type=\"text\" matInput formControlName=\"descripcion\" maxlength=\"50\"\n                [(ngModel)]=\"credito_edit.descripcion\" required>\n            </mat-form-field>\n          </div>\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n              <mat-label>DuraciÃ³n Dias</mat-label>\n              <input type=\"number\" matInput [(ngModel)]=\"credito_edit.duracion\" formControlName=\"duracion\" min=\"0\"\n                step=\"1\" (input)=\"onInputChange($event.target.value)\" required>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <input type=\"checkbox\" formControlName=\"es_fijo\" [(ngModel)]=\"credito_edit.es_fijo\">&nbsp;&nbsp;\n            <mat-label>Es credito Fijo </mat-label>\n          </div>\n        </div>\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}