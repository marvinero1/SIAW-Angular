{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/button\";\nfunction NumeracionPagosMoraCreateComponent_mat_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-option\", 22);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var unidad_r1 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"value\", unidad_r1.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate2(\" \", unidad_r1.codigo, \" - \", unidad_r1.descripcion, \" \");\n  }\n}\nvar NumeracionPagosMoraCreateComponent = /** @class */function () {\n  function NumeracionPagosMoraCreateComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.tipPagMor = [];\n    this.negocio = [];\n    this.userLogueado = [];\n    this.inputValue = null;\n    this.ventana = \"tipPagosMora-create\";\n    this.detalle = \"tipPagosMora-detalle\";\n    this.tipo = \"transaccion-tipPagosMora-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n    this.getAllUnidadesNegocio();\n  }\n  NumeracionPagosMoraCreateComponent.prototype.ngOnInit = function () {};\n  NumeracionPagosMoraCreateComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      codunidad: [this.dataform.codunidad],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  NumeracionPagosMoraCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /ctsxcob/mant/cotipopagomora/\";\n    return this.api.create(\"/ctsxcob/mant/cotipopagomora/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.tipPagMor = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  NumeracionPagosMoraCreateComponent.prototype.getAllUnidadesNegocio = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\n    return this.api.getAll('/seg_adm/mant/adunidad/catalogo/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.negocio = datav;\n        console.log('data', datav);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  NumeracionPagosMoraCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  NumeracionPagosMoraCreateComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  };\n  NumeracionPagosMoraCreateComponent.Éµfac = function NumeracionPagosMoraCreateComponent_Factory(t) {\n    return new (t || NumeracionPagosMoraCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService));\n  };\n  NumeracionPagosMoraCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: NumeracionPagosMoraCreateComponent,\n    selectors: [[\"app-numeracion-pagos-mora-create\"]],\n    decls: 39,\n    vars: 4,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"id\", \"maxlength\", \"5\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"nroactual\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [1, \"col\"], [\"appearance\", \"outline\"], [\"formControlName\", \"codunidad\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [3, \"value\"]],\n    template: function NumeracionPagosMoraCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Tipos de Pagos de Mora\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function NumeracionPagosMoraCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(14, \"input\", 10);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"mat-form-field\", 9)(17, \"mat-label\");\n        i0.ÉµÉµtext(18, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"input\", 11);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(20, \"div\", 7)(21, \"div\", 8)(22, \"mat-form-field\", 9)(23, \"mat-label\");\n        i0.ÉµÉµtext(24, \"N\\u00FAmero Actual \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(25, \"input\", 12);\n        i0.ÉµÉµlistener(\"input\", function NumeracionPagosMoraCreateComponent_Template_input_input_25_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        })(\"ngModelChange\", function NumeracionPagosMoraCreateComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(26, \"div\", 13)(27, \"mat-form-field\", 14)(28, \"mat-label\");\n        i0.ÉµÉµtext(29, \"Unidad de Negocio\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(30, \"mat-select\", 15);\n        i0.ÉµÉµtemplate(31, NumeracionPagosMoraCreateComponent_mat_option_31_Template, 2, 3, \"mat-option\", 16);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(32, \"div\", 17)(33, \"a\", 18);\n        i0.ÉµÉµlistener(\"click\", function NumeracionPagosMoraCreateComponent_Template_a_click_33_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(34, \"i\", 19);\n        i0.ÉµÉµtext(35, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(36, \"button\", 20);\n        i0.ÉµÉµelement(37, \"i\", 21);\n        i0.ÉµÉµtext(38, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(17);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.negocio);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i10.MatSelect, i11.MatOption, i12.MatInput, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i13.MatAnchor, i13.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/cuentas-cobrar/numeracion-pagos-mora/numeracion-pagos-mora-create/numeracion-pagos-mora-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2N1ZW50YXMtY29icmFyL251bWVyYWNpb24tcGFnb3MtbW9yYS9udW1lcmFjaW9uLXBhZ29zLW1vcmEtY3JlYXRlL251bWVyYWNpb24tcGFnb3MtbW9yYS1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return NumeracionPagosMoraCreateComponent;\n}();\nexport { NumeracionPagosMoraCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","i0","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","Date","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","getAllUnidadesNegocio","NumeracionPagosMoraCreateComponent","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","dataform","compose","required","descripcion","nroactual","pattern","codunidad","horareg","fechareg","transform","fecha_actual","usuarioreg","data","value","errorMessage","create","subscribe","next","datav","_this","tipPagMor","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","getAll","negocio","close","parsedValue","parseFloat","isNaN","Number","isInteger","inputValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\numeracion-pagos-mora\\numeracion-pagos-mora-create\\numeracion-pagos-mora-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\numeracion-pagos-mora\\numeracion-pagos-mora-create\\numeracion-pagos-mora-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-numeracion-pagos-mora-create',\r\n  templateUrl: './numeracion-pagos-mora-create.component.html',\r\n  styleUrls: ['./numeracion-pagos-mora-create.component.scss']\r\n})\r\nexport class NumeracionPagosMoraCreateComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform:any='';\r\n  tipPagMor:any=[];\r\n  negocio:any=[];\r\n  userConn:any;\r\n  userLogueado:any=[];\r\n  inputValue: number | null = null;\r\n\r\n  public ventana=\"tipPagosMora-create\"\r\n  public detalle=\"tipPagosMora-detalle\";\r\n  public tipo=\"transaccion-tipPagosMora-POST\";\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<NumeracionPagosMoraCreateComponent>, public _snackBar: MatSnackBar,\r\n    public log_module: LogService, private toastr: ToastrService) {\r\n    \r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    this.FormularioData = this.createForm();\r\n    this.getAllUnidadesNegocio();\r\n  } \r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  createForm(): FormGroup{\r\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n  \r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      id: [this.dataform.id,Validators.compose([Validators.required])],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n      nroactual: [this.dataform.nroactual,Validators.pattern(/^-?\\d+$/)],\r\n      codunidad: [this.dataform.codunidad],\r\n\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      usuarioreg: [usuario_logueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:-- /ctsxcob/mant/cotipopagomora/\";\r\n    \r\n    return this.api.create(\"/ctsxcob/mant/cotipopagomora/\"+this.userConn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.tipPagMor = datav;\r\n\r\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\r\n          this.onNoClick();\r\n          this.spinner.show();\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getAllUnidadesNegocio(){\r\n    let errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\r\n    return this.api.getAll('/seg_adm/mant/adunidad/catalogo/'+this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.negocio = datav;\r\n          console.log('data', datav);\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onInputChange(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue = parsedValue;\r\n    } else {\r\n      this.inputValue = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #f0f0f0;\">\r\n  <div class=\"p-2\">\r\n    <h1 mat-dialog-title>Crear Tipos de Pagos de Mora</h1>\r\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n  </div>\r\n\r\n  <div mat-dialog-content>\r\n    <div class=\"container\">\r\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>CÃ³digo </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"id\" maxlength=\"5\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>DescripciÃ³n </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"30\" required>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>NÃºmero Actual </mat-label>\r\n              <input type=\"number\" (input)=\"onInputChange($event.target.value)\" min=\"0\" step=\"1\" matInput\r\n                formControlName=\"nroactual\" [(ngModel)]=\"inputValue\" required>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Unidad de Negocio</mat-label>\r\n              <mat-select formControlName=\"codunidad\" required>\r\n                <mat-option *ngFor=\"let unidad of negocio\" [value]=\"unidad.codigo\">\r\n                  {{ unidad.codigo }} - {{ unidad.descripcion }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\r\n\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\r\n              class=\"fa fa-save\"></i> Guardar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}