{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { NAVBAR_DARK_VARIANTS, NAVBAR_LIGHT_VARIANTS, SIDEBAR_DARK_SKINS, SIDEBAR_LIGHT_SKINS } from '@/utils/themes';\nimport * as Actions from './actions';\nimport initialState from './state';\nexport function uiReducer(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n  switch (action.type) {\n    case Actions.TOGGLE_SIDEBAR_MENU:\n      return __assign(__assign({}, state), {\n        menuSidebarCollapsed: !state.menuSidebarCollapsed\n      });\n    case Actions.TOGGLE_CONTROL_SIDEBAR:\n      return __assign(__assign({}, state), {\n        controlSidebarCollapsed: !state.controlSidebarCollapsed\n      });\n    case Actions.TOGGLE_DARK_MODE:\n      var variant = void 0;\n      var skin = void 0;\n      if (state.darkMode) {\n        variant = NAVBAR_LIGHT_VARIANTS[0].value;\n        skin = SIDEBAR_LIGHT_SKINS[0].value;\n      } else {\n        variant = NAVBAR_DARK_VARIANTS[0].value;\n        skin = SIDEBAR_DARK_SKINS[0].value;\n      }\n      return __assign(__assign({}, state), {\n        navbarVariant: variant,\n        sidebarSkin: skin,\n        darkMode: !state.darkMode\n      });\n    case Actions.SET_NAVBAR_VARIANT:\n      var navbarVariant = void 0;\n      if (state.darkMode) {\n        navbarVariant = action.payload || NAVBAR_DARK_VARIANTS[0].value;\n      } else {\n        navbarVariant = action.payload || NAVBAR_LIGHT_VARIANTS[0].value;\n      }\n      return __assign(__assign({}, state), {\n        navbarVariant: navbarVariant\n      });\n    case Actions.SET_SIDEBAR_SKIN:\n      var sidebarSkin = void 0;\n      if (state.darkMode) {\n        sidebarSkin = action.payload || SIDEBAR_DARK_SKINS[0].value;\n      } else {\n        sidebarSkin = action.payload || SIDEBAR_LIGHT_SKINS[0].value;\n      }\n      return __assign(__assign({}, state), {\n        sidebarSkin: sidebarSkin\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"mappings":";AAAA,SACIA,oBAAoB,EACpBC,qBAAqB,EACrBC,kBAAkB,EAClBC,mBAAmB,QAChB,gBAAgB;AACvB,OAAO,KAAKC,OAAO,MAAM,WAAW;AAEpC,OAAOC,YAAuB,MAAM,SAAS;AAE7C,OAAM,SAAUC,SAAS,CAACC,KAA6B,EAAEC,MAAgB;EAA/C;IAAAD,oBAA6B;EAAA;EACnD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKL,OAAO,CAACM,mBAAmB;MAC5B,6BACOH,KAAK;QACRI,oBAAoB,EAAE,CAACJ,KAAK,CAACI;MAAoB;IAEzD,KAAKP,OAAO,CAACQ,sBAAsB;MAC/B,6BACOL,KAAK;QACRM,uBAAuB,EAAE,CAACN,KAAK,CAACM;MAAuB;IAE/D,KAAKT,OAAO,CAACU,gBAAgB;MACzB,IAAIC,OAAO,SAAQ;MACnB,IAAIC,IAAI,SAAQ;MAChB,IAAIT,KAAK,CAACU,QAAQ,EAAE;QAChBF,OAAO,GAAGd,qBAAqB,CAAC,CAAC,CAAC,CAACiB,KAAK;QACxCF,IAAI,GAAGb,mBAAmB,CAAC,CAAC,CAAC,CAACe,KAAK;OACtC,MAAM;QACHH,OAAO,GAAGf,oBAAoB,CAAC,CAAC,CAAC,CAACkB,KAAK;QACvCF,IAAI,GAAGd,kBAAkB,CAAC,CAAC,CAAC,CAACgB,KAAK;;MAEtC,6BACOX,KAAK;QACRY,aAAa,EAAEJ,OAAO;QACtBK,WAAW,EAAEJ,IAAI;QACjBC,QAAQ,EAAE,CAACV,KAAK,CAACU;MAAQ;IAEjC,KAAKb,OAAO,CAACiB,kBAAkB;MAC3B,IAAIF,aAAa,SAAQ;MACzB,IAAIZ,KAAK,CAACU,QAAQ,EAAE;QAChBE,aAAa,GAAGX,MAAM,CAACc,OAAO,IAAItB,oBAAoB,CAAC,CAAC,CAAC,CAACkB,KAAK;OAClE,MAAM;QACHC,aAAa,GACTX,MAAM,CAACc,OAAO,IAAIrB,qBAAqB,CAAC,CAAC,CAAC,CAACiB,KAAK;;MAExD,6BACOX,KAAK;QACRY,aAAa;MAAA;IAErB,KAAKf,OAAO,CAACmB,gBAAgB;MACzB,IAAIH,WAAW,SAAQ;MACvB,IAAIb,KAAK,CAACU,QAAQ,EAAE;QAChBG,WAAW,GAAGZ,MAAM,CAACc,OAAO,IAAIpB,kBAAkB,CAAC,CAAC,CAAC,CAACgB,KAAK;OAC9D,MAAM;QACHE,WAAW,GAAGZ,MAAM,CAACc,OAAO,IAAInB,mBAAmB,CAAC,CAAC,CAAC,CAACe,KAAK;;MAEhE,6BACOX,KAAK;QACRa,WAAW;MAAA;IAEnB;MACI,OAAOb,KAAK;EAAC;AAEzB","names":["NAVBAR_DARK_VARIANTS","NAVBAR_LIGHT_VARIANTS","SIDEBAR_DARK_SKINS","SIDEBAR_LIGHT_SKINS","Actions","initialState","uiReducer","state","action","type","TOGGLE_SIDEBAR_MENU","menuSidebarCollapsed","TOGGLE_CONTROL_SIDEBAR","controlSidebarCollapsed","TOGGLE_DARK_MODE","variant","skin","darkMode","value","navbarVariant","sidebarSkin","SET_NAVBAR_VARIANT","payload","SET_SIDEBAR_SKIN"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\store\\ui\\reducer.ts"],"sourcesContent":["import {\r\n    NAVBAR_DARK_VARIANTS,\r\n    NAVBAR_LIGHT_VARIANTS,\r\n    SIDEBAR_DARK_SKINS,\r\n    SIDEBAR_LIGHT_SKINS\r\n} from '@/utils/themes';\r\nimport * as Actions from './actions';\r\nimport {UiAction} from './actions';\r\nimport initialState, {UiState} from './state';\r\n\r\nexport function uiReducer(state: UiState = initialState, action: UiAction) {\r\n    switch (action.type) {\r\n        case Actions.TOGGLE_SIDEBAR_MENU:\r\n            return {\r\n                ...state,\r\n                menuSidebarCollapsed: !state.menuSidebarCollapsed\r\n            };\r\n        case Actions.TOGGLE_CONTROL_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                controlSidebarCollapsed: !state.controlSidebarCollapsed\r\n            };\r\n        case Actions.TOGGLE_DARK_MODE:\r\n            let variant: string;\r\n            let skin: string;\r\n            if (state.darkMode) {\r\n                variant = NAVBAR_LIGHT_VARIANTS[0].value;\r\n                skin = SIDEBAR_LIGHT_SKINS[0].value;\r\n            } else {\r\n                variant = NAVBAR_DARK_VARIANTS[0].value;\r\n                skin = SIDEBAR_DARK_SKINS[0].value;\r\n            }\r\n            return {\r\n                ...state,\r\n                navbarVariant: variant,\r\n                sidebarSkin: skin,\r\n                darkMode: !state.darkMode\r\n            };\r\n        case Actions.SET_NAVBAR_VARIANT:\r\n            let navbarVariant: string;\r\n            if (state.darkMode) {\r\n                navbarVariant = action.payload || NAVBAR_DARK_VARIANTS[0].value;\r\n            } else {\r\n                navbarVariant =\r\n                    action.payload || NAVBAR_LIGHT_VARIANTS[0].value;\r\n            }\r\n            return {\r\n                ...state,\r\n                navbarVariant\r\n            };\r\n        case Actions.SET_SIDEBAR_SKIN:\r\n            let sidebarSkin: string;\r\n            if (state.darkMode) {\r\n                sidebarSkin = action.payload || SIDEBAR_DARK_SKINS[0].value;\r\n            } else {\r\n                sidebarSkin = action.payload || SIDEBAR_LIGHT_SKINS[0].value;\r\n            }\r\n            return {\r\n                ...state,\r\n                sidebarSkin\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}