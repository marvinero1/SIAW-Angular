{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ModalAlmacenComponent } from '@components/mantenimiento/inventario/almacen/modal-almacen/modal-almacen.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@components/mantenimiento/inventario/almacen/servicioalmacen/servicioalmacen.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@services/log-service.service\";\nimport * as i5 from \"@services/api.service\";\nimport * as i6 from \"ngx-toastr\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"ngx-spinner\";\nimport * as i9 from \"../../toma-inventario-consolidado.component\";\nimport * as i10 from \"../../services-refresh-item/service-refresh-items.service\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/card\";\nimport * as i14 from \"@angular/material/tooltip\";\nvar _c0 = [\"paginator\"];\nvar _c1 = [\"paginatorPageSize\"];\nfunction SaldosInventarioConsolidadoComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-card\", 2)(3, \"mat-card-header\", 3)(4, \"mat-card-title\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Atenci\\u00F3n\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"div\", 4)(9, \"div\", 5)(10, \"p\", 6);\n    i0.ɵɵtext(11, \"Antes de cargar saldos en este documento de inventario, usted \");\n    i0.ɵɵelementStart(12, \"strong\");\n    i0.ɵɵtext(13, \"DEBE DE ACTUALIZAR STOCK A LA FECHA DEL INVENTARIO\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \", caso contrario podria trabajar con saldos erroneos, si ya actualizo saldos actuales puede continuar. \");\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵelementStart(16, \"strong\");\n    i0.ɵɵtext(17, \"\\u00BF Desea Continuar ?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 7)(19, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SaldosInventarioConsolidadoComponent_ng_container_0_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.confirmacion());\n    });\n    i0.ɵɵelement(20, \"i\", 9);\n    i0.ɵɵtext(21, \" S\\u00ED \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22, \"\\u00A0 \");\n    i0.ɵɵelementStart(23, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SaldosInventarioConsolidadoComponent_ng_container_0_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.close());\n    });\n    i0.ɵɵelement(24, \"i\", 10);\n    i0.ɵɵtext(25, \" No \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\u00A0 \");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction SaldosInventarioConsolidadoComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-card\", 2)(3, \"mat-card-header\", 3)(4, \"mat-card-title\");\n    i0.ɵɵtext(5, \"Sacar Saldo Fisico\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"div\", 4)(8, \"div\", 5)(9, \"table\", 11)(10, \"tr\")(11, \"th\", 12)(12, \"div\", 13)(13, \"mat-label\", 14)(14, \"u\");\n    i0.ɵɵtext(15, \"Almacen\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function SaldosInventarioConsolidadoComponent_ng_container_1_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cod_almacen_cliente.codigo = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 16)(18, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function SaldosInventarioConsolidadoComponent_ng_container_1_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.modalAlmacen());\n    });\n    i0.ɵɵelement(19, \"i\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"mat-card-actions\", 19)(22, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SaldosInventarioConsolidadoComponent_ng_container_1_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.generarSaldoFisico());\n    });\n    i0.ɵɵelement(23, \"i\", 20);\n    i0.ɵɵtext(24, \" Generar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SaldosInventarioConsolidadoComponent_ng_container_1_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.close());\n    });\n    i0.ɵɵelement(26, \"i\", 10);\n    i0.ɵɵtext(27, \" Cerrar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\u00A0 \");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.cod_almacen_cliente.codigo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.cod_almacen_cliente.descripcion, \" \");\n  }\n}\nvar SaldosInventarioConsolidadoComponent = /** @class */function () {\n  function SaldosInventarioConsolidadoComponent(dialogRef, almacenservice, dialog, _formBuilder, log_module, api, toastr, datePipe, dataCabecera, spinner, tomaInventario, refreshItemSer) {\n    this.dialogRef = dialogRef;\n    this.almacenservice = almacenservice;\n    this.dialog = dialog;\n    this._formBuilder = _formBuilder;\n    this.log_module = log_module;\n    this.api = api;\n    this.toastr = toastr;\n    this.datePipe = datePipe;\n    this.dataCabecera = dataCabecera;\n    this.spinner = spinner;\n    this.tomaInventario = tomaInventario;\n    this.refreshItemSer = refreshItemSer;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.primera_ventana = true;\n    this.segunda_ventana = false;\n    this.cod_almacen_cliente = [];\n    this.saldo_inventario = [];\n    this.items = [];\n    this.dataSource = new MatTableDataSource();\n    this.dataSourceWithPageSize = new MatTableDataSource();\n    this.ventana = \"saldo-inventa-update\";\n    this.detalle = \"saldo-inventa-update\";\n    this.tipo = \"saldo-inventa-PUT\";\n    console.log(dataCabecera);\n    this.FormularioDataEdit = this.createForm();\n  }\n  SaldosInventarioConsolidadoComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.almacenservice.disparadorDeAlmacenes.subscribe(function (data) {\n      console.log(\"Recibiendo Almacen: \", data);\n      _this.cod_almacen_cliente = data.almacen;\n    });\n  };\n  SaldosInventarioConsolidadoComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.dataCabecera.dataCabecera.codigo],\n      id: [this.dataCabecera.dataCabecera.id],\n      numeroid: [this.dataCabecera.dataCabecera.numeroid],\n      fechainicio: [this.dataCabecera.dataCabecera.fechainicio],\n      fechafin: [this.dataCabecera.dataCabecera.fechafin],\n      obs: [this.dataCabecera.dataCabecera.obs],\n      codpersona: [this.dataCabecera.dataCabecera.codpersona],\n      codalmacen: [this.dataCabecera.dataCabecera.codalmacen],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado],\n      abierto: true\n    });\n  };\n  SaldosInventarioConsolidadoComponent.prototype.generarSaldoFisico = function () {\n    var _this = this;\n    var data = this.FormularioDataEdit.value;\n    console.log(data);\n    this.errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:- /inventario/oper/prgsaldoinv Update\";\n    return this.api.update('/inventario/oper/prgsaldoinv/' + this.userConn + \"/\" + this.dataCabecera.dataCabecera.codigo + \"/\" + this.cod_almacen_cliente.codigo, data).subscribe({\n      next: function (datav) {\n        _this.saldo_inventario = datav;\n        _this.spinner.show();\n        setTimeout(function () {\n          _this.spinner.hide();\n        }, 1500);\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.toastr.success('! SALDO EXITOSO !');\n        _this.close();\n      },\n      error: function (err) {\n        _this.toastr.error('! NO SE SACO LOS SALDOS !');\n        console.log(err, _this.errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  SaldosInventarioConsolidadoComponent.prototype.modalAlmacen = function () {\n    this.dialog.open(ModalAlmacenComponent, {\n      width: 'auto',\n      height: 'auto',\n      data: {\n        almacen: \"almacen\"\n      }\n    });\n  };\n  SaldosInventarioConsolidadoComponent.prototype.confirmacion = function () {\n    this.segunda_ventana = true;\n    this.primera_ventana = false;\n  };\n  SaldosInventarioConsolidadoComponent.prototype.close = function () {\n    this.dialogRef.close();\n    this.refreshItemSer.callItemFunction();\n  };\n  SaldosInventarioConsolidadoComponent.ɵfac = function SaldosInventarioConsolidadoComponent_Factory(t) {\n    return new (t || SaldosInventarioConsolidadoComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ServicioalmacenService), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.LogService), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i6.ToastrService), i0.ɵɵdirectiveInject(i7.DatePipe), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i8.NgxSpinnerService), i0.ɵɵdirectiveInject(i9.TomaInventarioConsolidadoComponent), i0.ɵɵdirectiveInject(i10.ServiceRefreshItemsService));\n  };\n  SaldosInventarioConsolidadoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SaldosInventarioConsolidadoComponent,\n    selectors: [[\"app-saldos-inventario-consolidado\"]],\n    viewQuery: function SaldosInventarioConsolidadoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        var _t = void 0;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginatorPageSize = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [1, \"p-2\"], [2, \"background-color\", \"#f0f0f0\"], [1, \"mb-1\"], [1, \"row\"], [1, \"col\"], [1, \"text-center\"], [2, \"float\", \"right\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"fa\", \"fa-check\"], [1, \"fa\", \"fa-times\"], [1, \"tg\"], [1, \"tg-0lax\"], [1, \"input-group\"], [2, \"padding-right\", \"5px\", \"padding-top\", \"7px\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", \"matTooltip\", \"Buscar Almacen\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-color\", \"#093070\", \"padding\", \"4px 5px 1px 5px\", \"line-height\", \"0 !important\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"align\", \"start\"], [1, \"fa\", \"fa-cogs\"]],\n    template: function SaldosInventarioConsolidadoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SaldosInventarioConsolidadoComponent_ng_container_0_Template, 27, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, SaldosInventarioConsolidadoComponent_ng_container_1_Template, 29, 2, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.primera_ventana);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.segunda_ventana);\n      }\n    },\n    dependencies: [i7.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i11.MatLabel, i12.MatButton, i13.MatCard, i13.MatCardActions, i13.MatCardContent, i13.MatCardHeader, i13.MatCardTitle, i14.MatTooltip],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return SaldosInventarioConsolidadoComponent;\n}();\nexport { SaldosInventarioConsolidadoComponent };","map":{"version":3,"mappings":"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","names":["MAT_DIALOG_DATA","MatTableDataSource","ModalAlmacenComponent","i0","dialogRef","almacenservice","dialog","_formBuilder","log_module","api","toastr","datePipe","dataCabecera","spinner","tomaInventario","refreshItemSer","Date","console","log","FormularioDataEdit","createForm","SaldosInventarioConsolidadoComponent","userConn","localStorage","getItem","undefined","JSON","parse","disparadorDeAlmacenes","subscribe","data","_this","cod_almacen_cliente","almacen","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","id","numeroid","fechainicio","fechafin","obs","codpersona","codalmacen","horareg","fechareg","transform","fecha_actual","usuarioreg","abierto","value","errorMessage","update","next","datav","saldo_inventario","show","setTimeout","hide","guardarLog","ventana","detalle","tipo","success","close","error","err","complete","open","width","height","segunda_ventana","primera_ventana","callItemFunction","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\inventario\\toma-inventario-consolidado\\saldos\\saldos-inventario-consolidado\\saldos-inventario-consolidado.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\inventario\\toma-inventario-consolidado\\saldos\\saldos-inventario-consolidado\\saldos-inventario-consolidado.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TomaInventarioConsolidadoComponent } from '../../toma-inventario-consolidado.component';\r\nimport { ServicioalmacenService } from '@components/mantenimiento/inventario/almacen/servicioalmacen/servicioalmacen.service';\r\nimport { ServiceRefreshItemsService } from '../../services-refresh-item/service-refresh-items.service';\r\nimport { ModalAlmacenComponent } from '@components/mantenimiento/inventario/almacen/modal-almacen/modal-almacen.component';\r\n@Component({\r\n  selector: 'app-saldos-inventario-consolidado',\r\n  templateUrl: './saldos-inventario-consolidado.component.html',\r\n  styleUrls: ['./saldos-inventario-consolidado.component.scss']\r\n})\r\nexport class SaldosInventarioConsolidadoComponent implements OnInit {\r\n\r\n  FormularioDataEdit:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform: any;\r\n  \r\n  primera_ventana = true;\r\n  segunda_ventana = false;\r\n  cod_almacen_cliente: any = [];\r\n  saldo_inventario: any = [];\r\n  items: any = [];\r\n  errorMessage: string;\r\n  userConn: any;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  dataSourceWithPageSize = new MatTableDataSource();\r\n\r\n  @ViewChild('paginator') paginator: MatPaginator;\r\n  @ViewChild('paginatorPageSize') paginatorPageSize: MatPaginator;\r\n  \r\n  public ventana=\"saldo-inventa-update\"\r\n  public detalle=\"saldo-inventa-update\";\r\n  public tipo = \"saldo-inventa-PUT\";\r\n  \r\n  constructor(public dialogRef: MatDialogRef<SaldosInventarioConsolidadoComponent>, public almacenservice: ServicioalmacenService,\r\n    public dialog: MatDialog, private _formBuilder: FormBuilder, public log_module: LogService, private api: ApiService,\r\n    private toastr: ToastrService, private datePipe: DatePipe, @Inject(MAT_DIALOG_DATA) public dataCabecera: any,\r\n    private spinner: NgxSpinnerService,public tomaInventario:TomaInventarioConsolidadoComponent, private refreshItemSer: ServiceRefreshItemsService){    \r\n\r\n    console.log(dataCabecera);\r\n    this.FormularioDataEdit = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n       \r\n    this.almacenservice.disparadorDeAlmacenes.subscribe(data =>{\r\n      console.log(\"Recibiendo Almacen: \", data);\r\n      this.cod_almacen_cliente = data.almacen;\r\n    });\r\n  }\r\n\r\n  createForm(): FormGroup {\r\n    const usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.dataCabecera.dataCabecera.codigo],\r\n      id: [this.dataCabecera.dataCabecera.id],\r\n      numeroid: [this.dataCabecera.dataCabecera.numeroid],\r\n      fechainicio: [this.dataCabecera.dataCabecera.fechainicio],\r\n      fechafin: [this.dataCabecera.dataCabecera.fechafin],\r\n      obs: [this.dataCabecera.dataCabecera.obs],\r\n      codpersona: [this.dataCabecera.dataCabecera.codpersona],\r\n      codalmacen: [this.dataCabecera.dataCabecera.codalmacen],\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      usuarioreg: [usuario_logueado],\r\n      abierto:true,\r\n    });\r\n  } \r\n  \r\n  generarSaldoFisico(){\r\n    let data = this.FormularioDataEdit.value;\r\n \r\n    console.log(data);\r\n \r\n    this.errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:- /inventario/oper/prgsaldoinv Update\";\r\n    return this.api.update('/inventario/oper/prgsaldoinv/'+this.userConn+\"/\"+this.dataCabecera.dataCabecera.codigo+\"/\"+this.cod_almacen_cliente.codigo, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.saldo_inventario = datav;\r\n\r\n          this.spinner.show();\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1500);\r\n\r\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n          this.toastr.success('! SALDO EXITOSO !');\r\n          \r\n          this.close();\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          this.toastr.error('! NO SE SACO LOS SALDOS !');\r\n          console.log(err, this.errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  modalAlmacen(): void {\r\n    this.dialog.open(ModalAlmacenComponent, {\r\n      width: 'auto',\r\n      height: 'auto',\r\n      data:{almacen:\"almacen\"}\r\n    });\r\n  }\r\n\r\n  confirmacion(){ \r\n    this.segunda_ventana = true\r\n\r\n    this.primera_ventana = false;\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n    this.refreshItemSer.callItemFunction();\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"primera_ventana\">\r\n  <div class=\"p-2\">\r\n    <mat-card style=\"background-color: #f0f0f0;\">\r\n      <mat-card-header class=\"mb-1\">\r\n        <mat-card-title><strong>Atención</strong></mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n\r\n            <p class=\"text-center\">Antes de cargar saldos en este documento de inventario, usted <strong>DEBE DE\r\n                ACTUALIZAR STOCK A LA FECHA\r\n                DEL INVENTARIO</strong>,\r\n              caso contrario podria trabajar con saldos erroneos, si ya actualizo saldos actuales puede continuar. <br>\r\n              <strong>¿ Desea Continuar ?</strong>\r\n            </p>\r\n\r\n            <div style=\"float: right;\">\r\n              <button mat-raised-button color=\"primary\" (click)=\"confirmacion()\"><i class=\"fa fa-check\"></i> Sí\r\n              </button>&nbsp;\r\n              <button mat-raised-button color=\"primary\" (click)=\"close()\"><i class=\"fa fa-times\"></i> No </button>&nbsp;\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"segunda_ventana\">\r\n  <div class=\"p-2\">\r\n    <mat-card style=\"background-color: #f0f0f0;\">\r\n      <mat-card-header class=\"mb-1\">\r\n        <mat-card-title>Sacar Saldo Fisico</mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <table class=\"tg\">\r\n              <tr>\r\n                <th class=\"tg-0lax\">\r\n                  <div class=\"input-group\">\r\n                    <mat-label style=\"padding-right: 5px;padding-top: 7px;\"><u>Almacen</u></mat-label>\r\n                    <input type=\"text\" [(ngModel)]=\"cod_almacen_cliente.codigo\">\r\n\r\n                    <div class=\"input-group-append\">\r\n                      <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"modalAlmacen()\"\r\n                        style=\"border-color: #093070;padding: 4px 5px 1px 5px;line-height: 0 !important;\"\r\n                        matTooltip=\"Buscar Almacen\">\r\n                        <i class=\"fa fa-search\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {{ cod_almacen_cliente.descripcion }}\r\n                </th>\r\n              </tr>\r\n            </table>\r\n\r\n            <mat-card-actions align=\"start\">\r\n              <button mat-raised-button color=\"primary\" (click)=\"generarSaldoFisico();\"><i class=\"fa fa-cogs\"></i>\r\n                Generar\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" (click)=\"close()\"><i class=\"fa fa-times\"></i> Cerrar\r\n              </button>&nbsp;\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</ng-container>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}