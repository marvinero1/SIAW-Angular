{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * @private\n */\nclass DataProvider {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", {});\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Set options for data provider.\n   *\n   * @param {object} options Object with specified options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n\n  /**\n   * Get table data based on provided settings to the class constructor.\n   *\n   * @returns {Array}\n   */\n  getData() {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = this._getDataRange();\n    const options = this.options;\n    const data = [];\n    rangeEach(startRow, endRow, rowIndex => {\n      const row = [];\n      if (!options.exportHiddenRows && this._isHiddenRow(rowIndex)) {\n        return;\n      }\n      rangeEach(startCol, endCol, colIndex => {\n        if (!options.exportHiddenColumns && this._isHiddenColumn(colIndex)) {\n          return;\n        }\n        row.push(this.hot.getDataAtCell(rowIndex, colIndex));\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  /**\n   * Gets list of row headers.\n   *\n   * @returns {Array}\n   */\n  getRowHeaders() {\n    const headers = [];\n    if (this.options.rowHeaders) {\n      const {\n        startRow,\n        endRow\n      } = this._getDataRange();\n      const rowHeaders = this.hot.getRowHeader();\n      rangeEach(startRow, endRow, row => {\n        if (!this.options.exportHiddenRows && this._isHiddenRow(row)) {\n          return;\n        }\n        headers.push(rowHeaders[row]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Gets list of columns headers.\n   *\n   * @returns {Array}\n   */\n  getColumnHeaders() {\n    const headers = [];\n    if (this.options.columnHeaders) {\n      const {\n        startCol,\n        endCol\n      } = this._getDataRange();\n      const colHeaders = this.hot.getColHeader();\n      rangeEach(startCol, endCol, column => {\n        if (!this.options.exportHiddenColumns && this._isHiddenColumn(column)) {\n          return;\n        }\n        headers.push(colHeaders[column]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Get data range object based on settings provided in the class constructor.\n   *\n   * @private\n   * @returns {object} Returns object with keys `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  _getDataRange() {\n    const cols = this.hot.countCols() - 1;\n    const rows = this.hot.countRows() - 1;\n    let [startRow = 0, startCol = 0, endRow = rows, endCol = cols] = this.options.range;\n    startRow = Math.max(startRow, 0);\n    startCol = Math.max(startCol, 0);\n    endRow = Math.min(endRow, rows);\n    endCol = Math.min(endCol, cols);\n    return {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    };\n  }\n\n  /**\n   * Check if row at specified row index is hidden.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  _isHiddenRow(row) {\n    return this.hot.rowIndexMapper.isHidden(this.hot.toPhysicalRow(row));\n  }\n\n  /**\n   * Check if column at specified column index is hidden.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  _isHiddenColumn(column) {\n    return this.hot.columnIndexMapper.isHidden(this.hot.toPhysicalColumn(column));\n  }\n}\nexport default DataProvider;","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","rangeEach","DataProvider","constructor","hotInstance","hot","setOptions","options","getData","startRow","startCol","endRow","endCol","_getDataRange","data","rowIndex","row","exportHiddenRows","_isHiddenRow","colIndex","exportHiddenColumns","_isHiddenColumn","push","getDataAtCell","getRowHeaders","headers","rowHeaders","getRowHeader","getColumnHeaders","columnHeaders","colHeaders","getColHeader","column","cols","countCols","rows","countRows","range","Math","max","min","rowIndexMapper","isHidden","toPhysicalRow","columnIndexMapper","toPhysicalColumn"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/exportFile/dataProvider.mjs"],"sourcesContent":["import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * @private\n */\nclass DataProvider {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", {});\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Set options for data provider.\n   *\n   * @param {object} options Object with specified options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n\n  /**\n   * Get table data based on provided settings to the class constructor.\n   *\n   * @returns {Array}\n   */\n  getData() {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = this._getDataRange();\n    const options = this.options;\n    const data = [];\n    rangeEach(startRow, endRow, rowIndex => {\n      const row = [];\n      if (!options.exportHiddenRows && this._isHiddenRow(rowIndex)) {\n        return;\n      }\n      rangeEach(startCol, endCol, colIndex => {\n        if (!options.exportHiddenColumns && this._isHiddenColumn(colIndex)) {\n          return;\n        }\n        row.push(this.hot.getDataAtCell(rowIndex, colIndex));\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  /**\n   * Gets list of row headers.\n   *\n   * @returns {Array}\n   */\n  getRowHeaders() {\n    const headers = [];\n    if (this.options.rowHeaders) {\n      const {\n        startRow,\n        endRow\n      } = this._getDataRange();\n      const rowHeaders = this.hot.getRowHeader();\n      rangeEach(startRow, endRow, row => {\n        if (!this.options.exportHiddenRows && this._isHiddenRow(row)) {\n          return;\n        }\n        headers.push(rowHeaders[row]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Gets list of columns headers.\n   *\n   * @returns {Array}\n   */\n  getColumnHeaders() {\n    const headers = [];\n    if (this.options.columnHeaders) {\n      const {\n        startCol,\n        endCol\n      } = this._getDataRange();\n      const colHeaders = this.hot.getColHeader();\n      rangeEach(startCol, endCol, column => {\n        if (!this.options.exportHiddenColumns && this._isHiddenColumn(column)) {\n          return;\n        }\n        headers.push(colHeaders[column]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Get data range object based on settings provided in the class constructor.\n   *\n   * @private\n   * @returns {object} Returns object with keys `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  _getDataRange() {\n    const cols = this.hot.countCols() - 1;\n    const rows = this.hot.countRows() - 1;\n    let [startRow = 0, startCol = 0, endRow = rows, endCol = cols] = this.options.range;\n    startRow = Math.max(startRow, 0);\n    startCol = Math.max(startCol, 0);\n    endRow = Math.min(endRow, rows);\n    endCol = Math.min(endCol, cols);\n    return {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    };\n  }\n\n  /**\n   * Check if row at specified row index is hidden.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  _isHiddenRow(row) {\n    return this.hot.rowIndexMapper.isHidden(this.hot.toPhysicalRow(row));\n  }\n\n  /**\n   * Check if column at specified column index is hidden.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  _isHiddenColumn(column) {\n    return this.hot.columnIndexMapper.isHidden(this.hot.toPhysicalColumn(column));\n  }\n}\nexport default DataProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}