{"ast":null,"code":"import { FormBuilder, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@services/log-service.service\";\nimport * as i9 from \"@modules/main/footer/servicio-nombre-ventana/nombre-ventana.service\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/list\";\nfunction PeriodosSistemaComponent_mat_list_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"mat-list-option\", 23);\n    i0.ÉµÉµlistener(\"click\", function PeriodosSistemaComponent_mat_list_option_27_Template_mat_list_option_click_0_listener() {\n      var restoredCtx = i0.ÉµÉµrestoreView(_r5);\n      var fecha_aperturas_r3 = restoredCtx.$implicit;\n      var ctx_r4 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r4.seleccionarFila(fecha_aperturas_r3));\n    });\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelement(2, \"hr\", 24);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var fecha_aperturas_r3 = ctx.$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate2(\"\", fecha_aperturas_r3.ano, \" - \", fecha_aperturas_r3.descripcion, \" \");\n  }\n}\nfunction PeriodosSistemaComponent_ng_container_45_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"tr\")(1, \"td\", 26);\n    i0.ÉµÉµelement(2, \"input\", 27)(3, \"input\", 27);\n    i0.ÉµÉµelementStart(4, \"input\", 28);\n    i0.ÉµÉµlistener(\"change\", function PeriodosSistemaComponent_ng_container_45_tr_1_Template_input_change_4_listener() {\n      var restoredCtx = i0.ÉµÉµrestoreView(_r9);\n      var detalleComparacion_r7 = restoredCtx.$implicit;\n      var ctx_r8 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r8.onCheckboxChange(detalleComparacion_r7));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtext(5);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    var detalleComparacion_r7 = ctx.$implicit;\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", detalleComparacion_r7.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"value\", detalleComparacion_r7.sistema);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"checked\", detalleComparacion_r7.check);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", detalleComparacion_r7.descripcion, \" \");\n  }\n}\nfunction PeriodosSistemaComponent_ng_container_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, PeriodosSistemaComponent_ng_container_45_tr_1_Template, 6, 4, \"tr\", 25);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r1.detalle_comparacion);\n  }\n}\nfunction PeriodosSistemaComponent_ng_container_46_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"tr\")(1, \"td\", 26);\n    i0.ÉµÉµelement(2, \"input\", 27)(3, \"input\", 27);\n    i0.ÉµÉµelementStart(4, \"input\", 28);\n    i0.ÉµÉµlistener(\"change\", function PeriodosSistemaComponent_ng_container_46_tr_1_Template_input_change_4_listener() {\n      var restoredCtx = i0.ÉµÉµrestoreView(_r13);\n      var detalleComparacion_r11 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r12.onCheckboxChange(detalleComparacion_r11));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtext(5);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    var detalleComparacion_r11 = ctx.$implicit;\n    var ctx_r10 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", detalleComparacion_r11.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"value\", ctx_r10.ultimoElementoCodigo + 1);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"checked\", detalleComparacion_r11.check);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", detalleComparacion_r11.descripcion, \" \");\n  }\n}\nfunction PeriodosSistemaComponent_ng_container_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, PeriodosSistemaComponent_ng_container_46_tr_1_Template, 6, 4, \"tr\", 25);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    var ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r2.modulos);\n  }\n}\nvar PeriodosSistemaComponent = /** @class */function () {\n  function PeriodosSistemaComponent(api, dialog, spinner, toastr, _formBuilder, _snackBar, datePipe, log_module, nombre_ventana_service) {\n    this.api = api;\n    this.dialog = dialog;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this._formBuilder = _formBuilder;\n    this._snackBar = _snackBar;\n    this.datePipe = datePipe;\n    this.log_module = log_module;\n    this.nombre_ventana_service = nombre_ventana_service;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.fecha_apertura = [];\n    this.modulo_apertura = [];\n    this.sin_detalle = [];\n    this.detalle_comparacion = [];\n    this.detalle_comparacion_copia_post = [];\n    this.data_save = [];\n    this.array_manipulacion = [];\n    this.periodo_save = [];\n    this.dataform = '';\n    this.check_apertura_post = [];\n    this.codigo = [];\n    this.descripcion = [];\n    this.sistema = [];\n    this.formularios = [];\n    this.arrayModificado = [];\n    this.save_periods = [];\n    this.modulos = [{\n      \"codigo\": 1,\n      \"descripcion\": \"ADMINISTRACION\"\n    }, {\n      \"codigo\": 2,\n      \"descripcion\": \"INVENTARIOS\"\n    }, {\n      \"codigo\": 3,\n      \"descripcion\": \"VENTAS\"\n    }, {\n      \"codigo\": 4,\n      \"descripcion\": \"CTAS POR COBRAR\"\n    }, {\n      \"codigo\": 5,\n      \"descripcion\": \"CONTABILIDAD\"\n    }, {\n      \"codigo\": 6,\n      \"descripcion\": \"ACTIVOS FIJOS\"\n    }, {\n      \"codigo\": 7,\n      \"descripcion\": \"COSTOS Y COSTEO\"\n    }, {\n      \"codigo\": 8,\n      \"descripcion\": \"IMPORTACIONES\"\n    }, {\n      \"codigo\": 9,\n      \"descripcion\": \"PERSONAL Y PLANILLAS\"\n    }, {\n      \"codigo\": 10,\n      \"descripcion\": \"SEGURIDAD\"\n    }, {\n      \"codigo\": 11,\n      \"descripcion\": \"COMPRAS\"\n    }, {\n      \"codigo\": 12,\n      \"descripcion\": \"FONDOS\"\n    }];\n    this.nombre_ventana = \"abmadapertura.vb\";\n    this.ventana = \"Periodos de Apertura/Cierre\";\n    this.detalle = \"ActualizarStock-create\";\n    this.tipo = \"ActualizarStock-CREATE\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.mandarNombre();\n    this.api.getRolUserParaVentana(this.usuarioLogueado, this.nombre_ventana);\n  }\n  ;\n  PeriodosSistemaComponent.prototype.ngOnInit = function () {\n    this.getFechaApertura();\n  };\n  PeriodosSistemaComponent.prototype.onCheckboxChange = function (detalle_comparacion) {\n    detalle_comparacion.check = !detalle_comparacion.check; // Cambia el valor del checkbox\n    console.log(this.detalle_comparacion);\n  };\n  PeriodosSistemaComponent.prototype.guardarCambios = function () {\n    var _this = this;\n    this.detalle_comparacion_copia_post = this.detalle_comparacion.slice();\n    console.log(this.detalle_comparacion_copia_post);\n    this.detalle_comparacion_copia_post = this.detalle_comparacion_copia_post.filter(function (item) {\n      return item.check == true;\n    });\n    var primerElemento = this.detalle_comparacion_copia_post[0];\n    // Crear un formulario para cada elemento en el array\n    this.formularios = this.detalle_comparacion_copia_post.map(function (item) {\n      return _this._formBuilder.group({\n        codigo: [item.codigo],\n        sistema: [item.sistema]\n      });\n    });\n    var valoresFormularios = this.formularios.map(function (formulario) {\n      return formulario.value;\n    });\n    console.log(valoresFormularios);\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /seg_adm/mant/adarea/\";\n    return this.api.create(\"/seg_adm/mant/abmadapertura/\" + this.userConn + '/' + primerElemento.codigo, valoresFormularios).subscribe({\n      next: function (datav) {\n        _this.save_periods = datav;\n        console.log(_this.save_periods);\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.spinner.show();\n        setTimeout(function () {\n          _this.spinner.hide();\n        }, 1500);\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  PeriodosSistemaComponent.prototype.seleccionarFila = function (item) {\n    this.item_seleccionado = item;\n    this.mes = item.mes;\n    this.anio = item.ano;\n    item.seleccionado = !item.seleccionado;\n    this.arrayModificado.splice(0, this.arrayModificado.length);\n    this.getCheckSelects(item);\n  };\n  PeriodosSistemaComponent.prototype.getCheckSelects = function (element) {\n    var _this = this;\n    var codigo = element.codigo;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getdetalle/\";\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getdetalle/' + this.userConn + \"/\" + codigo).subscribe({\n      next: function (datav) {\n        //ACA MODULO DE MES EXISTENTE\n        // detalle del mes va con su descripcion, comparar con la descripcion de modulos\n        _this.detalle_comparacion = datav;\n        console.log(_this.detalle_comparacion);\n        _this.getAperturaModulo();\n        _this.data_check = true;\n        _this.spinner.show();\n        setTimeout(function () {\n          _this.spinner.hide();\n        }, 1500);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        //ACA MODULO DE MES INEXISTENTE\n        if (err) {\n          _this.data_check = false;\n          _this.check = false;\n          _this.getAperturaModulo();\n        }\n        console.log(_this.data_check, _this.check);\n      },\n      complete: function () {}\n    });\n  };\n  PeriodosSistemaComponent.prototype.getFechaApertura = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getadapertura/\";\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getadapertura/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.fecha_apertura = datav;\n        console.log(_this.fecha_apertura);\n        _this.ultimoElementoMes = _this.fecha_apertura[0].mes;\n        _this.ultimoElementoCodigo = _this.fecha_apertura[0].codigo;\n        _this.ultimoElementoAnio = _this.fecha_apertura[0].ano;\n        console.log(_this.ultimoElementoAnio, _this.ultimoElementoCodigo, _this.ultimoElementoMes);\n        _this.spinner.show();\n        setTimeout(function () {\n          _this.spinner.hide();\n        }, 1500);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  PeriodosSistemaComponent.prototype.getAperturaModulo = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getsemodulo/\";\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getsemodulo/' + this.userConn).subscribe({\n      next: function (datav) {\n        // modulos apertura descripcion\n        _this.modulo_apertura = datav;\n        console.log(_this.modulo_apertura);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  PeriodosSistemaComponent.prototype.nuevoPeriodo = function () {\n    var _this = this;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    if (this.ultimoElementoMes == 12) {\n      var dataAnioNuevo = {\n        codigo: 0,\n        ano: this.ultimoElementoAnio + 1,\n        mes: 1,\n        horareg: hora_actual_complete,\n        fechareg: this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\"),\n        usuarioreg: this.usuarioLogueado\n      };\n      console.log(\"Anio: \", dataAnioNuevo);\n      var errorMessage_1 = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:- /seg_adm/mant/abmadapertura/\";\n      return this.api.create(\"/seg_adm/mant/abmadapertura/addPeriodo/\" + this.userConn, dataAnioNuevo).subscribe({\n        next: function (datav) {\n          _this.periodo_save = datav;\n          console.log('data', datav);\n          _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n          _this.spinner.show();\n          setTimeout(function () {\n            _this.spinner.hide();\n          }, 2000);\n          _this.toastr.success('! SE GUARDO EXITOSAMENTE !');\n          _this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\n            duration: 3000,\n            panelClass: ['coorporativo-snackbar', 'login-snackbar']\n          });\n          _this.getFechaApertura();\n        },\n        error: function (err) {\n          console.log(err, errorMessage_1);\n        },\n        complete: function () {}\n      });\n    } else {\n      var data = {\n        codigo: 0,\n        ano: this.ultimoElementoAnio,\n        mes: this.ultimoElementoMes + 1,\n        horareg: hora_actual_complete,\n        fechareg: this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\"),\n        usuarioreg: this.usuarioLogueado\n      };\n      console.log(data);\n      var errorMessage_2 = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:- /seg_adm/mant/abmadapertura/\";\n      return this.api.create(\"/seg_adm/mant/abmadapertura/addPeriodo/\" + this.userConn, data).subscribe({\n        next: function (datav) {\n          _this.periodo_save = datav;\n          console.log('data', datav);\n          _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n          _this.spinner.show();\n          setTimeout(function () {\n            _this.spinner.hide();\n          }, 2000);\n          _this.toastr.success('! SE GUARDO EXITOSAMENTE !');\n          _this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\n            duration: 3000,\n            panelClass: ['coorporativo-snackbar', 'login-snackbar']\n          });\n          _this.getFechaApertura();\n        },\n        error: function (err) {\n          console.log(err, errorMessage_2);\n        },\n        complete: function () {}\n      });\n    }\n  };\n  PeriodosSistemaComponent.prototype.mandarNombre = function () {\n    this.nombre_ventana_service.disparadorDeNombreVentana.emit({\n      nombre_vent: this.ventana\n    });\n  };\n  PeriodosSistemaComponent.Éµfac = function PeriodosSistemaComponent_Factory(t) {\n    return new (t || PeriodosSistemaComponent)(i0.ÉµÉµdirectiveInject(i1.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialog), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ToastrService), i0.ÉµÉµdirectiveInject(i5.FormBuilder), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.DatePipe), i0.ÉµÉµdirectiveInject(i8.LogService), i0.ÉµÉµdirectiveInject(i9.NombreVentanaService));\n  };\n  PeriodosSistemaComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: PeriodosSistemaComponent,\n    selectors: [[\"app-periodos-sistema\"]],\n    decls: 51,\n    vars: 8,\n    consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"p-2\"], [2, \"background-color\", \"#ffffc0\"], [1, \"mb-1\"], [\"align\", \"start\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"fa\", \"fa-plus\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"table-responsive\", 2, \"height\", \"46vh !important\"], [1, \"table\"], [1, \"tr1\", \"text-center\", 2, \"background-color\", \"#f0f0f0\"], [\"scope\", \"col\"], [2, \"text-align\", \"center\", 3, \"multiple\", \"disableRipple\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"col\"], [\"mat-button\", \"\", \"mat-raised-button\", \"\", 1, \"success\", \"mdc-button\", 2, \"float\", \"right\", 3, \"click\"], [1, \"tg1\"], [4, \"ngIf\"], [\"bdColor\", \"rgba(251, 216, 0, 0.8)\", \"size\", \"large\", \"color\", \"#093070\", \"type\", \"square-loader\", 3, \"fullScreen\"], [2, \"font-size\", \"25px\", \"color\", \"rgb(9,48,112,)\"], [3, \"click\"], [2, \"margin-top\", \"0rem !important\", \"margin-bottom\", \"0rem !important\"], [4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"left !important\"], [\"type\", \"text\", 3, \"value\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n    template: function PeriodosSistemaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-header\", 4)(5, \"mat-card-title\");\n        i0.ÉµÉµtext(6, \"Apertura/Cierre de M\\u00F3dulos\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(7, \"mat-card-content\")(8, \"mat-card-actions\", 5)(9, \"button\", 6);\n        i0.ÉµÉµlistener(\"click\", function PeriodosSistemaComponent_Template_button_click_9_listener() {\n          return ctx.nuevoPeriodo();\n        });\n        i0.ÉµÉµelement(10, \"i\", 7);\n        i0.ÉµÉµtext(11, \" Nuevo\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"span\")(15, \"u\");\n        i0.ÉµÉµtext(16, \"Periodos de Control\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(17, \"mat-card\")(18, \"mat-card-content\")(19, \"div\", 10)(20, \"table\", 11)(21, \"thead\")(22, \"tr\", 12)(23, \"th\", 13);\n        i0.ÉµÉµtext(24, \"A\\u00D1O - MES\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(25, \"tbody\")(26, \"mat-selection-list\", 14);\n        i0.ÉµÉµtemplate(27, PeriodosSistemaComponent_mat_list_option_27_Template, 3, 2, \"mat-list-option\", 15);\n        i0.ÉµÉµelementEnd()()()()()()();\n        i0.ÉµÉµelementStart(28, \"div\", 16)(29, \"div\", 8)(30, \"div\", 17)(31, \"span\")(32, \"u\");\n        i0.ÉµÉµtext(33, \"M\\u00F3dulos\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelement(34, \"br\");\n        i0.ÉµÉµelementStart(35, \"span\")(36, \"strong\");\n        i0.ÉµÉµtext(37);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(38, \"button\", 18);\n        i0.ÉµÉµlistener(\"click\", function PeriodosSistemaComponent_Template_button_click_38_listener() {\n          return ctx.guardarCambios();\n        });\n        i0.ÉµÉµelementStart(39, \"mat-icon\");\n        i0.ÉµÉµtext(40, \"refresh\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtext(41, \"Actualizar Cambios \");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelement(42, \"br\");\n        i0.ÉµÉµelementStart(43, \"table\", 19)(44, \"thead\");\n        i0.ÉµÉµtemplate(45, PeriodosSistemaComponent_ng_container_45_Template, 2, 1, \"ng-container\", 20);\n        i0.ÉµÉµtemplate(46, PeriodosSistemaComponent_ng_container_46_Template, 2, 1, \"ng-container\", 20);\n        i0.ÉµÉµelementEnd()()()()()()()()();\n        i0.ÉµÉµelementStart(47, \"ngx-spinner\", 21);\n        i0.ÉµÉµelement(48, \"br\");\n        i0.ÉµÉµelementStart(49, \"p\", 22);\n        i0.ÉµÉµtext(50, \"\\uD83D\\uDD29 Cargando... \\uD83D\\uDD29\");\n        i0.ÉµÉµelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(26);\n        i0.ÉµÉµproperty(\"multiple\", false)(\"disableRipple\", true);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.fecha_apertura);\n        i0.ÉµÉµadvance(10);\n        i0.ÉµÉµtextInterpolate2(\"Mes y A\\u00F1o: \", ctx.mes, \"-\", ctx.anio, \"\");\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.data_check === true);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.data_check === false);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"fullScreen\", true);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i10.MatButton, i3.NgxSpinnerComponent, i11.MatCard, i11.MatCardActions, i11.MatCardContent, i11.MatCardHeader, i11.MatCardTitle, i12.MatIcon, i13.MatSelectionList, i13.MatListOption],\n    styles: [\".mat-mdc-table .mdc-data-table__header-row {\\n  height: 21px;\\n}\\n\\n.mat-mdc-table .mdc-data-table__row {\\n  height: calc(1.6rem + 0px) !important;\\n}\\n\\n.mat-mdc-form-field {\\n  width: 100% !important;\\n}\\n\\n.mdc-list-item.mdc-list-item--with-one-line {\\n  height: 32px !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/administracion/periodos-sistema/periodos-sistema.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2FkbWluaXN0cmFjaW9uL3BlcmlvZG9zLXNpc3RlbWEvcGVyaW9kb3Mtc2lzdGVtYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLHFDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsdUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLXRhYmxlIC5tZGMtZGF0YS10YWJsZV9faGVhZGVyLXJvdyB7XG4gIGhlaWdodDogMjFweDtcbn1cblxuLm1hdC1tZGMtdGFibGUgLm1kYy1kYXRhLXRhYmxlX19yb3cge1xuICBoZWlnaHQ6IGNhbGMoMS42cmVtICsgMHB4KSAhaW1wb3J0YW50O1xufVxuXG4ubWF0LW1kYy1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLm1kYy1saXN0LWl0ZW0ubWRjLWxpc3QtaXRlbS0td2l0aC1vbmUtbGluZSB7XG4gIGhlaWdodDogMzJweCAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n    encapsulation: 2\n  });\n  return PeriodosSistemaComponent;\n}();\nexport { PeriodosSistemaComponent };","map":{"version":3,"mappings":"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","names":["FormBuilder","FormGroup","i0","api","dialog","spinner","toastr","_formBuilder","_snackBar","datePipe","log_module","nombre_ventana_service","Date","userConn","localStorage","getItem","undefined","JSON","parse","usuarioLogueado","mandarNombre","getRolUserParaVentana","nombre_ventana","PeriodosSistemaComponent","getFechaApertura","detalle_comparacion","check","console","log","detalle_comparacion_copia_post","slice","filter","primerElemento","formularios","map","group","codigo","item","sistema","valoresFormularios","value","errorMessage","create","subscribe","next","datav","_this","save_periods","guardarLog","ventana","detalle","tipo","show","setTimeout","hide","success","error","err","complete","item_seleccionado","mes","anio","ano","seleccionado","arrayModificado","splice","length","getCheckSelects","element","getAll","getAperturaModulo","data_check","fecha_apertura","ultimoElementoMes","ultimoElementoCodigo","ultimoElementoAnio","modulo_apertura","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","dataAnioNuevo","horareg","fechareg","transform","fecha_actual","usuarioreg","errorMessage_1","periodo_save","open","duration","panelClass","data","errorMessage_2","disparadorDeNombreVentana","emit","nombre_vent","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\periodos-sistema\\periodos-sistema.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\administracion\\periodos-sistema\\periodos-sistema.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NombreVentanaService } from '@modules/main/footer/servicio-nombre-ventana/nombre-ventana.service';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-periodos-sistema',\r\n  templateUrl: './periodos-sistema.component.html',\r\n  styleUrls: ['./periodos-sistema.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PeriodosSistemaComponent implements OnInit {\r\n  \r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n\r\n  userConn: string;\r\n  usuarioLogueado:string;\r\n  fecha_apertura: any = [];\r\n  modulo_apertura: any = [];\r\n  sin_detalle: any = [];\r\n  detalle_comparacion: any = [];\r\n  detalle_comparacion_copia_post: any = [];\r\n  data_save: any = [];\r\n  array_manipulacion: any = [];\r\n  periodo_save: any = [];\r\n  item_seleccionado: string;\r\n  mes: any;\r\n  anio: any;\r\n  data_check: boolean;\r\n  check: boolean;\r\n  dataform: any = '';\r\n\r\n  check_apertura_post: number[] = [];;\r\n  codigo: number[] = [];\r\n  descripcion: string[] = [];\r\n  sistema: number[] = [];\r\n\r\n  formularios: FormGroup[] = [];\r\n  arrayModificado: any[] = [];\r\n  save_periods: any = [];\r\n  modulos: any = [] = [\r\n    {\r\n      \"codigo\": 1,\r\n      \"descripcion\": \"ADMINISTRACION\",\r\n    },\r\n    {\r\n      \"codigo\": 2,\r\n      \"descripcion\": \"INVENTARIOS\",\r\n    },\r\n    {\r\n      \"codigo\": 3,\r\n      \"descripcion\": \"VENTAS\",\r\n    },\r\n    {\r\n      \"codigo\": 4,\r\n      \"descripcion\": \"CTAS POR COBRAR\",\r\n    },\r\n    {\r\n      \"codigo\": 5,\r\n      \"descripcion\": \"CONTABILIDAD\",\r\n    },\r\n    {\r\n      \"codigo\": 6,\r\n      \"descripcion\": \"ACTIVOS FIJOS\",\r\n    },\r\n    {\r\n      \"codigo\": 7,\r\n      \"descripcion\": \"COSTOS Y COSTEO\",\r\n    },\r\n    {\r\n      \"codigo\": 8,\r\n      \"descripcion\": \"IMPORTACIONES\",\r\n    },\r\n    {\r\n      \"codigo\": 9,\r\n      \"descripcion\": \"PERSONAL Y PLANILLAS\",\r\n    },\r\n    {\r\n      \"codigo\": 10,\r\n      \"descripcion\": \"SEGURIDAD\",\r\n    },\r\n    {\r\n      \"codigo\": 11,\r\n      \"descripcion\": \"COMPRAS\",\r\n    },\r\n    {\r\n      \"codigo\": 12,\r\n      \"descripcion\": \"FONDOS\",\r\n    }];\r\n  \r\n  administracion: any;\r\n  ultimoElementoMes: number;\r\n  ultimoElementoCodigo: number;\r\n  ultimoElementoAnio: number;\r\n\r\n  nombre_ventana: string = \"abmadapertura.vb\";\r\n  public ventana = \"Periodos de Apertura/Cierre\";\r\n  public detalle = \"ActualizarStock-create\";\r\n  public tipo = \"ActualizarStock-CREATE\";\r\n\r\n  constructor(private api: ApiService, public dialog: MatDialog, private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService, private _formBuilder: FormBuilder, public _snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public log_module: LogService, public nombre_ventana_service: NombreVentanaService) {\r\n   \r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n    \r\n    this.mandarNombre();\r\n    this.api.getRolUserParaVentana(this.usuarioLogueado, this.nombre_ventana);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getFechaApertura();\r\n  }\r\n\r\n  onCheckboxChange(detalle_comparacion: any) {\r\n    detalle_comparacion.check = !detalle_comparacion.check; // Cambia el valor del checkbox\r\n\r\n    console.log(this.detalle_comparacion);\r\n  }\r\n\r\n  guardarCambios() {\r\n    this.detalle_comparacion_copia_post = this.detalle_comparacion.slice();\r\n    console.log(this.detalle_comparacion_copia_post);\r\n\r\n    this.detalle_comparacion_copia_post = this.detalle_comparacion_copia_post.filter(item => item.check == true);\r\n    let primerElemento = this.detalle_comparacion_copia_post[0];\r\n\r\n    // Crear un formulario para cada elemento en el array\r\n    this.formularios = this.detalle_comparacion_copia_post.map(item => this._formBuilder.group({\r\n      codigo: [item.codigo],\r\n      sistema: [item.sistema]\r\n    }));\r\n\r\n    const valoresFormularios = this.formularios.map(formulario => formulario.value);\r\n    console.log(valoresFormularios);\r\n\r\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /seg_adm/mant/adarea/\";\r\n\r\n    return this.api.create(\"/seg_adm/mant/abmadapertura/\" + this.userConn + '/' + primerElemento.codigo, valoresFormularios)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.save_periods = datav;\r\n          console.log(this.save_periods);\r\n\r\n          this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n          this.spinner.show();\r\n\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1500);\r\n\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n        },\r\n\r\n        error: (err) => {\r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  seleccionarFila(item): void {\r\n    this.item_seleccionado = item;\r\n    this.mes = item.mes;\r\n    this.anio = item.ano;\r\n    item.seleccionado = !item.seleccionado;\r\n\r\n    this.arrayModificado.splice(0, this.arrayModificado.length);\r\n\r\n    this.getCheckSelects(item);\r\n  }\r\n\r\n  getCheckSelects(element) {\r\n    let codigo = element.codigo;\r\n\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getdetalle/\";\r\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getdetalle/'+this.userConn+\"/\"+codigo)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          //ACA MODULO DE MES EXISTENTE\r\n          // detalle del mes va con su descripcion, comparar con la descripcion de modulos\r\n          this.detalle_comparacion = datav;\r\n          console.log(this.detalle_comparacion);\r\n\r\n          this.getAperturaModulo();\r\n          this.data_check = true;\r\n\r\n          this.spinner.show();\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1500);\r\n        },\r\n\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n          //ACA MODULO DE MES INEXISTENTE\r\n          if (err) {\r\n            this.data_check = false;\r\n            this.check = false;\r\n\r\n            this.getAperturaModulo();\r\n          }\r\n          console.log(this.data_check, this.check);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getFechaApertura() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getadapertura/\";\r\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getadapertura/' + this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.fecha_apertura = datav;\r\n          console.log(this.fecha_apertura);\r\n\r\n          this.ultimoElementoMes = this.fecha_apertura[0].mes;\r\n          this.ultimoElementoCodigo = this.fecha_apertura[0].codigo;\r\n          this.ultimoElementoAnio = this.fecha_apertura[0].ano;\r\n          \r\n          console.log(this.ultimoElementoAnio, this.ultimoElementoCodigo, this.ultimoElementoMes);\r\n          \r\n          this.spinner.show();\r\n          setTimeout(() => {\r\n            this.spinner.hide();\r\n          }, 1500);\r\n        },\r\n\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getAperturaModulo() {\r\n    let errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET- /seg_adm/mant/abmadapertura/getsemodulo/\";\r\n    return this.api.getAll('/seg_adm/mant/abmadapertura/getsemodulo/' + this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          // modulos apertura descripcion\r\n          this.modulo_apertura = datav;\r\n          console.log(this.modulo_apertura);\r\n        },\r\n\r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  nuevoPeriodo() {\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;\r\n\r\n    if (this.ultimoElementoMes == 12) {\r\n      const dataAnioNuevo = {\r\n        codigo: 0,\r\n        ano: this.ultimoElementoAnio + 1,\r\n        mes: 1,\r\n        horareg: hora_actual_complete,\r\n        fechareg: this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\"),\r\n        usuarioreg: this.usuarioLogueado,\r\n      }\r\n      console.log(\"Anio: \", dataAnioNuevo);\r\n\r\n      let errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:- /seg_adm/mant/abmadapertura/\";\r\n      return this.api.create(\"/seg_adm/mant/abmadapertura/addPeriodo/\"+this.userConn, dataAnioNuevo)\r\n        .subscribe({\r\n          next: (datav) => {\r\n            this.periodo_save = datav;\r\n\r\n            console.log('data', datav);\r\n            this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n            this.spinner.show();\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 2000);\r\n            this.toastr.success('! SE GUARDO EXITOSAMENTE !');\r\n\r\n            this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\r\n              duration: 3000,\r\n               panelClass: ['coorporativo-snackbar', 'login-snackbar'],\r\n            });\r\n\r\n            this.getFechaApertura();\r\n          },\r\n\r\n          error: (err) => {\r\n            console.log(err, errorMessage);\r\n          },\r\n          complete: () => { }\r\n        })\r\n    } else {\r\n      const data = {\r\n        codigo: 0,\r\n        ano: this.ultimoElementoAnio,\r\n        mes: this.ultimoElementoMes + 1,\r\n        horareg: hora_actual_complete,\r\n        fechareg: this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\"),\r\n        usuarioreg: this.usuarioLogueado,\r\n      }\r\n\r\n      console.log(data);\r\n\r\n      let errorMessage = \"La Ruta o el servidor presenta fallos al hacer la creacion\" + \"Ruta:- /seg_adm/mant/abmadapertura/\";\r\n      return this.api.create(\"/seg_adm/mant/abmadapertura/addPeriodo/\"+this.userConn, data)\r\n        .subscribe({\r\n          next: (datav) => {\r\n            this.periodo_save = datav;\r\n            console.log('data', datav);\r\n\r\n            this.log_module.guardarLog(this.ventana, this.detalle, this.tipo);\r\n            this.spinner.show();\r\n\r\n            setTimeout(() => {\r\n              this.spinner.hide();\r\n            }, 2000);\r\n\r\n            this.toastr.success('! SE GUARDO EXITOSAMENTE !');\r\n\r\n            this._snackBar.open('Se ha guardado correctamente!', 'Ok', {\r\n              duration: 3000,\r\n               panelClass: ['coorporativo-snackbar', 'login-snackbar'],\r\n            });\r\n\r\n            this.getFechaApertura();\r\n          },\r\n\r\n          error: (err) => {\r\n            console.log(err, errorMessage);\r\n          },\r\n          complete: () => { }\r\n        })\r\n    }\r\n  }\r\n\r\n  mandarNombre() {\r\n    this.nombre_ventana_service.disparadorDeNombreVentana.emit({\r\n      nombre_vent: this.ventana,\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"p-2\">\r\n      <mat-card style=\"background-color: #ffffc0;\">\r\n        <mat-card-header class=\"mb-1\">\r\n          <mat-card-title>Apertura/Cierre de MÃ³dulos</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <mat-card-actions align=\"start\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"nuevoPeriodo();\"><i class=\"fa fa-plus\"></i>\r\n              Nuevo</button>\r\n          </mat-card-actions>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n              <span><u>Periodos de Control</u></span>\r\n              <mat-card>\r\n                <mat-card-content>\r\n                  <div class=\"table-responsive\" style=\"height: 46vh !important;\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr style=\"background-color: #f0f0f0;\" class=\"tr1 text-center\">\r\n                          <th scope=\"col\">AÃ‘O - MES</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <mat-selection-list [multiple]=\"false\" [disableRipple]=\"true\" style=\"text-align: center;\">\r\n                          <mat-list-option *ngFor=\"let fecha_aperturas of fecha_apertura\"\r\n                            (click)=\"seleccionarFila(fecha_aperturas)\">{{ fecha_aperturas.ano }} -\r\n                            {{ fecha_aperturas.descripcion }}\r\n                            <hr style=\"margin-top: 0rem !important;margin-bottom: 0rem !important;\">\r\n                          </mat-list-option>\r\n                        </mat-selection-list>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <span><u>MÃ³dulos</u></span><br>\r\n                  <span><strong>Mes y AÃ±o: {{ mes }}-{{ anio }}</strong></span>\r\n                  <!-- <div class=\"row mb-2\"><br>\r\n                    <div class=\"col-md\">\r\n                      <input type=\"checkbox\">\r\n                      <span>&nbsp; Todos</span>\r\n                    </div>\r\n                  </div> -->\r\n                  <button mat-button mat-raised-button class=\"success mdc-button\" (click)=\"guardarCambios();\"\r\n                    style=\"float: right;\">\r\n                    <mat-icon>refresh</mat-icon>Actualizar Cambios\r\n                  </button>\r\n                </div>\r\n              </div><br>\r\n\r\n              <table class=\"tg1\">\r\n                <thead>\r\n                  <ng-container *ngIf=\"data_check === true\">\r\n                    <tr *ngFor=\"let detalleComparacion of detalle_comparacion\">\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"text\" [value]=\"detalleComparacion.codigo\">\r\n                        <input type=\"text\" [value]=\"detalleComparacion.sistema\">\r\n                        <input type=\"checkbox\" [checked]=\"detalleComparacion.check\"\r\n                          (change)=\"onCheckboxChange(detalleComparacion)\">\r\n                        {{ detalleComparacion.descripcion }}\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container>\r\n\r\n                  <!-- <ng-container *ngIf=\"data_check === false\">\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"1\" [(ngModel)]=\"administracion\"> ADMINISTRACION\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"2\"> INVENTARIOS\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"3\"> VENTAS\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"4\"> CTAS POR COBRAR\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"5\"> CONTABILIDAD\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"6\"> ACTIVOS FIJOS\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"7\"> COSTOS Y COSTEO\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"8\"> IMPORTACIONES\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"9\"> PERSONAL Y PLANILLAS\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"10\"> SEGURIDAD\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"11\"> COMPRAS\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"checkbox\" value=\"12\"> FONDOS\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container> -->\r\n\r\n                  <ng-container *ngIf=\"data_check === false\">\r\n                    <tr *ngFor=\"let detalleComparacion of modulos\">\r\n                      <td style=\"text-align: left !important;\">\r\n                        <input type=\"text\" [value]=\"detalleComparacion.codigo\">\r\n                        <input type=\"text\" [value]=\"ultimoElementoCodigo + 1\">\r\n                        <input type=\"checkbox\" [checked]=\"detalleComparacion.check\"\r\n                          (change)=\"onCheckboxChange(detalleComparacion)\">\r\n                        {{ detalleComparacion.descripcion }}\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ngx-spinner bdColor=\"rgba(251, 216, 0, 0.8)\" size=\"large\" color=\"#093070\" type=\"square-loader\" [fullScreen]=\"true\">\r\n  <br>\r\n  <p style=\"font-size: 25px; color: rgb(9,48,112,)\">ðŸ”© Cargando... ðŸ”©</p>\r\n</ngx-spinner>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}