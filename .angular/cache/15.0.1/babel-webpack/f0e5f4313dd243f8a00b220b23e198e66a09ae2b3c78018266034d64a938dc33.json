{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@services/api.service\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@components/mantenimiento/ventas/serviciovendedor/vendedor.service\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/datepicker\";\nimport * as i13 from \"@angular/material/button\";\nvar TalonarioRecibosCreateComponent = /** @class */function () {\n  function TalonarioRecibosCreateComponent(_formBuilder, dialog, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr, serviciovendedor) {\n    this._formBuilder = _formBuilder;\n    this.dialog = dialog;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.serviciovendedor = serviciovendedor;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.talon = [];\n    this.userLogueado = [];\n    this.inputValue = null;\n    this.inputValue1 = null;\n    this.inputValue2 = null;\n    this.vendedor_get = [];\n    this.ventana = \"talonario-create\";\n    this.detalle = \"talonario-detalle\";\n    this.tipo = \"transaccion-talonario-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  TalonarioRecibosCreateComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.dataform.codigo, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      TalDel: [this.dataform.TalDel, Validators.pattern(/^-?\\d+$/)],\n      TalAl: [this.dataform.TalAl, Validators.pattern(/^-?\\d+$/)],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      Fecha: [this.dataform.Fecha, Validators.compose([Validators.required])],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      Usuarioreg: [usuario_logueado],\n      codvendedor: [this.dataform.codvendedor, Validators.compose([Validators.required])]\n    });\n  };\n  TalonarioRecibosCreateComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.serviciovendedor.disparadorDeVendedores.subscribe(function (data) {\n      console.log(\"Recibiendo Vendedor: \", data);\n      _this.cod_vendedor = data.vendedor;\n    });\n  };\n  TalonarioRecibosCreateComponent.prototype.ngAfterViewInit = function () {\n    this.getVendedorCatalogo();\n  };\n  TalonarioRecibosCreateComponent.prototype.getVendedorCatalogo = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.vendedor_get = datav;\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  TalonarioRecibosCreateComponent.prototype.modalVendedor = function () {\n    this.dialog.open(ModalVendedorComponent, {\n      width: 'auto',\n      height: 'auto'\n    });\n  };\n  TalonarioRecibosCreateComponent.prototype.onLeaveVendedor = function (event) {\n    var inputValue = event.target.value;\n    var entero = Number(inputValue);\n    // Verificar si el valor ingresado estÃ¡ presente en los objetos del array\n    var encontrado = this.vendedor_get.some(function (objeto) {\n      return objeto.codigo === entero;\n    });\n    if (!encontrado) {\n      // Si el valor no estÃ¡ en el array, dejar el campo vacÃ­o\n      event.target.value = '';\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\n    } else {\n      event.target.value = entero;\n    }\n  };\n  TalonarioRecibosCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /ctsxcob/mant/cotalonario/\";\n    return this.api.create(\"/ctsxcob/mant/cotalonario/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.talon = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  TalonarioRecibosCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  TalonarioRecibosCreateComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  };\n  TalonarioRecibosCreateComponent.prototype.onInputChange1 = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue1 = parsedValue;\n    } else {\n      this.inputValue1 = null;\n    }\n  };\n  TalonarioRecibosCreateComponent.prototype.onInputChange2 = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue2 = parsedValue;\n    } else {\n      this.inputValue2 = null;\n    }\n  };\n  TalonarioRecibosCreateComponent.Éµfac = function TalonarioRecibosCreateComponent_Factory(t) {\n    return new (t || TalonarioRecibosCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.MatDialog), i0.ÉµÉµdirectiveInject(i3.DatePipe), i0.ÉµÉµdirectiveInject(i4.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i5.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(i9.VendedorService));\n  };\n  TalonarioRecibosCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: TalonarioRecibosCreateComponent,\n    selectors: [[\"app-talonario-recibos-create\"]],\n    decls: 60,\n    vars: 8,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"codigo\", \"maxlength\", \"20\", \"required\", \"\"], [\"color\", \"accent\", 1, \"example-full-small\"], [\"matInput\", \"\", \"formControlName\", \"Fecha\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"color\", \"primary\"], [\"picker2\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"formControlName\", \"TalDel\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"formControlName\", \"TalAl\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"formControlName\", \"nroactual\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"codvendedor\", \"placeholder\", \"Vendedor\", 1, \"form-control\", \"form-control-sm\", 2, \"background-color\", \"transparent\", \"color\", \"black\", \"border\", \"1px solid #959595\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"form-control-sm\", 2, \"border-color\", \"#093070\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"appearance\", \"outline\", 1, \"example-full-small\", 2, \"display\", \"inline\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"20\", \"required\", \"\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function TalonarioRecibosCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Talonario de Recibos\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function TalonarioRecibosCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(14, \"input\", 10);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"mat-form-field\", 11)(17, \"mat-label\");\n        i0.ÉµÉµtext(18, \"Fecha\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"input\", 12)(20, \"mat-datepicker-toggle\", 13)(21, \"mat-datepicker\", 14, 15);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(23, \"div\", 7)(24, \"div\", 8)(25, \"mat-form-field\", 9)(26, \"mat-label\");\n        i0.ÉµÉµtext(27, \"Del \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(28, \"input\", 16);\n        i0.ÉµÉµlistener(\"input\", function TalonarioRecibosCreateComponent_Template_input_input_28_listener($event) {\n          return ctx.onInputChange1($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosCreateComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.inputValue1 = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(29, \"div\", 8)(30, \"mat-form-field\", 9)(31, \"mat-label\");\n        i0.ÉµÉµtext(32, \"Al \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(33, \"input\", 17);\n        i0.ÉµÉµlistener(\"input\", function TalonarioRecibosCreateComponent_Template_input_input_33_listener($event) {\n          return ctx.onInputChange2($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosCreateComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.inputValue2 = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(34, \"div\", 7)(35, \"div\", 8)(36, \"mat-form-field\", 9)(37, \"mat-label\");\n        i0.ÉµÉµtext(38, \"Nro. Actual \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(39, \"input\", 18);\n        i0.ÉµÉµlistener(\"input\", function TalonarioRecibosCreateComponent_Template_input_input_39_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        })(\"ngModelChange\", function TalonarioRecibosCreateComponent_Template_input_ngModelChange_39_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(40, \"div\", 8)(41, \"div\", 19);\n        i0.ÉµÉµelementContainerStart(42);\n        i0.ÉµÉµelementStart(43, \"input\", 20);\n        i0.ÉµÉµlistener(\"ngModelChange\", function TalonarioRecibosCreateComponent_Template_input_ngModelChange_43_listener($event) {\n          return ctx.cod_vendedor = $event;\n        })(\"blur\", function TalonarioRecibosCreateComponent_Template_input_blur_43_listener($event) {\n          return ctx.onLeaveVendedor($event);\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementContainerEnd();\n        i0.ÉµÉµelementStart(44, \"div\", 21)(45, \"button\", 22);\n        i0.ÉµÉµlistener(\"click\", function TalonarioRecibosCreateComponent_Template_button_click_45_listener() {\n          return ctx.modalVendedor();\n        });\n        i0.ÉµÉµelement(46, \"i\", 23);\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(47, \"div\", 7)(48, \"div\", 8)(49, \"mat-form-field\", 24)(50, \"mat-label\");\n        i0.ÉµÉµtext(51, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(52, \"input\", 25);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(53, \"div\", 26)(54, \"a\", 27);\n        i0.ÉµÉµlistener(\"click\", function TalonarioRecibosCreateComponent_Template_a_click_54_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(55, \"i\", 28);\n        i0.ÉµÉµtext(56, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(57, \"button\", 29);\n        i0.ÉµÉµelement(58, \"i\", 30);\n        i0.ÉµÉµtext(59, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ÉµÉµreference(22);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(11);\n        i0.ÉµÉµproperty(\"matDatepicker\", _r0);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"for\", _r0);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue1);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue2);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cod_vendedor);\n        i0.ÉµÉµadvance(14);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i10.MatFormField, i10.MatLabel, i10.MatSuffix, i11.MatInput, i12.MatDatepicker, i12.MatDatepickerInput, i12.MatDatepickerToggle, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i13.MatAnchor, i13.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/cuentas-cobrar/talonario-recibos/talonario-recibos-create/talonario-recibos-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2N1ZW50YXMtY29icmFyL3RhbG9uYXJpby1yZWNpYm9zL3RhbG9uYXJpby1yZWNpYm9zLWNyZWF0ZS90YWxvbmFyaW8tcmVjaWJvcy1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return TalonarioRecibosCreateComponent;\n}();\nexport { TalonarioRecibosCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","ModalVendedorComponent","_formBuilder","dialog","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","serviciovendedor","Date","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","TalonarioRecibosCreateComponent","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","codigo","dataform","compose","required","descripcion","TalDel","pattern","TalAl","nroactual","Fecha","horareg","fechareg","transform","fecha_actual","Usuarioreg","codvendedor","disparadorDeVendedores","subscribe","console","log","data","_this","cod_vendedor","vendedor","getVendedorCatalogo","errorMessage","getAll","next","datav","vendedor_get","error","err","complete","open","width","height","event","inputValue","target","value","entero","Number","encontrado","some","create","talon","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","close","parsedValue","parseFloat","isNaN","isInteger","inputValue1","inputValue2","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\talonario-recibos\\talonario-recibos-create\\talonario-recibos-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\talonario-recibos\\talonario-recibos-create\\talonario-recibos-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { VendedorService } from '@components/mantenimiento/ventas/serviciovendedor/vendedor.service';\r\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\r\n\r\n@Component({\r\n  selector: 'app-talonario-recibos-create',\r\n  templateUrl: './talonario-recibos-create.component.html',\r\n  styleUrls: ['./talonario-recibos-create.component.scss']\r\n})\r\nexport class TalonarioRecibosCreateComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform:any='';\r\n  talon:any=[];\r\n  userConn:any;\r\n  userLogueado:any=[];\r\n\r\n  inputValue: number | null = null;\r\n  inputValue1: number | null = null;\r\n  inputValue2: number | null = null;\r\n\r\n\r\n  vendedor_get: any = [];\r\n  cod_vendedor:any;\r\n\r\n  public ventana=\"talonario-create\"\r\n  public detalle=\"talonario-detalle\";\r\n  public tipo=\"transaccion-talonario-POST\";\r\n\r\n  constructor(private _formBuilder: FormBuilder, public dialog: MatDialog, private datePipe: DatePipe, private spinner: NgxSpinnerService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<TalonarioRecibosCreateComponent>, public _snackBar: MatSnackBar,\r\n    public log_module: LogService, private toastr: ToastrService, public serviciovendedor: VendedorService) {\r\n    \r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    this.FormularioData = this.createForm();\r\n  } \r\n\r\n\r\n  createForm(): FormGroup{\r\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n  \r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      codigo: [this.dataform.codigo,Validators.compose([Validators.required])],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n\r\n      TalDel: [this.dataform.TalDel,Validators.pattern(/^-?\\d+$/)],\r\n      TalAl: [this.dataform.TalAl,Validators.pattern(/^-?\\d+$/)],\r\n      nroactual: [this.dataform.nroactual,Validators.pattern(/^-?\\d+$/)],\r\n      Fecha: [this.dataform.Fecha,Validators.compose([Validators.required])],\r\n\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      Usuarioreg: [usuario_logueado],\r\n\r\n      codvendedor: [this.dataform.codvendedor,Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.serviciovendedor.disparadorDeVendedores.subscribe(data => {\r\n      console.log(\"Recibiendo Vendedor: \", data);\r\n      this.cod_vendedor = data.vendedor;\r\n    });\r\n  }\r\n  ngAfterViewInit(){\r\n    this.getVendedorCatalogo();\r\n  }\r\n\r\n  \r\n  getVendedorCatalogo() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\r\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.vendedor_get = datav;\r\n        },\r\n                \r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => {}\r\n      })\r\n  }\r\n\r\n  modalVendedor(): void {\r\n    this.dialog.open(ModalVendedorComponent, {\r\n      width: 'auto',\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  onLeaveVendedor(event: any) {\r\n    const inputValue = event.target.value;\r\n    let entero = Number(inputValue);\r\n\r\n    // Verificar si el valor ingresado estÃ¡ presente en los objetos del array\r\n    const encontrado = this.vendedor_get.some(objeto => objeto.codigo === entero);\r\n\r\n    if (!encontrado) {\r\n      // Si el valor no estÃ¡ en el array, dejar el campo vacÃ­o\r\n      event.target.value = '';\r\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\r\n    } else {\r\n      event.target.value = entero;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  submitData(){\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:-- /ctsxcob/mant/cotalonario/\";\r\n    \r\n    return this.api.create(\"/ctsxcob/mant/cotalonario/\"+this.userConn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.talon = datav;\r\n\r\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\r\n          this.onNoClick();\r\n          this.spinner.show();\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onInputChange(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue = parsedValue;\r\n    } else {\r\n      this.inputValue = null;\r\n    }\r\n  }\r\n  onInputChange1(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue1 = parsedValue;\r\n    } else {\r\n      this.inputValue1 = null;\r\n    }\r\n  }\r\n  onInputChange2(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue2 = parsedValue;\r\n    } else {\r\n      this.inputValue2 = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #f0f0f0;\">\r\n  <div class=\"p-2\">\r\n    <h1 mat-dialog-title>Crear Talonario de Recibos</h1>\r\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n  </div>\r\n\r\n  <div mat-dialog-content>\r\n    <div class=\"container\">\r\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n\r\n        <div class=\"row mb-2\">\r\n\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>CÃ³digo </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"codigo\" maxlength=\"20\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md\">\r\n            <mat-form-field color=\"accent\" class=\"example-full-small\">\r\n              <mat-label>Fecha</mat-label>\r\n              <input matInput formControlName=\"Fecha\" [matDatepicker]=\"picker2\">\r\n              <mat-datepicker-toggle matIconSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2 color=\"primary\"></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-2\">\r\n\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>Del </mat-label>\r\n              <input matInput type=\"number\" (input)=\"onInputChange1($event.target.value)\" min=\"0\" step=\"1\"\r\n              formControlName=\"TalDel\" [(ngModel)]=\"inputValue1\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>Al </mat-label>\r\n              <input matInput type=\"number\" (input)=\"onInputChange2($event.target.value)\" min=\"0\" step=\"1\"\r\n               formControlName=\"TalAl\" [(ngModel)]=\"inputValue2\" required>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>Nro. Actual </mat-label>\r\n              <input matInput type=\"number\" (input)=\"onInputChange($event.target.value)\" min=\"0\" step=\"1\"\r\n               formControlName=\"nroactual\" [(ngModel)]=\"inputValue\" required>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md\">\r\n            <div class=\"input-group\">\r\n              <ng-container>\r\n                <input style=\"background-color: transparent; color: black; border: 1px solid #959595;\"\r\n                 type=\"text\" class=\"form-control form-control-sm\" formControlName=\"codvendedor\"\r\n                placeholder=\"Vendedor\" [(ngModel)]=\"cod_vendedor\" (blur)=\"onLeaveVendedor($event)\">\r\n              </ng-container>\r\n          \r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-primary form-control-sm\" type=\"button\" (click)=\"modalVendedor();\"\r\n                  style=\"border-color: #093070;\"><i class=\"fa fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\" style=\"display: inline;\">\r\n              <mat-label>DescripciÃ³n </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"20\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          \r\n          \r\n        </div>\r\n\r\n\r\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\r\n\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\r\n              class=\"fa fa-save\"></i> Guardar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}