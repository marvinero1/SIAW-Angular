{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@services/api.service\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@components/mantenimiento/ventas/serviciovendedor/vendedor.service\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/button\";\nfunction NumeracionCobranzaCreateComponent_mat_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-option\", 27);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    var unidad_r1 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"value\", unidad_r1.codigo);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate2(\" \", unidad_r1.codigo, \" - \", unidad_r1.descripcion, \" \");\n  }\n}\nvar NumeracionCobranzaCreateComponent = /** @class */function () {\n  function NumeracionCobranzaCreateComponent(_formBuilder, dialog, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr, serviciovendedor) {\n    this._formBuilder = _formBuilder;\n    this.dialog = dialog;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.serviciovendedor = serviciovendedor;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.numCobran = [];\n    this.negocio = [];\n    this.userLogueado = [];\n    this.inputValue = null;\n    this.vendedor_get = [];\n    this.ventana = \"numCobranza-create\";\n    this.detalle = \"numCobranza-detalle\";\n    this.tipo = \"transaccion-numCobranza-POST\";\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n    this.getAllUnidadesNegocio();\n  }\n  NumeracionCobranzaCreateComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.serviciovendedor.disparadorDeVendedores.subscribe(function (data) {\n      console.log(\"Recibiendo Vendedor: \", data);\n      _this.cod_vendedor = data.vendedor;\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.ngAfterViewInit = function () {\n    this.getVendedorCatalogo();\n  };\n  NumeracionCobranzaCreateComponent.prototype.getVendedorCatalogo = function () {\n    var _this = this;\n    var errorMessage;\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.vendedor_get = datav;\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.modalVendedor = function () {\n    this.dialog.open(ModalVendedorComponent, {\n      width: 'auto',\n      height: 'auto'\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.onLeaveVendedor = function (event) {\n    var inputValue = event.target.value;\n    var entero = Number(inputValue);\n    // Verificar si el valor ingresado estÃ¡ presente en los objetos del array\n    var encontrado = this.vendedor_get.some(function (objeto) {\n      return objeto.codigo === entero;\n    });\n    if (!encontrado) {\n      // Si el valor no estÃ¡ en el array, dejar el campo vacÃ­o\n      event.target.value = '';\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\n    } else {\n      event.target.value = entero;\n    }\n  };\n  NumeracionCobranzaCreateComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataform.id, Validators.compose([Validators.required])],\n      descripcion: [this.dataform.descripcion, Validators.compose([Validators.required])],\n      nroactual: [this.dataform.nroactual, Validators.pattern(/^-?\\d+$/)],\n      codvendedor: [this.dataform.codvendedor, Validators.compose([Validators.required])],\n      codunidad: [this.dataform.codunidad],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /ctasXcobrar/mant/cotipo/\";\n    return this.api.create(\"/ctasXcobrar/mant/cotipo/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.numCobran = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.getAllUnidadesNegocio = function () {\n    var _this = this;\n    var errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\n    return this.api.getAll('/seg_adm/mant/adunidad/catalogo/' + this.userConn).subscribe({\n      next: function (datav) {\n        _this.negocio = datav;\n        console.log('data', datav);\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n      },\n      complete: function () {}\n    });\n  };\n  NumeracionCobranzaCreateComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  NumeracionCobranzaCreateComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  };\n  NumeracionCobranzaCreateComponent.Éµfac = function NumeracionCobranzaCreateComponent_Factory(t) {\n    return new (t || NumeracionCobranzaCreateComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.MatDialog), i0.ÉµÉµdirectiveInject(i3.DatePipe), i0.ÉµÉµdirectiveInject(i4.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i5.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(i9.VendedorService));\n  };\n  NumeracionCobranzaCreateComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: NumeracionCobranzaCreateComponent,\n    selectors: [[\"app-numeracion-cobranza-create\"]],\n    decls: 47,\n    vars: 5,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"id\", \"maxlength\", \"5\", \"required\", \"\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"codvendedor\", \"placeholder\", \"Vendedor\", 1, \"form-control\", \"form-control-sm\", 2, \"background-color\", \"transparent\", \"color\", \"black\", \"border\", \"1px solid #959595\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"form-control-sm\", 2, \"border-color\", \"#093070\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"descripcion\", \"maxlength\", \"30\", \"required\", \"\"], [\"type\", \"number\", \"min\", \"0\", \"step\", \"1\", \"matInput\", \"\", \"formControlName\", \"nroactual\", \"required\", \"\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [1, \"col\"], [\"appearance\", \"outline\"], [\"formControlName\", \"codunidad\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"], [3, \"value\"]],\n    template: function NumeracionCobranzaCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Crear Numeraci\\u00F3n de Cobranza\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"div\", 3);\n        i0.ÉµÉµtext(5, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function NumeracionCobranzaCreateComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"mat-form-field\", 9)(12, \"mat-label\");\n        i0.ÉµÉµtext(13, \"C\\u00F3digo \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(14, \"input\", 10);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"div\", 11);\n        i0.ÉµÉµelementContainerStart(17);\n        i0.ÉµÉµelementStart(18, \"input\", 12);\n        i0.ÉµÉµlistener(\"ngModelChange\", function NumeracionCobranzaCreateComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.cod_vendedor = $event;\n        })(\"blur\", function NumeracionCobranzaCreateComponent_Template_input_blur_18_listener($event) {\n          return ctx.onLeaveVendedor($event);\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementContainerEnd();\n        i0.ÉµÉµelementStart(19, \"div\", 13)(20, \"button\", 14);\n        i0.ÉµÉµlistener(\"click\", function NumeracionCobranzaCreateComponent_Template_button_click_20_listener() {\n          return ctx.modalVendedor();\n        });\n        i0.ÉµÉµelement(21, \"i\", 15);\n        i0.ÉµÉµelementEnd()()()()();\n        i0.ÉµÉµelementStart(22, \"div\", 7)(23, \"div\", 8)(24, \"mat-form-field\", 9)(25, \"mat-label\");\n        i0.ÉµÉµtext(26, \"Descripci\\u00F3n \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(27, \"input\", 16);\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(28, \"div\", 7)(29, \"div\", 8)(30, \"mat-form-field\", 9)(31, \"mat-label\");\n        i0.ÉµÉµtext(32, \"N\\u00FAmero Actual \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(33, \"input\", 17);\n        i0.ÉµÉµlistener(\"input\", function NumeracionCobranzaCreateComponent_Template_input_input_33_listener($event) {\n          return ctx.onInputChange($event.target.value);\n        })(\"ngModelChange\", function NumeracionCobranzaCreateComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(34, \"div\", 18)(35, \"mat-form-field\", 19)(36, \"mat-label\");\n        i0.ÉµÉµtext(37, \"Unidad de Negocio\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(38, \"mat-select\", 20);\n        i0.ÉµÉµtemplate(39, NumeracionCobranzaCreateComponent_mat_option_39_Template, 2, 3, \"mat-option\", 21);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(40, \"div\", 22)(41, \"a\", 23);\n        i0.ÉµÉµlistener(\"click\", function NumeracionCobranzaCreateComponent_Template_a_click_41_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(42, \"i\", 24);\n        i0.ÉµÉµtext(43, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(44, \"button\", 25);\n        i0.ÉµÉµelement(45, \"i\", 26);\n        i0.ÉµÉµtext(46, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(10);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.cod_vendedor);\n        i0.ÉµÉµadvance(15);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.inputValue);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.negocio);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i10.MatFormField, i10.MatLabel, i11.MatSelect, i12.MatOption, i13.MatInput, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i14.MatAnchor, i14.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n\\n.mat-dialog-actions[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/cuentas-cobrar/numeracion-cobranza/numeracion-cobranza-create/numeracion-cobranza-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2N1ZW50YXMtY29icmFyL251bWVyYWNpb24tY29icmFuemEvbnVtZXJhY2lvbi1jb2JyYW56YS1jcmVhdGUvbnVtZXJhY2lvbi1jb2JyYW56YS1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xuICBmbG9hdDogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return NumeracionCobranzaCreateComponent;\n}();\nexport { NumeracionCobranzaCreateComponent };","map":{"version":3,"mappings":"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","names":["Validators","ModalVendedorComponent","i0","_formBuilder","dialog","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","serviciovendedor","Date","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","getAllUnidadesNegocio","NumeracionCobranzaCreateComponent","disparadorDeVendedores","subscribe","console","log","data","_this","cod_vendedor","vendedor","getVendedorCatalogo","errorMessage","getAll","next","datav","vendedor_get","error","err","complete","open","width","height","event","inputValue","target","value","entero","Number","encontrado","some","codigo","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","dataform","compose","required","descripcion","nroactual","pattern","codvendedor","codunidad","horareg","fechareg","transform","fecha_actual","usuarioreg","create","numCobran","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","negocio","close","parsedValue","parseFloat","isNaN","isInteger","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\numeracion-cobranza\\numeracion-cobranza-create\\numeracion-cobranza-create.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\cuentas-cobrar\\numeracion-cobranza\\numeracion-cobranza-create\\numeracion-cobranza-create.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ModalVendedorComponent } from '@components/mantenimiento/ventas/modal-vendedor/modal-vendedor.component';\r\nimport { VendedorService } from '@components/mantenimiento/ventas/serviciovendedor/vendedor.service';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-numeracion-cobranza-create',\r\n  templateUrl: './numeracion-cobranza-create.component.html',\r\n  styleUrls: ['./numeracion-cobranza-create.component.scss']\r\n})\r\nexport class NumeracionCobranzaCreateComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  dataform:any='';\r\n  numCobran:any=[];\r\n  negocio:any=[];\r\n  userConn:any;\r\n  userLogueado:any=[];\r\n  inputValue: number | null = null;\r\n\r\n  vendedor_get: any = [];\r\n  cod_vendedor:any;\r\n\r\n  public ventana=\"numCobranza-create\"\r\n  public detalle=\"numCobranza-detalle\";\r\n  public tipo=\"transaccion-numCobranza-POST\";\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder, public dialog: MatDialog, private datePipe: DatePipe, private spinner: NgxSpinnerService,\r\n    private api:ApiService, public dialogRef: MatDialogRef<NumeracionCobranzaCreateComponent>, public _snackBar: MatSnackBar,\r\n    public log_module: LogService, private toastr: ToastrService, public serviciovendedor: VendedorService) {\r\n    \r\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\r\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    this.FormularioData = this.createForm();\r\n    this.getAllUnidadesNegocio();\r\n  } \r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.serviciovendedor.disparadorDeVendedores.subscribe(data => {\r\n      console.log(\"Recibiendo Vendedor: \", data);\r\n      this.cod_vendedor = data.vendedor;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.getVendedorCatalogo();\r\n  }\r\n\r\n  \r\n  getVendedorCatalogo() {\r\n    let errorMessage: string;\r\n    errorMessage = \"La Ruta o el servidor presenta fallos al hacer peticion GET --/seg_adm/mant/vevendedor/catalogo/\";\r\n    return this.api.getAll('/seg_adm/mant/vevendedor/catalogo/' + this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.vendedor_get = datav;\r\n        },\r\n                \r\n        error: (err: any) => {\r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => {}\r\n      })\r\n  }\r\n\r\n  modalVendedor(): void {\r\n    this.dialog.open(ModalVendedorComponent, {\r\n      width: 'auto',\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  onLeaveVendedor(event: any) {\r\n    const inputValue = event.target.value;\r\n    let entero = Number(inputValue);\r\n\r\n    // Verificar si el valor ingresado estÃ¡ presente en los objetos del array\r\n    const encontrado = this.vendedor_get.some(objeto => objeto.codigo === entero);\r\n\r\n    if (!encontrado) {\r\n      // Si el valor no estÃ¡ en el array, dejar el campo vacÃ­o\r\n      event.target.value = '';\r\n      console.log(\"NO ENCONTRADO VALOR DE INPUT\");\r\n    } else {\r\n      event.target.value = entero;\r\n    }\r\n  }\r\n\r\n  \r\n  createForm(): FormGroup{\r\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n  \r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;  \r\n\r\n    return this._formBuilder.group({\r\n      id: [this.dataform.id,Validators.compose([Validators.required])],\r\n      descripcion: [this.dataform.descripcion,Validators.compose([Validators.required])],\r\n      nroactual: [this.dataform.nroactual,Validators.pattern(/^-?\\d+$/)],\r\n      codvendedor: [this.dataform.codvendedor,Validators.compose([Validators.required])],\r\n      codunidad: [this.dataform.codunidad],\r\n\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      usuarioreg: [usuario_logueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:-- /ctasXcobrar/mant/cotipo/\";\r\n    \r\n    return this.api.create(\"/ctasXcobrar/mant/cotipo/\"+this.userConn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.numCobran = datav;\r\n\r\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\r\n          this.onNoClick();\r\n          this.spinner.show();\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  getAllUnidadesNegocio(){\r\n    let errorMessage = \"La Ruta presenta fallos al hacer peticion GET /seg_adm/mant/adunidad/catalogo/\";\r\n    return this.api.getAll('/seg_adm/mant/adunidad/catalogo/'+this.userConn)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.negocio = datav;\r\n          console.log('data', datav);\r\n        },\r\n    \r\n        error: (err: any) => { \r\n          console.log(err, errorMessage);\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n  \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onInputChange(value: string) {\r\n    // Validar y formatear el valor ingresado\r\n    const parsedValue = parseFloat(value);\r\n\r\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\r\n      this.inputValue = parsedValue;\r\n    } else {\r\n      this.inputValue = null;\r\n    }\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #f0f0f0;\">\r\n  <div class=\"p-2\">\r\n    <h1 mat-dialog-title>Crear NumeraciÃ³n de Cobranza</h1>\r\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\r\n  </div>\r\n\r\n  <div mat-dialog-content>\r\n    <div class=\"container\">\r\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>CÃ³digo </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"id\" maxlength=\"5\" required>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md\">\r\n            <div class=\"input-group\">\r\n              <ng-container>\r\n                <input style=\"background-color: transparent; color: black; border: 1px solid #959595;\"\r\n                 type=\"text\" class=\"form-control form-control-sm\" formControlName=\"codvendedor\"\r\n                placeholder=\"Vendedor\" [(ngModel)]=\"cod_vendedor\" (blur)=\"onLeaveVendedor($event)\">\r\n              </ng-container>\r\n          \r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-primary form-control-sm\" type=\"button\" (click)=\"modalVendedor();\"\r\n                  style=\"border-color: #093070;\"><i class=\"fa fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>DescripciÃ³n </mat-label>\r\n              <input matInput type=\"text\" formControlName=\"descripcion\" maxlength=\"30\" required>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-md\">\r\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\r\n              <mat-label>NÃºmero Actual </mat-label>\r\n              <input type=\"number\" (input)=\"onInputChange($event.target.value)\" min=\"0\" step=\"1\" matInput\r\n                formControlName=\"nroactual\" [(ngModel)]=\"inputValue\" required>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Unidad de Negocio</mat-label>\r\n              <mat-select formControlName=\"codunidad\" required>\r\n                <mat-option *ngFor=\"let unidad of negocio\" [value]=\"unidad.codigo\">\r\n                  {{ unidad.codigo }} - {{ unidad.descripcion }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"mat-dialog-actions\" mat-dialog-actions>\r\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\r\n\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\r\n              class=\"fa fa-save\"></i> Guardar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}