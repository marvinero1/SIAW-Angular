{"ast":null,"code":"import { ModalAlmacenComponent } from '@components/mantenimiento/inventario/almacen/modal-almacen/modal-almacen.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/api.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@components/inventario/servicio-inventario/servicio-inventario.service\";\nimport * as i4 from \"@components/mantenimiento/persona-catalogo/service-persona/service-persona.service\";\nimport * as i5 from \"@components/mantenimiento/inventario/almacen/servicioalmacen/servicioalmacen.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@services/log-service.service\";\nimport * as i10 from \"@modules/main/footer/servicio-nombre-ventana/nombre-ventana.service\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/card\";\nimport * as i14 from \"@angular/material/tooltip\";\nvar ActualizarStockActualComponent = /** @class */function () {\n  function ActualizarStockActualComponent(api, dialog, servicioInventario, servicioPersona, servicioAlmacen, _formBuilder, datePipe, toastr, log_module, nombre_ventana_service) {\n    this.api = api;\n    this.dialog = dialog;\n    this.servicioInventario = servicioInventario;\n    this.servicioPersona = servicioPersona;\n    this.servicioAlmacen = servicioAlmacen;\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.toastr = toastr;\n    this.log_module = log_module;\n    this.nombre_ventana_service = nombre_ventana_service;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.almacen_get = [];\n    this.inventario_save = [];\n    this.dataform = '';\n    this.nombre_ventana = \"prgactstoactual.vb\";\n    this.ventana = \"Actualizar Stock Actual\";\n    this.detalle = \"ActualizarStock-create\";\n    this.tipo = \"ActualizarStock-CREATE\";\n    var usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.api.getRolUserParaVentana(usuarioLogueado, this.nombre_ventana);\n    this.FormularioData = this.createForm();\n  }\n  ActualizarStockActualComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.mandarNombre();\n    this.servicioAlmacen.disparadorDeAlmacenes.subscribe(function (data) {\n      console.log(\"Recibiendo Persona: \", data);\n      _this.almacen_get = data.almacen;\n    });\n  };\n  ActualizarStockActualComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      id: [this.dataform.id],\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\n      codalmacen: [this.dataform.codalmacen],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  ActualizarStockActualComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:- /inventario/oper/prgcrearinv/\";\n    console.log(data);\n    return this.api.create(\"/inventario/oper/prgcrearinv/\" + this.userConn, data).subscribe({\n      next: function (datav) {\n        _this.inventario_save = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.toastr.success('Guardado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  ActualizarStockActualComponent.prototype.modalAlmacen = function () {\n    this.dialog.open(ModalAlmacenComponent, {\n      width: 'auto',\n      height: 'auto'\n    });\n  };\n  ActualizarStockActualComponent.prototype.mandarNombre = function () {\n    this.nombre_ventana_service.disparadorDeNombreVentana.emit({\n      nombre_vent: this.ventana\n    });\n  };\n  ActualizarStockActualComponent.Éµfac = function ActualizarStockActualComponent_Factory(t) {\n    return new (t || ActualizarStockActualComponent)(i0.ÉµÉµdirectiveInject(i1.ApiService), i0.ÉµÉµdirectiveInject(i2.MatDialog), i0.ÉµÉµdirectiveInject(i3.ServicioInventarioService), i0.ÉµÉµdirectiveInject(i4.ServicePersonaService), i0.ÉµÉµdirectiveInject(i5.ServicioalmacenService), i0.ÉµÉµdirectiveInject(i6.FormBuilder), i0.ÉµÉµdirectiveInject(i7.DatePipe), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(i9.LogService), i0.ÉµÉµdirectiveInject(i10.NombreVentanaService));\n  };\n  ActualizarStockActualComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: ActualizarStockActualComponent,\n    selectors: [[\"app-actualizar-stock-actual\"]],\n    decls: 33,\n    vars: 4,\n    consts: [[1, \"p-2\"], [2, \"background-color\", \"#ffe0c0\"], [1, \"mb-1\"], [2, \"font-size\", \"0.8rem\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"tg-0lax\"], [1, \"input-group\"], [2, \"padding-right\", \"3px\", \"padding-top\", \"7px\"], [\"type\", \"text\", \"formControlName\", \"codalmacen\", \"disabled\", \"\", 2, \"width\", \"60% !important\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", \"matTooltip\", \"Buscar Almacen\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-color\", \"#093070\", \"padding\", \"4px 5px 1px 5px\", \"line-height\", \"0 !important\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [2, \"padding-right\", \"6px\", \"padding-top\", \"7px\"], [\"type\", \"date\", \"formControlName\", \"fecha\", \"required\", \"\"], [\"align\", \"start\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-cog\"]],\n    template: function ActualizarStockActualComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\", 2)(3, \"mat-card-title\", 3);\n        i0.ÉµÉµtext(4, \"Actualizar Stock Actual\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(5, \"mat-card-content\")(6, \"form\", 4);\n        i0.ÉµÉµlistener(\"ngSubmit\", function ActualizarStockActualComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(7, \"div\", 5)(8, \"tr\")(9, \"td\", 6)(10, \"div\", 7)(11, \"mat-label\", 8)(12, \"u\");\n        i0.ÉµÉµtext(13, \"Almacen\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(14, \"input\", 9);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ActualizarStockActualComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.almacen_get.codigo = $event;\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ÉµÉµlistener(\"click\", function ActualizarStockActualComponent_Template_button_click_16_listener() {\n          return ctx.modalAlmacen();\n        });\n        i0.ÉµÉµelement(17, \"i\", 12);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(18, \"td\", 6)(19, \"div\");\n        i0.ÉµÉµtext(20);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(21, \"div\", 5)(22, \"tr\")(23, \"td\", 6)(24, \"div\", 7)(25, \"mat-label\", 13)(26, \"u\");\n        i0.ÉµÉµtext(27, \"A Fecha\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelement(28, \"input\", 14);\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(29, \"mat-card-actions\", 15)(30, \"button\", 16);\n        i0.ÉµÉµelement(31, \"i\", 17);\n        i0.ÉµÉµtext(32, \" \\u00A0Generar \");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(8);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.almacen_get.codigo);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµtextInterpolate(ctx.almacen_get.descripcion);\n        i0.ÉµÉµadvance(10);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i6.ÉµNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName, i11.MatLabel, i12.MatButton, i13.MatCard, i13.MatCardActions, i13.MatCardContent, i13.MatCardHeader, i13.MatCardTitle, i14.MatTooltip],\n    styles: [\".tg[_ngcontent-%COMP%] {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n/*# sourceURL=webpack://./src/app/components/inventario/saldos-inventario/actualizar-stock-actual/actualizar-stock-actual.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9pbnZlbnRhcmlvL3NhbGRvcy1pbnZlbnRhcmlvL2FjdHVhbGl6YXItc3RvY2stYWN0dWFsL2FjdHVhbGl6YXItc3RvY2stYWN0dWFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxpQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLnRnIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return ActualizarStockActualComponent;\n}();\nexport { ActualizarStockActualComponent };","map":{"version":3,"mappings":"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","names":["ModalAlmacenComponent","api","dialog","servicioInventario","servicioPersona","servicioAlmacen","_formBuilder","datePipe","toastr","log_module","nombre_ventana_service","Date","usuarioLogueado","localStorage","getItem","undefined","JSON","parse","getRolUserParaVentana","nombre_ventana","FormularioData","createForm","ActualizarStockActualComponent","mandarNombre","disparadorDeAlmacenes","subscribe","console","log","data","_this","almacen_get","almacen","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","id","dataform","fecha","transform","codalmacen","horareg","fechareg","fecha_actual","usuarioreg","value","errorMessage","create","userConn","next","datav","inventario_save","guardarLog","ventana","detalle","tipo","success","location","reload","error","err","complete","open","width","height","disparadorDeNombreVentana","emit","nombre_vent","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\inventario\\saldos-inventario\\actualizar-stock-actual\\actualizar-stock-actual.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\inventario\\saldos-inventario\\actualizar-stock-actual\\actualizar-stock-actual.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ServicioInventarioService } from '@components/inventario/servicio-inventario/servicio-inventario.service';\r\nimport { ServicePersonaService } from '@components/mantenimiento/persona-catalogo/service-persona/service-persona.service';\r\nimport { ServicioalmacenService } from '@components/mantenimiento/inventario/almacen/servicioalmacen/servicioalmacen.service';\r\nimport { NombreVentanaService } from '@modules/main/footer/servicio-nombre-ventana/nombre-ventana.service';\r\nimport { ApiService } from '@services/api.service';\r\nimport { LogService } from '@services/log-service.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalAlmacenComponent } from '@components/mantenimiento/inventario/almacen/modal-almacen/modal-almacen.component';\r\n\r\n@Component({\r\n  selector: 'app-actualizar-stock-actual',\r\n  templateUrl: './actualizar-stock-actual.component.html',\r\n  styleUrls: ['./actualizar-stock-actual.component.scss']\r\n})\r\nexport class ActualizarStockActualComponent implements OnInit {\r\n\r\n  FormularioData:FormGroup;\r\n  fecha_actual = new Date();\r\n  hora_actual = new Date();\r\n  almacen_get:any=[];\r\n  inventario_save:any=[];\r\n  dataform:any='';\r\n  userConn:any;\r\n\r\n  nombre_ventana: string = \"prgactstoactual.vb\";\r\n  \r\n  public ventana=\"Actualizar Stock Actual\"\r\n  public detalle=\"ActualizarStock-create\";\r\n  public tipo=\"ActualizarStock-CREATE\";\r\n    \r\n  constructor(private api:ApiService, public dialog: MatDialog, public servicioInventario:ServicioInventarioService, \r\n    public servicioPersona:ServicePersonaService, public servicioAlmacen:ServicioalmacenService,private _formBuilder: FormBuilder,\r\n    private datePipe: DatePipe, private toastr: ToastrService, public log_module:LogService,public nombre_ventana_service:NombreVentanaService){ \r\n      \r\n    let usuarioLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n    this.api.getRolUserParaVentana(usuarioLogueado, this.nombre_ventana);\r\n\r\n    this.FormularioData = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mandarNombre();\r\n\r\n    this.servicioAlmacen.disparadorDeAlmacenes.subscribe(data =>{\r\n      console.log(\"Recibiendo Persona: \" , data);\r\n      this.almacen_get = data.almacen;\r\n    });\r\n  }\r\n\r\n  createForm(): FormGroup{\r\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\r\n\r\n    let hour = this.hora_actual.getHours();\r\n    let minuts = this.hora_actual.getMinutes();\r\n    let hora_actual_complete = hour + \":\" + minuts;\r\n  \r\n    return this._formBuilder.group({\r\n      id: [this.dataform.id],\r\n      fecha: [this.datePipe.transform(this.dataform.fecha, \"yyyy-MM-dd\")],\r\n      codalmacen: [this.dataform.codalmacen],\r\n      horareg: [hora_actual_complete],\r\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\r\n      usuarioreg: [usuario_logueado],\r\n    });\r\n  }\r\n\r\n  submitData(){\r\n    let data = this.FormularioData.value;\r\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:- /inventario/oper/prgcrearinv/\";\r\n    console.log(data);\r\n    \r\n    return this.api.create(\"/inventario/oper/prgcrearinv/\"+this.userConn, data)\r\n      .subscribe({\r\n        next: (datav) => {\r\n          this.inventario_save = datav;\r\n        \r\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\r\n          this.toastr.success('Guardado con Exito! ðŸŽ‰');\r\n\r\n          location.reload();\r\n        },\r\n    \r\n        error: (err) => { \r\n          console.log(err, errorMessage);\r\n          this.toastr.error('! NO SE GUARDO !');\r\n        },\r\n        complete: () => { }\r\n      })\r\n  }\r\n\r\n  modalAlmacen(): void {\r\n    this.dialog.open(ModalAlmacenComponent, {\r\n      width: 'auto',\r\n      height: 'auto',\r\n    });\r\n  }\r\n\r\n  mandarNombre(){\r\n    this.nombre_ventana_service.disparadorDeNombreVentana.emit({\r\n      nombre_vent:this.ventana,\r\n    });\r\n}\r\n}\r\n","<div class=\"p-2\">\r\n  <mat-card style=\"background-color: #ffe0c0;\">\r\n    <mat-card-header class=\"mb-1\">\r\n      <mat-card-title style=\"font-size: 0.8rem;\">Actualizar Stock Actual</mat-card-title>\r\n      <!-- <mat-card-subtitle>End</mat-card-subtitle> -->\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <form [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\r\n        <div class=\"row\">\r\n          <tr>\r\n            <td class=\"tg-0lax\">\r\n              <div class=\"input-group\">\r\n                <mat-label style=\"padding-right: 3px;padding-top: 7px;\"><u>Almacen</u></mat-label>\r\n                <input type=\"text\" style=\"width: 60% !important;\" [(ngModel)]=\"almacen_get.codigo\"\r\n                  formControlName=\"codalmacen\" disabled>\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"modalAlmacen();\"\r\n                    style=\"border-color: #093070;padding: 4px 5px 1px 5px;line-height: 0 !important;\"\r\n                    matTooltip=\"Buscar Almacen\">\r\n                    <i class=\"fa fa-search\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td class=\"tg-0lax\">\r\n              <div>{{ almacen_get.descripcion }}</div>\r\n            </td>\r\n          </tr>\r\n        </div>\r\n        <div class=\"row\">\r\n          <tr>\r\n            <td class=\"tg-0lax\">\r\n              <div class=\"input-group\">\r\n                <mat-label style=\"padding-right: 6px;padding-top: 7px;\"><u>A Fecha</u></mat-label>\r\n                <input type=\"date\" formControlName=\"fecha\" required>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </div>\r\n        <mat-card-actions align=\"start\">\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\">\r\n            <i class=\"fa fa-cog\"></i> &nbsp;Generar\r\n          </button>\r\n        </mat-card-actions>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}