{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} left New left position of the element.\n   */\n  setPosition(top, left) {\n    if (top !== undefined) {\n      this._element.style.top = top + UNIT;\n    }\n    if (left !== undefined) {\n      this._element.style.left = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    return {\n      top: this._element.style.top ? parseInt(this._element.style.top, 10) : 0,\n      left: this._element.style.left ? parseInt(this._element.style.left, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (width) {\n      this._element.style.width = width + UNIT;\n    }\n    if (height) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} left New margin left of the element.\n   */\n  setOffset(top, left) {\n    if (top) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (left) {\n      this._element.style.marginLeft = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    return {\n      top: this._element.style.marginTop ? parseInt(this._element.style.marginTop, 10) : 0,\n      left: this._element.style.marginLeft ? parseInt(this._element.style.marginLeft, 10) : 0\n    };\n  }\n}\nexport default BaseUI;","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","STATE_INITIALIZED","STATE_BUILT","STATE_APPENDED","UNIT","BaseUI","constructor","hotInstance","hot","appendTo","wrapper","appendChild","_element","state","build","rootDocument","createElement","destroy","isAppended","parentElement","removeChild","isBuilt","setPosition","top","left","undefined","style","getPosition","parseInt","setSize","width","height","getSize","setOffset","marginTop","marginLeft","getOffset"],"sources":["C:/laragon/www/SIAW-Angular-B/node_modules/handsontable/plugins/manualRowMove/ui/_base.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nconst STATE_INITIALIZED = 0;\nconst STATE_BUILT = 1;\nconst STATE_APPENDED = 2;\nconst UNIT = 'px';\n\n/**\n * @private\n */\nclass BaseUI {\n  constructor(hotInstance) {\n    /**\n     * Instance of Handsontable.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * DOM element representing the ui element.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    _defineProperty(this, \"_element\", null);\n    /**\n     * Flag which determines build state of element.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"state\", STATE_INITIALIZED);\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Add created UI elements to table.\n   *\n   * @param {HTMLElement} wrapper Element which are parent for our UI element.\n   */\n  appendTo(wrapper) {\n    wrapper.appendChild(this._element);\n    this.state = STATE_APPENDED;\n  }\n\n  /**\n   * Method for create UI element. Only create, without append to table.\n   */\n  build() {\n    if (this.state !== STATE_INITIALIZED) {\n      return;\n    }\n    this._element = this.hot.rootDocument.createElement('div');\n    this.state = STATE_BUILT;\n  }\n\n  /**\n   * Method for remove UI element.\n   */\n  destroy() {\n    if (this.isAppended()) {\n      this._element.parentElement.removeChild(this._element);\n    }\n    this._element = null;\n    this.state = STATE_INITIALIZED;\n  }\n\n  /**\n   * Check if UI element are appended.\n   *\n   * @returns {boolean}\n   */\n  isAppended() {\n    return this.state === STATE_APPENDED;\n  }\n\n  /**\n   * Check if UI element are built.\n   *\n   * @returns {boolean}\n   */\n  isBuilt() {\n    return this.state >= STATE_BUILT;\n  }\n\n  /**\n   * Setter for position.\n   *\n   * @param {number} top New top position of the element.\n   * @param {number} left New left position of the element.\n   */\n  setPosition(top, left) {\n    if (top !== undefined) {\n      this._element.style.top = top + UNIT;\n    }\n    if (left !== undefined) {\n      this._element.style.left = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains left and top position of the element.\n   */\n  getPosition() {\n    return {\n      top: this._element.style.top ? parseInt(this._element.style.top, 10) : 0,\n      left: this._element.style.left ? parseInt(this._element.style.left, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element size.\n   *\n   * @param {number} width New width of the element.\n   * @param {number} height New height of the element.\n   */\n  setSize(width, height) {\n    if (width) {\n      this._element.style.width = width + UNIT;\n    }\n    if (height) {\n      this._element.style.height = height + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element position.\n   *\n   * @returns {object} Object contains height and width of the element.\n   */\n  getSize() {\n    return {\n      width: this._element.style.width ? parseInt(this._element.style.width, 10) : 0,\n      height: this._element.style.height ? parseInt(this._element.style.height, 10) : 0\n    };\n  }\n\n  /**\n   * Setter for the element offset. Offset means marginTop and marginLeft of the element.\n   *\n   * @param {number} top New margin top of the element.\n   * @param {number} left New margin left of the element.\n   */\n  setOffset(top, left) {\n    if (top) {\n      this._element.style.marginTop = top + UNIT;\n    }\n    if (left) {\n      this._element.style.marginLeft = left + UNIT;\n    }\n  }\n\n  /**\n   * Getter for the element offset.\n   *\n   * @returns {object} Object contains top and left offset of the element.\n   */\n  getOffset() {\n    return {\n      top: this._element.style.marginTop ? parseInt(this._element.style.marginTop, 10) : 0,\n      left: this._element.style.marginLeft ? parseInt(this._element.style.marginLeft, 10) : 0\n    };\n  }\n}\nexport default BaseUI;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}