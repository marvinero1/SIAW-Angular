{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@services/api.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@services/log-service.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nvar BancoEditComponent = /** @class */function () {\n  function BancoEditComponent(_formBuilder, datePipe, spinner, api, dialogRef, _snackBar, log_module, toastr, datanumRetBancEdit) {\n    this._formBuilder = _formBuilder;\n    this.datePipe = datePipe;\n    this.spinner = spinner;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this._snackBar = _snackBar;\n    this.log_module = log_module;\n    this.toastr = toastr;\n    this.datanumRetBancEdit = datanumRetBancEdit;\n    this.fecha_actual = new Date();\n    this.hora_actual = new Date();\n    this.dataform = '';\n    this.userLogueado = [];\n    this.banco_post = [];\n    this.banco_modat_data = [];\n    this.inputValue = null;\n    this.ventana = \"Banco-create\";\n    this.detalle = \"Banco-detalle\";\n    this.tipo = \"transaccion-Banco-PUT\";\n    this.banco_modat_data = datanumRetBancEdit.datanumRetBancEdit;\n    this.codigo_banco = this.banco_modat_data.codigo;\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    this.FormularioData = this.createForm();\n  }\n  BancoEditComponent.prototype.ngOnInit = function () {};\n  BancoEditComponent.prototype.createForm = function () {\n    var usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n    var hour = this.hora_actual.getHours();\n    var minuts = this.hora_actual.getMinutes();\n    var hora_actual_complete = hour + \":\" + minuts;\n    return this._formBuilder.group({\n      codigo: [this.codigo_banco],\n      nombre: [this.dataform.nombre, Validators.compose([Validators.required])],\n      direccion: [this.dataform.direccion],\n      nit: [this.dataform.nit, Validators.pattern(/^-?\\d+$/)],\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual, \"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado]\n    });\n  };\n  BancoEditComponent.prototype.submitData = function () {\n    var _this = this;\n    var data = this.FormularioData.value;\n    var errorMessage = \"La Ruta presenta fallos al hacer la creacion\" + \"Ruta:-- /fondos/mant/fntiporetiro/\";\n    return this.api.update(\"/ctsxcob/mant/cobanco/\" + this.userConn + \"/\" + this.codigo_banco, data).subscribe({\n      next: function (datav) {\n        _this.banco_post = datav;\n        _this.log_module.guardarLog(_this.ventana, _this.detalle, _this.tipo);\n        _this.onNoClick();\n        _this.spinner.show();\n        _this.toastr.success('Editado con Exito! ðŸŽ‰');\n        location.reload();\n      },\n      error: function (err) {\n        console.log(err, errorMessage);\n        _this.toastr.error('! NO SE GUARDO !');\n      },\n      complete: function () {}\n    });\n  };\n  BancoEditComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  BancoEditComponent.prototype.onInputChange = function (value) {\n    // Validar y formatear el valor ingresado\n    var parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  };\n  BancoEditComponent.Éµfac = function BancoEditComponent_Factory(t) {\n    return new (t || BancoEditComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.DatePipe), i0.ÉµÉµdirectiveInject(i3.NgxSpinnerService), i0.ÉµÉµdirectiveInject(i4.ApiService), i0.ÉµÉµdirectiveInject(i5.MatDialogRef), i0.ÉµÉµdirectiveInject(i6.MatSnackBar), i0.ÉµÉµdirectiveInject(i7.LogService), i0.ÉµÉµdirectiveInject(i8.ToastrService), i0.ÉµÉµdirectiveInject(MAT_DIALOG_DATA));\n  };\n  BancoEditComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: BancoEditComponent,\n    selectors: [[\"app-banco-edit\"]],\n    decls: 35,\n    vars: 6,\n    consts: [[2, \"background-color\", \"#f0f0f0\"], [1, \"p-2\"], [\"mat-dialog-title\", \"\"], [2, \"font-size\", \"0.6rem\", \"padding\", \"0 24px 0px\"], [\"mat-dialog-content\", \"\"], [1, \"container\"], [1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-2\"], [1, \"col-md\"], [\"appearance\", \"outline\", 1, \"example-full-small\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"nombre\", \"maxlength\", \"30\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"direccion\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"nit\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\", 1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"fa\", \"fa-arrow-left\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"fa\", \"fa-save\"]],\n    template: function BancoEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ÉµÉµtext(3, \"Editar Banco: \");\n        i0.ÉµÉµelementStart(4, \"strong\");\n        i0.ÉµÉµtext(5);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(6, \"div\", 3);\n        i0.ÉµÉµtext(7, \"Los campos (*) son obligatorios\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"form\", 6);\n        i0.ÉµÉµlistener(\"ngSubmit\", function BancoEditComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.submitData();\n        });\n        i0.ÉµÉµelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"mat-form-field\", 9)(14, \"mat-label\");\n        i0.ÉµÉµtext(15, \"Nombre \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(16, \"input\", 10);\n        i0.ÉµÉµlistener(\"ngModelChange\", function BancoEditComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.banco_modat_data.nombre = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(17, \"div\", 7)(18, \"div\", 8)(19, \"mat-form-field\", 9)(20, \"mat-label\");\n        i0.ÉµÉµtext(21, \"Direccion \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(22, \"input\", 11);\n        i0.ÉµÉµlistener(\"ngModelChange\", function BancoEditComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.banco_modat_data.direccion = $event;\n        });\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(23, \"div\", 8)(24, \"mat-form-field\", 12)(25, \"mat-label\");\n        i0.ÉµÉµtext(26, \"NIT\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(27, \"input\", 13);\n        i0.ÉµÉµlistener(\"ngModelChange\", function BancoEditComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.banco_modat_data.nit = $event;\n        });\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(28, \"div\", 14)(29, \"a\", 15);\n        i0.ÉµÉµlistener(\"click\", function BancoEditComponent_Template_a_click_29_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ÉµÉµelement(30, \"i\", 16);\n        i0.ÉµÉµtext(31, \" Atras\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(32, \"button\", 17);\n        i0.ÉµÉµelement(33, \"i\", 18);\n        i0.ÉµÉµtext(34, \" Guardar\");\n        i0.ÉµÉµelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµtextInterpolate(ctx.banco_modat_data.codigo);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.FormularioData);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.banco_modat_data.nombre);\n        i0.ÉµÉµadvance(6);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.banco_modat_data.direccion);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.banco_modat_data.nit);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"disabled\", !ctx.FormularioData.valid);\n      }\n    },\n    dependencies: [i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i9.MatFormField, i9.MatLabel, i10.MatInput, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i11.MatAnchor, i11.MatButton],\n    styles: [\".mat-mdc-form-field[_ngcontent-%COMP%] {\\n  width: inherit !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/mantenimiento/fondos/banco/banco-edit/banco-edit.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYW50ZW5pbWllbnRvL2ZvbmRvcy9iYW5jby9iYW5jby1lZGl0L2JhbmNvLWVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1tZGMtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return BancoEditComponent;\n}();\nexport { BancoEditComponent };","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","_formBuilder","datePipe","spinner","api","dialogRef","_snackBar","log_module","toastr","datanumRetBancEdit","Date","banco_modat_data","codigo_banco","codigo","userConn","localStorage","getItem","undefined","JSON","parse","userLogueado","FormularioData","createForm","BancoEditComponent","usuario_logueado","hour","hora_actual","getHours","minuts","getMinutes","hora_actual_complete","group","nombre","dataform","compose","required","direccion","nit","pattern","horareg","fechareg","transform","fecha_actual","usuarioreg","data","value","errorMessage","update","subscribe","next","datav","_this","banco_post","guardarLog","ventana","detalle","tipo","onNoClick","show","success","location","reload","error","err","console","log","complete","close","parsedValue","parseFloat","isNaN","Number","isInteger","inputValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\banco\\banco-edit\\banco-edit.component.ts","C:\\laragon\\www\\SIAW-Angular-B\\src\\app\\components\\mantenimiento\\fondos\\banco\\banco-edit\\banco-edit.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '@services/api.service';\nimport { LogService } from '@services/log-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-banco-edit',\n  templateUrl: './banco-edit.component.html',\n  styleUrls: ['./banco-edit.component.scss']\n})\nexport class BancoEditComponent implements OnInit {\n\n  FormularioData:FormGroup;\n  fecha_actual = new Date();\n  hora_actual = new Date();\n  dataform:any='';\n  userConn: any;\n  codigo_banco:any;\n  userLogueado: any = [];\n  banco_post: any = [];\n  banco_modat_data: any = [];\n  inputValue: number | null = null;\n\n  public ventana=\"Banco-create\"\n  public detalle=\"Banco-detalle\";\n  public tipo=\"transaccion-Banco-PUT\";\n\n  constructor(private _formBuilder: FormBuilder, private datePipe: DatePipe, private spinner: NgxSpinnerService,\n    private api:ApiService, public dialogRef: MatDialogRef<BancoEditComponent>, public _snackBar: MatSnackBar,\n    public log_module: LogService, private toastr: ToastrService, @Inject(MAT_DIALOG_DATA) public datanumRetBancEdit: any) {\n    \n    this.banco_modat_data = datanumRetBancEdit.datanumRetBancEdit;\n    this.codigo_banco = this.banco_modat_data.codigo\n\n    this.userConn = localStorage.getItem(\"user_conn\") !== undefined ? JSON.parse(localStorage.getItem(\"user_conn\")) : null;\n    this.userLogueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    this.FormularioData = this.createForm();\n  } \n\n  ngOnInit() {\n  }\n\n  createForm(): FormGroup{\n    let usuario_logueado = localStorage.getItem(\"usuario_logueado\") !== undefined ? JSON.parse(localStorage.getItem(\"usuario_logueado\")) : null;\n\n    let hour = this.hora_actual.getHours();\n    let minuts = this.hora_actual.getMinutes();\n    let hora_actual_complete = hour + \":\" + minuts;  \n\n    return this._formBuilder.group({\n      codigo: [this.codigo_banco],\n      nombre: [this.dataform.nombre, Validators.compose([Validators.required])],\n      direccion: [this.dataform.direccion],\n      nit: [this.dataform.nit, Validators.pattern(/^-?\\d+$/)],\n\n      horareg: [hora_actual_complete],\n      fechareg: [this.datePipe.transform(this.fecha_actual,\"yyyy-MM-dd\")],\n      usuarioreg: [usuario_logueado],\n    });\n  }\n\n  submitData(){\n    let data = this.FormularioData.value;\n    let errorMessage = \"La Ruta presenta fallos al hacer la creacion\"+\"Ruta:-- /fondos/mant/fntiporetiro/\";\n    \n    return this.api.update(\"/ctsxcob/mant/cobanco/\"+this.userConn+\"/\"+this.codigo_banco, data)\n      .subscribe({\n        next: (datav) => {\n          this.banco_post = datav;\n\n          this.log_module.guardarLog(this.ventana,this.detalle, this.tipo);\n          this.onNoClick();\n          this.spinner.show();\n          this.toastr.success('Editado con Exito! ðŸŽ‰');\n\n          location.reload();\n        },\n    \n        error: (err) => { \n          console.log(err, errorMessage);\n          this.toastr.error('! NO SE GUARDO !');\n        },\n        complete: () => { }\n      })\n  }\n  \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n  onInputChange(value: string) {\n    // Validar y formatear el valor ingresado\n    const parsedValue = parseFloat(value);\n\n    if (!isNaN(parsedValue) && Number.isInteger(parsedValue)) {\n      this.inputValue = parsedValue;\n    } else {\n      this.inputValue = null;\n    }\n  }\n}\n","<div style=\"background-color: #f0f0f0;\">\n  <div class=\"p-2\">\n    <h1 mat-dialog-title>Editar Banco: <strong>{{ banco_modat_data.codigo }}</strong></h1>\n    <div style=\"font-size: 0.6rem;padding: 0 24px 0px;\">Los campos (*) son obligatorios</div>\n  </div>\n\n  <div mat-dialog-content>\n    <div class=\"container\">\n      <form class=\"example-form\" [formGroup]=\"FormularioData\" (ngSubmit)=\"submitData()\">\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>Nombre </mat-label>\n              <input matInput type=\"text\" formControlName=\"nombre\" [(ngModel)]=\"banco_modat_data.nombre\" maxlength=\"30\"\n                required>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"row mb-2\">\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\" class=\"example-full-small\">\n              <mat-label>Direccion </mat-label>\n              <input type=\"text\" matInput formControlName=\"direccion\" [(ngModel)]=\"banco_modat_data.direccion\" required>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-md\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>NIT</mat-label>\n              <input type=\"text\" matInput formControlName=\"nit\" [(ngModel)]=\"banco_modat_data.nit\">\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class=\"mat-dialog-actions\" mat-dialog-actions align=\"end\">\n          <a mat-button (click)=\"onNoClick()\"><i class=\"fa fa-arrow-left\"></i> Atras</a>\n\n          <button mat-raised-button color=\"primary\" [disabled]=\"!FormularioData.valid\" type=\"submit\"><i\n              class=\"fa fa-save\"></i> Guardar</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}